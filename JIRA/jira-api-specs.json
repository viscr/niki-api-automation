{
  "name": "Jira",
  "desc": "Jira is a proprietary issue tracking product developed by Atlassian that allows bug tracking and agile project management.",
  "services": [
    {
      "name": "Announcement banner",
      "desc": "This resource represents an announcement banner. Use it to retrieve and update banner configuration.",
      "query": [
        {
          "name": "getBanner",
          "desc": "Get announcement banner configuration",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setBanner",
          "desc": "Update announcement banner configuration",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if an invalid parameter is passed.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue custom field values (apps)",
      "desc": "This resource represents the values of custom fields added by [Forge apps](https://developer.atlassian.com/platform/forge/). Use it to update the value of a custom field on issues.",
      "query": [],
      "action": [
        {
          "name": "updateMultipleCustomFieldValues",
          "desc": "Update custom fields",
          "input": [
            {
              "name": "generateChangelog",
              "desc": "Whether to generate a changelog for this update.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateCustomFieldValue",
          "desc": "Update custom field value",
          "input": [
            {
              "name": "fieldIdOrKey",
              "desc": "The ID or key of the custom field. For example, `customfield_10010`.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "generateChangelog",
              "desc": "Whether to generate a changelog for this update.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue custom field configuration (apps)",
      "desc": "This resource represents configurations stored against a custom field context by a [Forge app](https://developer.atlassian.com/platform/forge/). Configurations are information used by the Forge app at runtime to determine how to handle or process the data in a custom field in a given context. Use this resource to set and read configurations.",
      "query": [
        {
          "name": "getCustomFieldConfiguration",
          "desc": "Get custom field configurations",
          "input": [
            {
              "name": "fieldIdOrKey",
              "desc": "The ID or key of the custom field, for example `customfield_10000`.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The list of configuration IDs. To include multiple configurations, separate IDs with an ampersand: `id=10000&id=10001`. Can't be provided with `fieldContextId`, `issueId`, `projectKeyOrId`, or `issueTypeId`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "fieldContextId",
              "desc": "The list of field context IDs. To include multiple field contexts, separate IDs with an ampersand: `fieldContextId=10000&fieldContextId=10001`. Can't be provided with `id`, `issueId`, `projectKeyOrId`, or `issueTypeId`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "issueId",
              "desc": "The ID of the issue to filter results by. If the issue doesn't exist, an empty list is returned. Can't be provided with `projectKeyOrId`, or `issueTypeId`.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "projectKeyOrId",
              "desc": "The ID or key of the project to filter results by. Must be provided with `issueTypeId`. Can't be provided with `issueId`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "issueTypeId",
              "desc": "The ID of the issue type to filter results by. Must be provided with `projectKeyOrId`. Can't be provided with `issueId`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "updateCustomFieldConfiguration",
          "desc": "Update custom field configurations",
          "input": [
            {
              "name": "fieldIdOrKey",
              "desc": "The ID or key of the custom field, for example `customfield_10000`.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Jira settings",
      "desc": "This resource represents various settings in Jira. Use it to get and update Jira settings and properties.",
      "query": [
        {
          "name": "getApplicationProperty",
          "desc": "Get application property",
          "input": [
            {
              "name": "key",
              "desc": "The key of the application property.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "permissionLevel",
              "desc": "The permission level of all items being returned in the list.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "keyFilter",
              "desc": "When a `key` isn't provided, this filters the list of results by the application property `key` using a regular expression. For example, using `jira.lf.*` will return all application properties with keys that start with *jira.lf.*.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getAdvancedSettings",
          "desc": "Get advanced settings",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getConfiguration",
          "desc": "Get global settings",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setApplicationProperty",
          "desc": "Set application property",
          "input": [
            {
              "name": "id",
              "desc": "The key of the application property to update.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Application roles",
      "desc": "This resource represents application roles. Use it to get details of an application role or all application roles.",
      "query": [
        {
          "name": "getAllApplicationRoles",
          "desc": "Get all application roles",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getApplicationRole",
          "desc": "Get application role",
          "input": [
            {
              "name": "key",
              "desc": "The key of the application role. Use the [Get all application roles](#api-rest-api-3-applicationrole-get) operation to get the key for each application role.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Issue attachments",
      "desc": "This resource represents issue attachments and the attachment settings for Jira. Use it to get the metadata for an attachment, delete an attachment, and view the metadata for the contents of an attachment. Also, use it to get the attachment settings for Jira.",
      "query": [
        {
          "name": "getAttachmentContent",
          "desc": "Get attachment content",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the attachment.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "redirect",
              "desc": "Whether a redirect is provided for the attachment download. Clients that do not automatically follow redirects can set this to `false` to avoid making multiple requests to download the attachment.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful when `redirect` is set to `false`.",
              "data_type": "object"
            }
          ]
        },
        {
          "name": "getAttachmentMeta",
          "desc": "Get Jira attachment settings",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAttachmentThumbnail",
          "desc": "Get attachment thumbnail",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the attachment.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "redirect",
              "desc": "Whether a redirect is provided for the attachment download. Clients that do not automatically follow redirects can set this to `false` to avoid making multiple requests to download the attachment.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "fallbackToDefault",
              "desc": "Whether a default thumbnail is returned when the requested thumbnail is not found.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "width",
              "desc": "The maximum width to scale the thumbnail to.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "height",
              "desc": "The maximum height to scale the thumbnail to.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful when `redirect` is set to `false`.",
              "data_type": "object"
            }
          ]
        },
        {
          "name": "getAttachment",
          "desc": "Get attachment metadata",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the attachment.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "expandAttachmentForHumans",
          "desc": "Get all metadata for an expanded attachment",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the attachment.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful. If an empty list is returned in the response, the attachment is empty, corrupt, or not an archive.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "expandAttachmentForMachines",
          "desc": "Get contents metadata for an expanded attachment",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the attachment.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful. If an empty list is returned in the response, the attachment is empty, corrupt, or not an archive.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "removeAttachment",
          "desc": "Delete attachment",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the attachment.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "addAttachment",
          "desc": "Add attachment",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue that attachments are added to.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Audit records",
      "desc": "This resource represents audits that record activities undertaken in Jira. Use it to get a list of audit records.",
      "query": [
        {
          "name": "getAuditRecords",
          "desc": "Get audit records",
          "input": [
            {
              "name": "offset",
              "desc": "The number of records to skip before returning the first result.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "limit",
              "desc": "The maximum number of results to return.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "filter",
              "desc": "The strings to match with audit field content, space separated.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "from",
              "desc": "The date and time on or after which returned audit records must have been created. If `to` is provided `from` must be before `to` or no audit records are returned.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "to",
              "desc": "The date and time on or before which returned audit results must have been created. If `from` is provided `to` must be after `from` or no audit records are returned.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Avatars",
      "desc": "This resource represents system and custom avatars. Use it to obtain the details of system or custom avatars, add and remove avatars from a project or issue type, and obtain avatar images.",
      "query": [
        {
          "name": "getAllSystemAvatars",
          "desc": "Get system avatars by type",
          "input": [
            {
              "name": "type",
              "desc": "The avatar type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAvatars",
          "desc": "Get avatars",
          "input": [
            {
              "name": "type",
              "desc": "The avatar type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "entityId",
              "desc": "The ID of the item the avatar is associated with.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAvatarImageByType",
          "desc": "Get avatar image by type",
          "input": [
            {
              "name": "type",
              "desc": "The icon type of the avatar.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "size",
              "desc": "The size of the avatar image. If not provided the default size is returned.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "format",
              "desc": "The format to return the avatar image in. If not provided the original content format is returned.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "object"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if an avatar is not found or an avatar matching the requested size is not found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAvatarImageByID",
          "desc": "Get avatar image by ID",
          "input": [
            {
              "name": "type",
              "desc": "The icon type of the avatar.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the avatar.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "size",
              "desc": "The size of the avatar image. If not provided the default size is returned.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "format",
              "desc": "The format to return the avatar image in. If not provided the original content format is returned.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "object"
            },
            {
              "name": "400",
              "desc": "Returned if the request is not valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if an avatar is not found or an avatar matching the requested size is not found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAvatarImageByOwner",
          "desc": "Get avatar image by owner",
          "input": [
            {
              "name": "type",
              "desc": "The icon type of the avatar.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "entityId",
              "desc": "The ID of the project or issue type the avatar belongs to.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "size",
              "desc": "The size of the avatar image. If not provided the default size is returned.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "format",
              "desc": "The format to return the avatar image in. If not provided the original content format is returned.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "object"
            },
            {
              "name": "400",
              "desc": "Returned if the request is not valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if an avatar is not found or an avatar matching the requested size is not found.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "storeAvatar",
          "desc": "Load avatar",
          "input": [
            {
              "name": "type",
              "desc": "The avatar type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "entityId",
              "desc": "The ID of the item the avatar is associated with.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "x",
              "desc": "The X coordinate of the top-left corner of the crop region.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "y",
              "desc": "The Y coordinate of the top-left corner of the crop region.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "size",
              "desc": "The length of each side of the crop region.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteAvatar",
          "desc": "Delete avatar",
          "input": [
            {
              "name": "type",
              "desc": "The avatar type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "owningObjectId",
              "desc": "The ID of the item the avatar is associated with.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the avatar.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue comments",
      "desc": "This resource represents issue comments. Use it to:\n\n *  get, create, update, and delete a comment from an issue.\n *  get all comments from issue.\n *  get a list of comments by comment ID.",
      "query": [
        {
          "name": "getComments",
          "desc": "Get comments",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field. Accepts *created* to sort comments by their created date.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getComment",
          "desc": "Get comment",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the comment.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "getCommentsByIds",
          "desc": "Get comments by IDs",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedBody` Returns the comment body rendered in HTML.\n *  `properties` Returns the comment's properties.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addComment",
          "desc": "Add comment",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateComment",
          "desc": "Update comment",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the comment.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "notifyUsers",
              "desc": "Whether users are notified when a comment is updated.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "overrideEditableFlag",
              "desc": "Whether screen security is overridden to enable uneditable fields to be edited. Available to Connect app users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about comments in the response. This parameter accepts `renderedBody`, which returns the comment body rendered in HTML.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteComment",
          "desc": "Delete comment",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the comment.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue comment properties",
      "desc": "This resource represents [issue comment](#api-group-Issue-comments) properties, which provides for storing custom data against an issue comment. Use is to get, set, and delete issue comment properties as well as obtain the keys of all properties on a comment. Comment properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "query": [
        {
          "name": "getCommentPropertyKeys",
          "desc": "Get comment property keys",
          "input": [
            {
              "name": "commentId",
              "desc": "The ID of the comment.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getCommentProperty",
          "desc": "Get comment property",
          "input": [
            {
              "name": "commentId",
              "desc": "The ID of the comment.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setCommentProperty",
          "desc": "Set comment property",
          "input": [
            {
              "name": "commentId",
              "desc": "The ID of the comment.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property. The maximum length is 255 characters.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the comment property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned if the comment property is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteCommentProperty",
          "desc": "Delete comment property",
          "input": [
            {
              "name": "commentId",
              "desc": "The ID of the comment.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Project components",
      "desc": "This resource represents project components. Use it to get, create, update, and delete project components. Also get components for project and get a count of issues by component.",
      "query": [
        {
          "name": "getComponent",
          "desc": "Get component",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the component.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getComponentRelatedIssues",
          "desc": "Get component issues count",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the component.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getProjectComponentsPaginated",
          "desc": "Get project components paginated",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by the component description.\n *  `issueCount` Sorts by the count of issues associated with the component.\n *  `lead` Sorts by the user key of the component's project lead.\n *  `name` Sorts by component name.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "query",
              "desc": "Filter the results using a literal string. Components with a matching `name` or `description` are returned (case insensitive).",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getProjectComponents",
          "desc": "Get project components",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createComponent",
          "desc": "Create component",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateComponent",
          "desc": "Update component",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the component.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteComponent",
          "desc": "Delete component",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the component.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "moveIssuesTo",
              "desc": "The ID of the component to replace the deleted component. If this value is null no replacement is made.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Time tracking",
      "desc": "This resource represents time tracking and time tracking providers. Use it to get and set the time tracking provider, get and set the time tracking options, and disable time tracking.",
      "query": [
        {
          "name": "getSelectedTimeTrackingImplementation",
          "desc": "Get selected time tracking provider",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful and time tracking is enabled.",
              "data_type": "unknown"
            },
            {
              "name": "204",
              "desc": "Returned if the request is successful but time tracking is disabled.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAvailableTimeTrackingImplementations",
          "desc": "Get all time tracking providers",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getSharedTimeTrackingConfiguration",
          "desc": "Get time tracking settings",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "selectTimeTrackingImplementation",
          "desc": "Select time tracking provider",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setSharedTimeTrackingConfiguration",
          "desc": "Set time tracking settings",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue custom field options",
      "desc": "This resource represents custom issue field select list options created in Jira or using the REST API. This resource supports the following field types:\n\n *  Checkboxes.\n *  Radio Buttons.\n *  Select List (single choice).\n *  Select List (multiple choices).\n *  Select List (cascading).\n\nSee [Issue custom field options (apps)](#api-group-Issue-custom-field-options--apps-) to manipulate custom issue field select list options created by a Connect app.\n\nUse it to retrieve, create, update, order, and delete custom field options.",
      "query": [
        {
          "name": "getCustomFieldOption",
          "desc": "Get custom field option",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the custom field option.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getOptionsForContext",
          "desc": "Get custom field options (context)",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "optionId",
              "desc": "The ID of the option.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "onlyOptions",
              "desc": "Whether only options are returned.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "updateCustomFieldOption",
          "desc": "Update custom field options (context)",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "createCustomFieldOption",
          "desc": "Create custom field options (context)",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "reorderCustomFieldOptions",
          "desc": "Reorder custom field options (context)",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if options are reordered.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteCustomFieldOption",
          "desc": "Delete custom field options (context)",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context from which an option should be deleted.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "optionId",
              "desc": "The ID of the option to delete.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Dashboards",
      "desc": "This resource represents dashboards. Use it to obtain the details of dashboards as well as get, create, update, or remove item properties and gadgets from dashboards.",
      "query": [
        {
          "name": "getAllDashboards",
          "desc": "Get all dashboards",
          "input": [
            {
              "name": "filter",
              "desc": "The filter applied to the list of dashboards. Valid values are:\n\n *  `favourite` Returns dashboards the user has marked as favorite.\n *  `my` Returns dashboards owned by the user.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAllAvailableDashboardGadgets",
          "desc": "Get available gadgets",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "400 response",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getDashboardsPaginated",
          "desc": "Search for dashboards",
          "input": [
            {
              "name": "dashboardName",
              "desc": "String used to perform a case-insensitive partial match with `name`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "User account ID used to return dashboards with the matching `owner.accountId`. This parameter cannot be used with the `owner` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "owner",
              "desc": "This parameter is deprecated because of privacy changes. Use `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return dashboards with the matching `owner.name`. This parameter cannot be used with the `accountId` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupname",
              "desc": "As a group's name can change, use of `groupId` is recommended. Group name used to return dashboards that are shared with a group that matches `sharePermissions.group.name`. This parameter cannot be used with the `groupId` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "Group ID used to return dashboards that are shared with a group that matches `sharePermissions.group.groupId`. This parameter cannot be used with the `groupname` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectId",
              "desc": "Project ID used to returns dashboards that are shared with a project that matches `sharePermissions.project.id`.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by dashboard description. Note that this sort works independently of whether the expand to display the description field is in use.\n *  `favourite_count` Sorts by dashboard popularity.\n *  `id` Sorts by dashboard ID.\n *  `is_favourite` Sorts by whether the dashboard is marked as a favorite.\n *  `name` Sorts by dashboard name.\n *  `owner` Sorts by dashboard owner name.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "status",
              "desc": "The status to filter by. It may be active, archived or deleted.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about dashboard in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `description` Returns the description of the dashboard.\n *  `owner` Returns the owner of the dashboard.\n *  `viewUrl` Returns the URL that is used to view the dashboard.\n *  `favourite` Returns `isFavourite`, an indicator of whether the user has set the dashboard as a favorite.\n *  `favouritedCount` Returns `popularity`, a count of how many users have set this dashboard as a favorite.\n *  `sharePermissions` Returns details of the share permissions defined for the dashboard.\n *  `editPermissions` Returns details of the edit permissions defined for the dashboard.\n *  `isWritable` Returns whether the current user has permission to edit the dashboard.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if:\n\n *  `orderBy` is invalid.\n *  `expand` includes an invalid value.\n *  `accountId` and `owner` are provided.\n *  `groupname` and `groupId` are provided.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "401 response",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAllGadgets",
          "desc": "Get gadgets",
          "input": [
            {
              "name": "dashboardId",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "moduleKey",
              "desc": "The list of gadgets module keys. To include multiple module keys, separate module keys with ampersand: `moduleKey=key:one&moduleKey=key:two`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "uri",
              "desc": "The list of gadgets URIs. To include multiple URIs, separate URIs with ampersand: `uri=/rest/example/uri/1&uri=/rest/example/uri/2`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "gadgetId",
              "desc": "The list of gadgets IDs. To include multiple IDs, separate IDs with ampersand: `gadgetId=10000&gadgetId=10001`.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the dashboard is not found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getDashboardItemPropertyKeys",
          "desc": "Get dashboard item property keys",
          "input": [
            {
              "name": "dashboardId",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "itemId",
              "desc": "The ID of the dashboard item.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getDashboardItemProperty",
          "desc": "Get dashboard item property",
          "input": [
            {
              "name": "dashboardId",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "itemId",
              "desc": "The ID of the dashboard item.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the dashboard item property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getDashboard",
          "desc": "Get dashboard",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "400 response",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createDashboard",
          "desc": "Create dashboard",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is not valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "bulkEditDashboards",
          "desc": "Bulk edit dashboards",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is not valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addGadget",
          "desc": "Add gadget to dashboard",
          "input": [
            {
              "name": "dashboardId",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the dashboard is not found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateGadget",
          "desc": "Update gadget on dashboard",
          "input": [
            {
              "name": "dashboardId",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "gadgetId",
              "desc": "The ID of the gadget.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the gadget or the dashboard is not found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeGadget",
          "desc": "Remove gadget from dashboard",
          "input": [
            {
              "name": "dashboardId",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "gadgetId",
              "desc": "The ID of the gadget.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the gadget or the dashboard is not found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setDashboardItemProperty",
          "desc": "Set dashboard item property",
          "input": [
            {
              "name": "dashboardId",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "itemId",
              "desc": "The ID of the dashboard item.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the dashboard item property. The maximum length is 255 characters. For dashboard items with a spec URI and no complete module key, if the provided propertyKey is equal to \"config\", the request body's JSON must be an object with all keys and values as strings.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the dashboard item property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned if the dashboard item property is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteDashboardItemProperty",
          "desc": "Delete dashboard item property",
          "input": [
            {
              "name": "dashboardId",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "itemId",
              "desc": "The ID of the dashboard item.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the dashboard item property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "updateDashboard",
          "desc": "Update dashboard",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the dashboard to update.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is not valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the dashboard is not found or the dashboard is not owned by the user.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteDashboard",
          "desc": "Delete dashboard",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the dashboard.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "400",
              "desc": "400 response",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "copyDashboard",
          "desc": "Copy dashboard",
          "input": [
            {
              "name": "id",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is not valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the dashboard is not found or the dashboard is not owned by or shared with the user.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issues",
      "desc": "This resource represents Jira issues. Use it to:\n\n *  create or edit issues, individually or in bulk.\n *  retrieve metadata about the options for creating or editing issues.\n *  delete an issue.\n *  assign a user to an issue.\n *  get issue changelogs.\n *  send notifications about an issue.\n *  get details of the transitions available for an issue.\n *  transition an issue.\n *  Archive issues.\n *  Unarchive issues.\n *  Export archived issues.",
      "query": [
        {
          "name": "getEvents",
          "desc": "Get events",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getCreateIssueMeta",
          "desc": "Get create issue metadata",
          "input": [
            {
              "name": "projectIds",
              "desc": "List of project IDs. This parameter accepts a comma-separated list. Multiple project IDs can also be provided using an ampersand-separated list. For example, `projectIds=10000,10001&projectIds=10020,10021`. This parameter may be provided with `projectKeys`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "projectKeys",
              "desc": "List of project keys. This parameter accepts a comma-separated list. Multiple project keys can also be provided using an ampersand-separated list. For example, `projectKeys=proj1,proj2&projectKeys=proj3`. This parameter may be provided with `projectIds`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "issuetypeIds",
              "desc": "List of issue type IDs. This parameter accepts a comma-separated list. Multiple issue type IDs can also be provided using an ampersand-separated list. For example, `issuetypeIds=10000,10001&issuetypeIds=10020,10021`. This parameter may be provided with `issuetypeNames`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "issuetypeNames",
              "desc": "List of issue type names. This parameter accepts a comma-separated list. Multiple issue type names can also be provided using an ampersand-separated list. For example, `issuetypeNames=name1,name2&issuetypeNames=name3`. This parameter may be provided with `issuetypeIds`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about issue metadata in the response. This parameter accepts `projects.issuetypes.fields`, which returns information about the fields in the issue creation screen for each issue type. Fields hidden from the screen are not returned. Use the information to populate the `fields` and `update` fields in [Create issue](#api-rest-api-3-issue-post) and [Create issues](#api-rest-api-3-issue-bulk-post).",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssue",
          "desc": "Get issue",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "fields",
              "desc": "A list of fields to return for the issue. This parameter accepts a comma-separated list. Use it to retrieve a subset of fields. Allowed values:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nExamples:\n\n *  `summary,comment` Returns only the summary and comments fields.\n *  `-description` Returns all (default) fields except description.\n *  `*navigable,-comment` Returns all navigable fields except comment.\n\nThis parameter may be specified multiple times. For example, `fields=field1,field2& fields=field3`.\n\nNote: All fields are returned by default. This differs from [Search for issues using JQL (GET)](#api-rest-api-3-search-get) and [Search for issues using JQL (POST)](#api-rest-api-3-search-post) where the default is all navigable fields.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "fieldsByKeys",
              "desc": "Whether fields in `fields` are referenced by keys rather than IDs. This parameter is useful where fields have been added by a connect app and a field's key may differ from its ID.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about the issues in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedFields` Returns field values rendered in HTML format.\n *  `names` Returns the display name of each field.\n *  `schema` Returns the schema describing a field type.\n *  `transitions` Returns all possible transitions for the issue.\n *  `editmeta` Returns information about how each field can be edited.\n *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.\n *  `versionedRepresentations` Returns a JSON array for each version of a field's value, with the highest number representing the most recent version. Note: When included in the request, the `fields` parameter is ignored.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "properties",
              "desc": "A list of issue properties to return for the issue. This parameter accepts a comma-separated list. Allowed values:\n\n *  `*all` Returns all issue properties.\n *  Any issue property key, prefixed with a minus to exclude.\n\nExamples:\n\n *  `*all` Returns all properties.\n *  `*all,-prop1` Returns all properties except `prop1`.\n *  `prop1,prop2` Returns `prop1` and `prop2` properties.\n\nThis parameter may be specified multiple times. For example, `properties=prop1,prop2& properties=prop3`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "updateHistory",
              "desc": "Whether the project in which the issue is created is added to the user's **Recently viewed** project list, as shown under **Projects** in Jira. This also populates the [JQL issues search](#api-rest-api-3-search-get) `lastViewed` field.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getChangeLogs",
          "desc": "Get changelogs",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getEditIssueMeta",
          "desc": "Get edit issue metadata",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "overrideScreenSecurity",
              "desc": "Whether hidden fields are returned. Available to Connect app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "overrideEditableFlag",
              "desc": "Whether non-editable fields are returned. Available to Connect app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getTransitions",
          "desc": "Get transitions",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about transitions in the response. This parameter accepts `transitions.fields`, which returns information about the fields in the transition screen for each transition. Fields hidden from the screen are not returned. Use this information to populate the `fields` and `update` fields in [Transition issue](#api-rest-api-3-issue-issueIdOrKey-transitions-post).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "transitionId",
              "desc": "The ID of the transition.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "skipRemoteOnlyCondition",
              "desc": "Whether transitions with the condition *Hide From User Condition* are included in the response.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "includeUnavailableTransitions",
              "desc": "Whether details of transitions that fail a condition are included in the response",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "sortByOpsBarAndStatus",
              "desc": "Whether the transitions are sorted by ops-bar sequence value first then category order (Todo, In Progress, Done) or only by ops-bar sequence value.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createIssue",
          "desc": "Create issue",
          "input": [
            {
              "name": "updateHistory",
              "desc": "Whether the project in which the issue is created is added to the user's **Recently viewed** project list, as shown under **Projects** in Jira. When provided, the issue type and request type are added to the user's history for a project. These values are then used to provide defaults on the issue create screen.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request:\n\n *  is missing required fields.\n *  contains invalid field values.\n *  contains fields that cannot be set for the issue type.\n *  is by a user who does not have the necessary permission.\n *  is to create a subtype in a project different that of the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  is invalid for any other reason.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "archiveIssues",
          "desc": "Archive issue(s) by issue ID/key",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if there is at least one valid issue to archive in the request. The return message will include the count of archived issues and subtasks, as well as error details for issues which failed to get archived.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "archiveIssuesAsync",
          "desc": "Archive issue(s) by JQL",
          "input": [],
          "output": [
            {
              "name": "202",
              "desc": "Returns the URL to check the status of the submitted request.",
              "data_type": "string"
            }
          ]
        },
        {
          "name": "createIssues",
          "desc": "Bulk create issue",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if any of the issue or subtask creation requests were successful. A request may be unsuccessful when it:\n\n *  is missing required fields.\n *  contains invalid field values.\n *  contains fields that cannot be set for the issue type.\n *  is by a user who does not have the necessary permission.\n *  is to create a subtype in a project different that of the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  is invalid for any other reason.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if all requests are invalid. Requests may be unsuccessful when they:\n\n *  are missing required fields.\n *  contain invalid field values.\n *  contain fields that cannot be set for the issue type.\n *  are by a user who does not have the necessary permission.\n *  are to create a subtype in a project different that of the parent issue.\n *  is for a subtask when the option to create subtasks is disabled.\n *  are invalid for any other reason.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "unarchiveIssues",
          "desc": "Unarchive issue(s) by issue keys/ID",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if there is at least one valid issue to unarchive in the request. It will return the count of unarchived issues, which also includes the count of the subtasks unarchived, and it will show the detailed errors for those issues which are not unarchived.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "editIssue",
          "desc": "Edit issue",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "notifyUsers",
              "desc": "Whether a notification email about the issue update is sent to all watchers. To disable the notification, administer Jira or administer project permissions are required. If the user doesn't have the necessary permission the request is ignored.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "overrideScreenSecurity",
              "desc": "Whether screen security is overridden to enable hidden fields to be edited. Available to Connect app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "overrideEditableFlag",
              "desc": "Whether screen security is overridden to enable uneditable fields to be edited. Available to Connect app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) and Forge apps acting on behalf of users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "returnIssue",
              "desc": "Whether the response should contain the issue with fields edited in this request. The returned issue will have the same format as in the [Get issue API](#api-rest-api-3-issue-issueidorkey-get).",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "expand",
              "desc": "The Get issue API expand parameter to use in the response if the `returnIssue` parameter is `true`.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful and the `returnIssue` parameter is `true`",
              "data_type": "unknown"
            },
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssue",
          "desc": "Delete issue",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "deleteSubtasks",
              "desc": "Whether the issue's subtasks are deleted when the issue is deleted.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "assignIssue",
          "desc": "Assign issue",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue to be assigned.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getChangeLogsByIds",
          "desc": "Get changelogs by IDs",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "notify",
          "desc": "Send notification for issue",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "ID or key of the issue that the notification is sent for.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the email is queued for sending.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "doTransition",
          "desc": "Transition issue",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "exportArchivedIssues",
          "desc": "Export archived issue(s)",
          "input": [],
          "output": [
            {
              "name": "202",
              "desc": "Returns the details of your export task. You can use the [get task](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-tasks/#api-rest-api-3-task-taskid-get) API to view the progress of your request.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Jira expressions",
      "desc": "This resource is a collection of operations for [Jira expressions](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).",
      "query": [],
      "action": [
        {
          "name": "analyseExpression",
          "desc": "Analyse Jira expression",
          "input": [
            {
              "name": "check",
              "desc": "The check to perform:\n\n *  `syntax` Each expression's syntax is checked to ensure the expression can be parsed. Also, syntactic limits are validated. For example, the expression's length.\n *  `type` EXPERIMENTAL. Each expression is type checked and the final type of the expression inferred. Any type errors that would result in the expression failure at runtime are reported. For example, accessing properties that don't exist or passing the wrong number of arguments to functions. Also performs the syntax check.\n *  `complexity` EXPERIMENTAL. Determines the formulae for how many [expensive operations](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#expensive-operations) each expression may execute.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "400 response",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "404 response",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "evaluateJiraExpression",
          "desc": "Evaluate Jira expression",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `meta.complexity` that returns information about the expression complexity. For example, the number of expensive operations used by the expression and how close the expression is to reaching the [complexity limit](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/#restrictions). Useful when designing and debugging your expressions.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the evaluation results in a value. The result is a JSON primitive value, list, or object.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if:\n\n *  the request is invalid, that is:\n    \n     *  invalid data is provided, such as a request including issue ID and key.\n     *  the expression is invalid and can not be parsed.\n *  evaluation fails at runtime. This may happen for various reasons. For example, accessing a property on a null object (such as the expression `issue.id` where `issue` is `null`). In this case an error message is provided.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if any object provided in the request context is not found or the user does not have permission to view it.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue fields",
      "desc": "This resource represents issue fields, both system and custom fields. Use it to get fields, field configurations, and create custom fields.",
      "query": [
        {
          "name": "getFields",
          "desc": "Get fields",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getFieldsPaginated",
          "desc": "Get fields paginated",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "type",
              "desc": "The type of fields to search.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "id",
              "desc": "The IDs of the custom fields to return or, where `query` is specified, filter.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "query",
              "desc": "String used to perform a case-insensitive partial match with field names or descriptions.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `contextsCount` sorts by the number of contexts related to a field\n *  `lastUsed` sorts by the date when the value of the field last changed\n *  `name` sorts by the field name\n *  `screensCount` sorts by the number of screens related to a field",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `key` returns the key for each field\n *  `lastUsed` returns the date when the value of the field last changed\n *  `screensCount` returns the number of screens related to a field\n *  `contextsCount` returns the number of contexts related to a field\n *  `isLocked` returns information about whether the field is [locked](https://confluence.atlassian.com/x/ZSN7Og)\n *  `searcherKey` returns the searcher key for each custom field",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getTrashedFieldsPaginated",
          "desc": "Get fields in trash paginated",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "id",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "query",
              "desc": "String used to perform a case-insensitive partial match with field names or descriptions.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `name` sorts by the field name\n *  `trashDate` sorts by the date the field was moved to the trash\n *  `plannedDeletionDate` sorts by the planned deletion date",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getContextsForFieldDeprecated",
          "desc": "Get contexts for a field",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the field to return contexts for.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createCustomField",
          "desc": "Create custom field",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the custom field is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateCustomField",
          "desc": "Update custom field",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteCustomField",
          "desc": "Delete custom field",
          "input": [
            {
              "name": "id",
              "desc": "The ID of a custom field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "303",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if any of these are true:\n\n *  The custom field is locked.\n *  The custom field is used in a issue security scheme or a permission scheme.\n *  The custom field ID format is incorrect.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the custom field is not found.",
              "data_type": "unknown"
            },
            {
              "name": "409",
              "desc": "Returned if a task to delete the custom field is running.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "restoreCustomField",
          "desc": "Restore custom field from trash",
          "input": [
            {
              "name": "id",
              "desc": "The ID of a custom field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the custom field is not found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "trashCustomField",
          "desc": "Move custom field to trash",
          "input": [
            {
              "name": "id",
              "desc": "The ID of a custom field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the custom field is not found.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue custom field contexts",
      "desc": "This resource represents issue custom field contexts. Use it to:\n\n *  get, create, update, and delete custom field contexts.\n *  get context to issue types and projects mappings.\n *  get custom field contexts for projects and issue types.\n *  assign custom field contexts to projects.\n *  remove custom field contexts from projects.\n *  add issue types to custom field contexts.",
      "query": [
        {
          "name": "getContextsForField",
          "desc": "Get custom field contexts",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "isAnyIssueType",
              "desc": "Whether to return contexts that apply to all issue types.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "isGlobalContext",
              "desc": "Whether to return contexts that apply to all projects.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "contextId",
              "desc": "The list of context IDs. To include multiple contexts, separate IDs with ampersand: `contextId=10000&contextId=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getDefaultValues",
          "desc": "Get custom field contexts default values",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field, for example `customfield\\_10000`.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The IDs of the contexts.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueTypeMappingsForContexts",
          "desc": "Get issue types for custom field context",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context. To include multiple contexts, provide an ampersand-separated list. For example, `contextId=10001&contextId=10002`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if operation is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getProjectContextMapping",
          "desc": "Get project mappings for custom field context",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field, for example `customfield\\_10000`.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The list of context IDs. To include multiple context, separate IDs with ampersand: `contextId=10000&contextId=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createCustomFieldContext",
          "desc": "Create custom field context",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the custom field context is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setDefaultValues",
          "desc": "Set custom field contexts default values",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if operation is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getCustomFieldContextsForProjectsAndIssueTypes",
          "desc": "Get custom field contexts for projects and issue types",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateCustomFieldContext",
          "desc": "Update custom field context",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the context is updated.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteCustomFieldContext",
          "desc": "Delete custom field context",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the context is deleted.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addIssueTypesToContext",
          "desc": "Add issue types to context",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if operation is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeIssueTypesFromContext",
          "desc": "Remove issue types from context",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if operation is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "assignProjectsToCustomFieldContext",
          "desc": "Assign custom field context to projects",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if operation is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeCustomFieldContextFromProjects",
          "desc": "Remove custom field context from projects",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the custom field.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "contextId",
              "desc": "The ID of the context.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the custom field context is removed from the projects.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Screens",
      "desc": "This resource represents the screens used to record issue details. Use it to:\n\n *  get details of all screens.\n *  get details of all the fields available for use on screens.\n *  create screens.\n *  delete screens.\n *  update screens.\n *  add a field to the default screen.",
      "query": [
        {
          "name": "getScreensForField",
          "desc": "Get screens for a field",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the field to return screens for.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about screens in the response. This parameter accepts `tab` which returns details about the screen tabs the field is used in.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getScreens",
          "desc": "Get screens",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The list of screen IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "queryString",
              "desc": "String used to perform a case-insensitive partial match with screen name.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "scope",
              "desc": "The scope filter string. To filter by multiple scope, provide an ampersand-separated list. For example, `scope=GLOBAL&scope=PROJECT`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `id` Sorts by screen ID.\n *  `name` Sorts by screen name.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAvailableScreenFields",
          "desc": "Get available screen fields",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createScreen",
          "desc": "Create screen",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addFieldToDefaultScreen",
          "desc": "Add field to default screen",
          "input": [
            {
              "name": "fieldId",
              "desc": "The ID of the field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateScreen",
          "desc": "Update screen",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteScreen",
          "desc": "Delete screen",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue custom field options (apps)",
      "desc": "This resource represents custom issue field select list options created by a Connect app. See [Issue custom field options](#api-group-Issue-custom-field-options) to manipulate options created in Jira or using the REST API.\n\nA select list issue field is a type of [issue field](https://developer.atlassian.com/cloud/jira/platform/modules/issue-field/) that enables a user to select an option from a list. Use it to add, remove, and update the options of a select list issue field.",
      "query": [
        {
          "name": "getAllIssueFieldOptions",
          "desc": "Get all issue field options",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "fieldKey",
              "desc": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getSelectableIssueFieldOptions",
          "desc": "Get selectable issue field options",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "projectId",
              "desc": "Filters the results to options that are only available in the specified project.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "fieldKey",
              "desc": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getVisibleIssueFieldOptions",
          "desc": "Get visible issue field options",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "projectId",
              "desc": "Filters the results to options that are only available in the specified project.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "fieldKey",
              "desc": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueFieldOption",
          "desc": "Get issue field option",
          "input": [
            {
              "name": "fieldKey",
              "desc": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "optionId",
              "desc": "The ID of the option to be returned.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the requested option is returned.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createIssueFieldOption",
          "desc": "Create issue field option",
          "input": [
            {
              "name": "fieldKey",
              "desc": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateIssueFieldOption",
          "desc": "Update issue field option",
          "input": [
            {
              "name": "fieldKey",
              "desc": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "optionId",
              "desc": "The ID of the option to be updated.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the option is updated or created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssueFieldOption",
          "desc": "Delete issue field option",
          "input": [
            {
              "name": "fieldKey",
              "desc": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "optionId",
              "desc": "The ID of the option to be deleted.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the field option is deleted.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "replaceIssueFieldOption",
          "desc": "Replace issue field option",
          "input": [
            {
              "name": "replaceWith",
              "desc": "The ID of the option that will replace the currently selected option.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "jql",
              "desc": "A JQL query that specifies the issues to be updated. For example, *project=10000*.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "overrideScreenSecurity",
              "desc": "Whether screen security is overridden to enable hidden fields to be edited. Available to Connect and Forge app users with admin permission.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "overrideEditableFlag",
              "desc": "Whether screen security is overridden to enable uneditable fields to be edited. Available to Connect and Forge app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "fieldKey",
              "desc": "The field key is specified in the following format: **$(app-key)\\_\\_$(field-key)**. For example, *example-add-on\\_\\_example-issue-field*. To determine the `fieldKey` value, do one of the following:\n\n *  open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager.\n *  run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `\"key\": \"teams-add-on__team-issue-field\"`",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "optionId",
              "desc": "The ID of the option to be deselected.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "303",
              "desc": "Returned if the long-running task to deselect the option is started.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue field configurations",
      "desc": "This resource represents issue field configurations. Use it to get, set, and delete field configurations and field configuration schemes.",
      "query": [
        {
          "name": "getAllFieldConfigurations",
          "desc": "Get all field configurations",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The list of field configuration IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "isDefault",
              "desc": "If *true* returns default field configurations only.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "query",
              "desc": "The query string used to match against field configuration names and descriptions.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getFieldConfigurationItems",
          "desc": "Get field configuration items",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the field configuration.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAllFieldConfigurationSchemes",
          "desc": "Get all field configuration schemes",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The list of field configuration scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getFieldConfigurationSchemeMappings",
          "desc": "Get field configuration issue type items",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "fieldConfigurationSchemeId",
              "desc": "The list of field configuration scheme IDs. To include multiple field configuration schemes separate IDs with ampersand: `fieldConfigurationSchemeId=10000&fieldConfigurationSchemeId=10001`.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getFieldConfigurationSchemeProjectMapping",
          "desc": "Get field configuration schemes for projects",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "projectId",
              "desc": "The list of project IDs. To include multiple projects, separate IDs with ampersand: `projectId=10000&projectId=10001`.",
              "type": "required",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createFieldConfiguration",
          "desc": "Create field configuration",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateFieldConfiguration",
          "desc": "Update field configuration",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the field configuration.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteFieldConfiguration",
          "desc": "Delete field configuration",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the field configuration.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateFieldConfigurationItems",
          "desc": "Update field configuration items",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the field configuration.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "createFieldConfigurationScheme",
          "desc": "Create field configuration scheme",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "assignFieldConfigurationSchemeToProject",
          "desc": "Assign field configuration scheme to project",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateFieldConfigurationScheme",
          "desc": "Update field configuration scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the field configuration scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteFieldConfigurationScheme",
          "desc": "Delete field configuration scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the field configuration scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setFieldConfigurationSchemeMapping",
          "desc": "Assign issue types to field configurations",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the field configuration scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeIssueTypesFromGlobalFieldConfigurationScheme",
          "desc": "Remove issue types from field configuration scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the field configuration scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is not valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the field configuration scheme or the issue types are not found.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Filters",
      "desc": "This resource represents [filters](https://confluence.atlassian.com/x/eQiiLQ). Use it to get, create, update, or delete filters. Also use it to configure the columns for a filter and set favorite filters.",
      "query": [
        {
          "name": "getFavouriteFilters",
          "desc": "Get favorite filters",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getMyFilters",
          "desc": "Get my filters",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "includeFavourites",
              "desc": "Include the user's favorite filters in the response.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getFiltersPaginated",
          "desc": "Search for filters",
          "input": [
            {
              "name": "filterName",
              "desc": "String used to perform a case-insensitive partial match with `name`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "User account ID used to return filters with the matching `owner.accountId`. This parameter cannot be used with `owner`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "owner",
              "desc": "This parameter is deprecated because of privacy changes. Use `accountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. User name used to return filters with the matching `owner.name`. This parameter cannot be used with `accountId`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupname",
              "desc": "As a group's name can change, use of `groupId` is recommended to identify a group. Group name used to returns filters that are shared with a group that matches `sharePermissions.group.groupname`. This parameter cannot be used with the `groupId` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "Group ID used to returns filters that are shared with a group that matches `sharePermissions.group.groupId`. This parameter cannot be used with the `groupname` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectId",
              "desc": "Project ID used to returns filters that are shared with a project that matches `sharePermissions.project.id`.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The list of filter IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`. Do not exceed 200 filter IDs.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by filter description. Note that this sorting works independently of whether the expand to display the description field is in use.\n *  `favourite_count` Sorts by the count of how many users have this filter as a favorite.\n *  `is_favourite` Sorts by whether the filter is marked as a favorite.\n *  `id` Sorts by filter ID.\n *  `name` Sorts by filter name.\n *  `owner` Sorts by the ID of the filter owner.\n *  `is_shared` Sorts by whether the filter is shared.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `description` Returns the description of the filter.\n *  `favourite` Returns an indicator of whether the user has set the filter as a favorite.\n *  `favouritedCount` Returns a count of how many users have set this filter as a favorite.\n *  `jql` Returns the JQL query that the filter uses.\n *  `owner` Returns the owner of the filter.\n *  `searchUrl` Returns a URL to perform the filter's JQL query.\n *  `sharePermissions` Returns the share permissions defined for the filter.\n *  `editPermissions` Returns the edit permissions defined for the filter.\n *  `isWritable` Returns whether the current user has permission to edit the filter.\n *  `subscriptions` Returns the users that are subscribed to the filter.\n *  `viewUrl` Returns a URL to view the filter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "overrideSharePermissions",
              "desc": "EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be returned. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if:\n\n *  `owner` and `accountId` are provided.\n *  `expand` includes an invalid value.\n *  `orderBy` is invalid.\n *  `id` identifies more than 200 filter IDs.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getFilter",
          "desc": "Get filter",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter to return.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "overrideSharePermissions",
              "desc": "EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be returned. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getColumns",
          "desc": "Get columns",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createFilter",
          "desc": "Create filter",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "overrideSharePermissions",
              "desc": "EXPERIMENTAL: Whether share permissions are overridden to enable filters with any share permissions to be created. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateFilter",
          "desc": "Update filter",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter to update.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "overrideSharePermissions",
              "desc": "EXPERIMENTAL: Whether share permissions are overridden to enable the addition of any share permissions to filters. Available to users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteFilter",
          "desc": "Delete filter",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter to delete.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        },
        {
          "name": "setColumns",
          "desc": "Set columns",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "resetColumns",
          "desc": "Reset columns",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        },
        {
          "name": "setFavouriteForFilter",
          "desc": "Add filter as favorite",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteFavouriteForFilter",
          "desc": "Remove filter as favorite",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`.\n *  `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "changeFilterOwner",
          "desc": "Change filter owner",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter to update.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Filter sharing",
      "desc": "This resource represents options for sharing [filters](#api-group-Filters). Use it to get share scopes as well as add and remove share scopes from filters.",
      "query": [
        {
          "name": "getDefaultShareScope",
          "desc": "Get default share scope",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getSharePermissions",
          "desc": "Get share permissions",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getSharePermission",
          "desc": "Get share permission",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "permissionId",
              "desc": "The ID of the share permission.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setDefaultShareScope",
          "desc": "Set default share scope",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addSharePermission",
          "desc": "Add share permission",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "deleteSharePermission",
          "desc": "Delete share permission",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the filter.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "permissionId",
              "desc": "The ID of the share permission.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Groups",
      "desc": "This resource represents groups of users. Use it to get, create, find, and delete groups as well as add and remove users from groups. (\\[WARNING\\] The standard Atlassian group names are default names only and can be edited or deleted. For example, an admin or Atlassian support could delete the default group jira-software-users or rename it to jsw-users at any point. See https://support.atlassian.com/user-management/docs/create-and-update-groups/ for details.)",
      "query": [
        {
          "name": "getGroup",
          "desc": "Get group",
          "input": [
            {
              "name": "groupname",
              "desc": "As a group's name can change, use of `groupId` is recommended to identify a group.  \nThe name of the group. This parameter cannot be used with the `groupId` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "The ID of the group. This parameter cannot be used with the `groupName` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "List of fields to expand.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "bulkGetGroups",
          "desc": "Bulk get groups",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "groupId",
              "desc": "The ID of a group. To specify multiple IDs, pass multiple `groupId` parameters. For example, `groupId=5b10a2844c20165700ede21g&groupId=5b10ac8d82e05b22cc7d4ef5`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "groupName",
              "desc": "The name of a group. To specify multiple names, pass multiple `groupName` parameters. For example, `groupName=administrators&groupName=jira-software-users`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "accessType",
              "desc": "The access level of a group. Valid values: 'site-admin', 'admin', 'user'.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "applicationKey",
              "desc": "The application key of the product user groups to search for. Valid values: 'jira-servicedesk', 'jira-software', 'jira-product-discovery', 'jira-core'.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getUsersFromGroup",
          "desc": "Get users from group",
          "input": [
            {
              "name": "groupname",
              "desc": "As a group's name can change, use of `groupId` is recommended to identify a group.  \nThe name of the group. This parameter cannot be used with the `groupId` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "The ID of the group. This parameter cannot be used with the `groupName` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "includeInactiveUsers",
              "desc": "Include inactive users.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "findGroups",
          "desc": "Find groups",
          "input": [
            {
              "name": "accountId",
              "desc": "This parameter is deprecated, setting it does not affect the results. To find groups containing a particular user, use [Get user groups](#api-rest-api-3-user-groups-get).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "query",
              "desc": "The string to find in group names.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "exclude",
              "desc": "As a group's name can change, use of `excludeGroupIds` is recommended to identify a group.  \nA group to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, `exclude=group1&exclude=group2`. This parameter cannot be used with the `excludeGroupIds` parameter.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "excludeId",
              "desc": "A group ID to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, `excludeId=group1-id&excludeId=group2-id`. This parameter cannot be used with the `excludeGroups` parameter.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of groups to return. The maximum number of groups that can be returned is limited by the system property `jira.ajax.autocomplete.limit`.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "caseInsensitive",
              "desc": "Whether the search for groups should be case insensitive.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "userName",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createGroup",
          "desc": "Create group",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeGroup",
          "desc": "Remove group",
          "input": [
            {
              "name": "groupname",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "The ID of the group. This parameter cannot be used with the `groupname` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "swapGroup",
              "desc": "As a group's name can change, use of `swapGroupId` is recommended to identify a group.  \nThe group to transfer restrictions to. Only comments and worklogs are transferred. If restrictions are not transferred, comments and worklogs are inaccessible after the deletion. This parameter cannot be used with the `swapGroupId` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "swapGroupId",
              "desc": "The ID of the group to transfer restrictions to. Only comments and worklogs are transferred. If restrictions are not transferred, comments and worklogs are inaccessible after the deletion. This parameter cannot be used with the `swapGroup` parameter.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "addUserToGroup",
          "desc": "Add user to group",
          "input": [
            {
              "name": "groupname",
              "desc": "As a group's name can change, use of `groupId` is recommended to identify a group.  \nThe name of the group. This parameter cannot be used with the `groupId` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "The ID of the group. This parameter cannot be used with the `groupName` parameter.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeUserFromGroup",
          "desc": "Remove user from group",
          "input": [
            {
              "name": "groupname",
              "desc": "As a group's name can change, use of `groupId` is recommended to identify a group.  \nThe name of the group. This parameter cannot be used with the `groupId` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "The ID of the group. This parameter cannot be used with the `groupName` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Group and user picker",
      "desc": "This resource represents a list of users and a list of groups. Use it to obtain the details to populate user and group picker suggestions list.",
      "query": [
        {
          "name": "findUsersAndGroups",
          "desc": "Find users and groups",
          "input": [
            {
              "name": "query",
              "desc": "The search string.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return in each list.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "showAvatar",
              "desc": "Whether the user avatar should be returned. If an invalid value is provided, the default value is used.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "fieldId",
              "desc": "The custom field ID of the field this request is for.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectId",
              "desc": "The ID of a project that returned users and groups must have permission to view. To include multiple projects, provide an ampersand-separated list. For example, `projectId=10000&projectId=10001`. This parameter is only used when `fieldId` is present.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "issueTypeId",
              "desc": "The ID of an issue type that returned users and groups must have permission to view. To include multiple issue types, provide an ampersand-separated list. For example, `issueTypeId=10000&issueTypeId=10001`. Special values, such as `-1` (all standard issue types) and `-2` (all subtask issue types), are supported. This parameter is only used when `fieldId` is present.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "avatarSize",
              "desc": "The size of the avatar to return. If an invalid value is provided, the default value is used.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "caseInsensitive",
              "desc": "Whether the search for groups should be case insensitive.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "excludeConnectAddons",
              "desc": "Whether Connect app users and groups should be excluded from the search results. If an invalid value is provided, the default value is used.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "License metrics",
      "desc": "This resource represents license metrics. Use it to get available metrics for Jira licences.",
      "query": [
        {
          "name": "getLicense",
          "desc": "Get license",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getApproximateLicenseCount",
          "desc": "Get approximate license count",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getApproximateApplicationLicenseCount",
          "desc": "Get approximate application license count",
          "input": [
            {
              "name": "applicationKey",
              "desc": "The ID of the application, represents a specific version of Jira.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Issue search",
      "desc": "This resource represents various ways to search for issues. Use it to search for issues with a JQL query and find issues to populate an issue picker.",
      "query": [
        {
          "name": "getIssuePickerResource",
          "desc": "Get issue picker suggestions",
          "input": [
            {
              "name": "query",
              "desc": "A string to match against text fields in the issue such as title, description, or comments.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "currentJQL",
              "desc": "A JQL query defining a list of issues to search for the query term. Note that `username` and `userkey` cannot be used as search terms for this parameter, due to privacy reasons. Use `accountId` instead.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "currentIssueKey",
              "desc": "The key of an issue to exclude from search results. For example, the issue the user is viewing when they perform this query.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "currentProjectId",
              "desc": "The ID of a project that suggested issues must belong to.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "showSubTasks",
              "desc": "Indicate whether to include subtasks in the suggestions list.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "showSubTaskParent",
              "desc": "When `currentIssueKey` is a subtask, whether to include the parent issue in the suggestions if it matches the query.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "searchForIssuesUsingJql",
          "desc": "Search for issues using JQL (GET)",
          "input": [
            {
              "name": "jql",
              "desc": "The [JQL](https://confluence.atlassian.com/x/egORLQ) that defines the search. Note:\n\n *  If no JQL expression is provided, all issues are returned.\n *  `username` and `userkey` cannot be used as search terms due to privacy reasons. Use `accountId` instead.\n *  If a user has hidden their email address in their user profile, partial matches of the email address will not find the user. An exact match is required.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page. To manage page size, Jira may return fewer items per page where a large number of fields are requested. The greatest number of items returned per page is achieved when requesting `id` or `key` only.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "validateQuery",
              "desc": "Determines how to validate the JQL query and treat the validation results. Supported values are:\n\n *  `strict` Returns a 400 response code if any errors are found, along with a list of all errors (and warnings).\n *  `warn` Returns all errors as warnings.\n *  `none` No validation is performed.\n *  `true` *Deprecated* A legacy synonym for `strict`.\n *  `false` *Deprecated* A legacy synonym for `warn`.\n\nNote: If the JQL is not correctly formed a 400 response code is returned, regardless of the `validateQuery` value.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "fields",
              "desc": "A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include:\n\n *  `*all` Returns all fields.\n *  `*navigable` Returns navigable fields.\n *  Any issue field, prefixed with a minus to exclude.\n\nExamples:\n\n *  `summary,comment` Returns only the summary and comments fields.\n *  `-description` Returns all navigable (default) fields except description.\n *  `*all,-comment` Returns all fields except comments.\n\nThis parameter may be specified multiple times. For example, `fields=field1,field2&fields=field3`.\n\nNote: All navigable fields are returned by default. This differs from [GET issue](#api-rest-api-3-issue-issueIdOrKey-get) where the default is all fields.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about issues in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `renderedFields` Returns field values rendered in HTML format.\n *  `names` Returns the display name of each field.\n *  `schema` Returns the schema describing a field type.\n *  `transitions` Returns all possible transitions for the issue.\n *  `operations` Returns all possible operations for the issue.\n *  `editmeta` Returns information about how each field can be edited.\n *  `changelog` Returns a list of recent updates to an issue, sorted by date, starting from the most recent.\n *  `versionedRepresentations` Instead of `fields`, returns `versionedRepresentations` a JSON array containing each version of a field's value, with the highest numbered item representing the most recent version.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "properties",
              "desc": "A list of issue property keys for issue properties to include in the results. This parameter accepts a comma-separated list. Multiple properties can also be provided using an ampersand separated list. For example, `properties=prop1,prop2&properties=prop3`. A maximum of 5 issue property keys can be specified.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "fieldsByKeys",
              "desc": "Reference fields by their key (rather than ID).",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "matchIssues",
          "desc": "Check issues against JQL",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "searchForIssuesUsingJqlPost",
          "desc": "Search for issues using JQL (POST)",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue properties",
      "desc": "This resource represents [issue](#api-group-Issues) properties, which provides for storing custom data against an issue. Use it to get, set, and delete issue properties as well as obtain details of all properties on an issue. Operations to bulk update and delete issue properties are also provided. Issue properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "query": [
        {
          "name": "getIssuePropertyKeys",
          "desc": "Get issue property keys",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The key or ID of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueProperty",
          "desc": "Get issue property",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The key or ID of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "bulkSetIssuesPropertiesList",
          "desc": "Bulk set issues properties by list",
          "input": [],
          "output": [
            {
              "name": "400",
              "desc": "Return if the request is invalid or the user does not have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "bulkSetIssuePropertiesByIssue",
          "desc": "Bulk set issue properties by issue",
          "input": [],
          "output": [
            {
              "name": "400",
              "desc": "Return if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Return if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "bulkSetIssueProperty",
          "desc": "Bulk set issue property",
          "input": [
            {
              "name": "propertyKey",
              "desc": "The key of the property. The maximum length is 255 characters.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "bulkDeleteIssueProperty",
          "desc": "Bulk delete issue property",
          "input": [
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setIssueProperty",
          "desc": "Set issue property",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the issue property. The maximum length is 255 characters.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the issue property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned if the issue property is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssueProperty",
          "desc": "Delete issue property",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The key or ID of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue watchers",
      "desc": "This resource represents users watching an issue. Use it to get details of users watching an issue as well as start and stop a user watching an issue.",
      "query": [
        {
          "name": "getIssueWatchers",
          "desc": "Get issue watchers",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "getIsWatchingIssueBulk",
          "desc": "Get is watching issue bulk",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addWatcher",
          "desc": "Add watcher",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeWatcher",
          "desc": "Delete watcher",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue remote links",
      "desc": "This resource represents remote issue links, a way of linking Jira to information in other systems. Use it to get, create, update, and delete remote issue links either by ID or global ID. The global ID provides a way of accessing remote issue links using information about the item's remote system host and remote system identifier.",
      "query": [
        {
          "name": "getRemoteIssueLinks",
          "desc": "Get remote issue links",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "globalId",
              "desc": "The global ID of the remote issue link.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getRemoteIssueLinkById",
          "desc": "Get remote issue link by ID",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "linkId",
              "desc": "The ID of the remote issue link.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createOrUpdateRemoteIssueLink",
          "desc": "Create or update remote issue link",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the remote issue link is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned if the remote issue link is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteRemoteIssueLinkByGlobalId",
          "desc": "Delete remote issue link by global ID",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "globalId",
              "desc": "The global ID of a remote issue link.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "updateRemoteIssueLink",
          "desc": "Update remote issue link by ID",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "linkId",
              "desc": "The ID of the remote issue link.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteRemoteIssueLinkById",
          "desc": "Delete remote issue link by ID",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "linkId",
              "desc": "The ID of a remote issue link.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue votes",
      "desc": "This resource represents votes cast by users on an issue. Use it to get details of votes on an issue as well as cast and withdrawal votes.",
      "query": [
        {
          "name": "getVotes",
          "desc": "Get votes",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "addVote",
          "desc": "Add vote",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeVote",
          "desc": "Delete vote",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue worklogs",
      "desc": "This resource represents issue worklogs. Use it to:\n\n *  get, create, update, and delete worklogs.\n *  obtain lists of updated or deleted worklogs.",
      "query": [
        {
          "name": "getIssueWorklog",
          "desc": "Get issue worklogs",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "startedAfter",
              "desc": "The worklog start date and time, as a UNIX timestamp in milliseconds, after which worklogs are returned.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "startedBefore",
              "desc": "The worklog start date and time, as a UNIX timestamp in milliseconds, before which worklogs are returned.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts`properties`, which returns worklog properties.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getWorklog",
          "desc": "Get worklog",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the worklog.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts\n\n`properties`, which returns worklog properties.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIdsOfWorklogsDeletedSince",
          "desc": "Get IDs of deleted worklogs",
          "input": [
            {
              "name": "since",
              "desc": "The date and time, as a UNIX timestamp in milliseconds, after which deleted worklogs are returned.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIdsOfWorklogsModifiedSince",
          "desc": "Get IDs of updated worklogs",
          "input": [
            {
              "name": "since",
              "desc": "The date and time, as a UNIX timestamp in milliseconds, after which updated worklogs are returned.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties` that returns the properties of each worklog.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "addWorklog",
          "desc": "Add worklog",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "notifyUsers",
              "desc": "Whether users watching the issue are notified by email.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "adjustEstimate",
              "desc": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `manual` Reduces the estimate by amount specified in `reduceBy`.\n *  `auto` Reduces the estimate by the value of `timeSpent` in the worklog.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "newEstimate",
              "desc": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "reduceBy",
              "desc": "The amount to reduce the issue's remaining estimate by, as days (\\#d), hours (\\#h), or minutes (\\#m). For example, *2d*. Required when `adjustEstimate` is `manual`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about work logs in the response. This parameter accepts `properties`, which returns worklog properties.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "overrideEditableFlag",
              "desc": "Whether the worklog entry should be added to the issue even if the issue is not editable, because jira.issue.editable set to false or missing. For example, the issue is closed. Connect and Forge app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) can use this flag.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateWorklog",
          "desc": "Update worklog",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the worklog.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "notifyUsers",
              "desc": "Whether users watching the issue are notified by email.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "adjustEstimate",
              "desc": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `auto` Updates the estimate by the difference between the original and updated value of `timeSpent` or `timeSpentSeconds`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "newEstimate",
              "desc": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties`, which returns worklog properties.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "overrideEditableFlag",
              "desc": "Whether the worklog should be added to the issue even if the issue is not editable. For example, because the issue is closed. Connect and Forge app users with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) can use this flag.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorklog",
          "desc": "Delete worklog",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the worklog.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "notifyUsers",
              "desc": "Whether users watching the issue are notified by email.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "adjustEstimate",
              "desc": "Defines how to update the issue's time estimate, the options are:\n\n *  `new` Sets the estimate to a specific value, defined in `newEstimate`.\n *  `leave` Leaves the estimate unchanged.\n *  `manual` Increases the estimate by amount specified in `increaseBy`.\n *  `auto` Reduces the estimate by the value of `timeSpent` in the worklog.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "newEstimate",
              "desc": "The value to set as the issue's remaining time estimate, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `new`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "increaseBy",
              "desc": "The amount to increase the issue's remaining estimate by, as days (\\#d), hours (\\#h), or minutes (\\#m or \\#). For example, *2d*. Required when `adjustEstimate` is `manual`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "overrideEditableFlag",
              "desc": "Whether the work log entry should be added to the issue even if the issue is not editable, because jira.issue.editable set to false or missing. For example, the issue is closed. Connect and Forge app users with admin permission can use this flag.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": []
        },
        {
          "name": "getWorklogsForIds",
          "desc": "Get worklogs",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about worklogs in the response. This parameter accepts `properties` that returns the properties of each worklog.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue worklog properties",
      "desc": "This resource represents [issue worklog](#api-group-Issue-worklogs) properties, which provides for storing custom data against an issue worklog. Use it to get, create, and delete issue worklog properties as well as obtain the keys of all properties on a issue worklog. Issue worklog properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "query": [
        {
          "name": "getWorklogPropertyKeys",
          "desc": "Get worklog property keys",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "worklogId",
              "desc": "The ID of the worklog.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getWorklogProperty",
          "desc": "Get worklog property",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "worklogId",
              "desc": "The ID of the worklog.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setWorklogProperty",
          "desc": "Set worklog property",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "worklogId",
              "desc": "The ID of the worklog.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the issue property. The maximum length is 255 characters.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the worklog property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned if the worklog property is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorklogProperty",
          "desc": "Delete worklog property",
          "input": [
            {
              "name": "issueIdOrKey",
              "desc": "The ID or key of the issue.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "worklogId",
              "desc": "The ID of the worklog.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue links",
      "desc": "This resource represents links between issues. Use it to get, create, and delete links between issues.\n\nTo use it, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.",
      "query": [
        {
          "name": "getIssueLink",
          "desc": "Get issue link",
          "input": [
            {
              "name": "linkId",
              "desc": "The ID of the issue link.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "linkIssues",
          "desc": "Create issue link",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssueLink",
          "desc": "Delete issue link",
          "input": [
            {
              "name": "linkId",
              "desc": "The ID of the issue link.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue link types",
      "desc": "This resource represents [issue link](#api-group-Issue-links) types. Use it to get, create, update, and delete link issue types as well as get lists of all link issue types.\n\nTo use it, the site must have [issue linking](https://confluence.atlassian.com/x/yoXKM) enabled.",
      "query": [
        {
          "name": "getIssueLinkTypes",
          "desc": "Get issue link types",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueLinkType",
          "desc": "Get issue link type",
          "input": [
            {
              "name": "issueLinkTypeId",
              "desc": "The ID of the issue link type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createIssueLinkType",
          "desc": "Create issue link type",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateIssueLinkType",
          "desc": "Update issue link type",
          "input": [
            {
              "name": "issueLinkTypeId",
              "desc": "The ID of the issue link type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssueLinkType",
          "desc": "Delete issue link type",
          "input": [
            {
              "name": "issueLinkTypeId",
              "desc": "The ID of the issue link type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue security schemes",
      "desc": "This resource represents issue security schemes. Use it to get an issue security scheme or a list of issue security schemes.\n\nIssue security schemes control which users or groups of users can view an issue. When an issue security scheme is associated with a project, its security levels can be applied to issues in that project. Sub-tasks also inherit the security level of their parent issue.",
      "query": [
        {
          "name": "getIssueSecuritySchemes",
          "desc": "Get issue security schemes",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getSecurityLevels",
          "desc": "Get issue security levels",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The list of issue security scheme level IDs. To include multiple issue security levels, separate IDs with an ampersand: `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "schemeId",
              "desc": "The list of issue security scheme IDs. To include multiple issue security schemes, separate IDs with an ampersand: `schemeId=10000&schemeId=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "onlyDefault",
              "desc": "When set to true, returns multiple default levels for each security scheme containing a default. If you provide scheme and level IDs not associated with the default, returns an empty page. The default value is false.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getSecurityLevelMembers",
          "desc": "Get issue security level members",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The list of issue security level member IDs. To include multiple issue security level members separate IDs with an ampersand: `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "schemeId",
              "desc": "The list of issue security scheme IDs. To include multiple issue security schemes separate IDs with an ampersand: `schemeId=10000&schemeId=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "levelId",
              "desc": "The list of issue security level IDs. To include multiple issue security levels separate IDs with an ampersand: `levelId=10000&levelId=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information\n *  `field` Returns information about the custom field granted the permission\n *  `group` Returns information about the group that is granted the permission\n *  `projectRole` Returns information about the project role granted the permission\n *  `user` Returns information about the user who is granted the permission",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "searchProjectsUsingSecuritySchemes",
          "desc": "Get projects using issue security schemes",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "issueSecuritySchemeId",
              "desc": "The list of security scheme IDs to be filtered out.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "projectId",
              "desc": "The list of project IDs to be filtered out.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the search criteria is invalid.If you specify the project ID parameter",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "searchSecuritySchemes",
          "desc": "Search issue security schemes",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The list of issue security scheme IDs. To include multiple issue security scheme IDs, separate IDs with an ampersand: `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "projectId",
              "desc": "The list of project IDs. To include multiple project IDs, separate IDs with an ampersand: `projectId=10000&projectId=10001`.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueSecurityScheme",
          "desc": "Get issue security scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue security scheme. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list of issue security scheme IDs.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createIssueSecurityScheme",
          "desc": "Create issue security scheme",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setDefaultLevels",
          "desc": "Set default issue security levels",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue resolution isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "associateSchemesToProjects",
          "desc": "Associate security scheme to project",
          "input": [],
          "output": [
            {
              "name": "303",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the security scheme isn't found.",
              "data_type": "unknown"
            },
            {
              "name": "409",
              "desc": "Returned if a task to remove the issue security level is already running.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateIssueSecurityScheme",
          "desc": "Update issue security scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue security scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue security scheme isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteSecurityScheme",
          "desc": "Delete issue security scheme",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the issue security scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue security scheme isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addSecurityLevel",
          "desc": "Add issue security levels",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the issue security scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the security scheme isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateSecurityLevel",
          "desc": "Update issue security level",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the issue security scheme level belongs to.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "levelId",
              "desc": "The ID of the issue security level to update.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue security level isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeLevel",
          "desc": "Remove issue security level",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the issue security scheme.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "levelId",
              "desc": "The ID of the issue security level to remove.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "replaceWith",
              "desc": "The ID of the issue security level that will replace the currently selected level.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "303",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue security level isn't found.",
              "data_type": "unknown"
            },
            {
              "name": "409",
              "desc": "Returned if a task to remove the issue security level is already running.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addSecurityLevelMembers",
          "desc": "Add issue security level members",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the issue security scheme.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "levelId",
              "desc": "The ID of the issue security level.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the security scheme isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeMemberFromSecurityLevel",
          "desc": "Remove member from issue security level",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the issue security scheme.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "levelId",
              "desc": "The ID of the issue security level.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "memberId",
              "desc": "The ID of the issue security level member to be removed.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the security scheme isn't found.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue security level",
      "desc": "This resource represents issue security levels. Use it to obtain the details of any issue security level. For more information about issue security levels, see [Configuring issue-level security](https://confluence.atlassian.com/x/J4lKLg).",
      "query": [
        {
          "name": "getIssueSecurityLevelMembers",
          "desc": "Get issue security level members",
          "input": [
            {
              "name": "issueSecuritySchemeId",
              "desc": "The ID of the issue security scheme. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) operation to get a list of issue security scheme IDs.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "issueSecurityLevelId",
              "desc": "The list of issue security level IDs. To include multiple issue security levels separate IDs with ampersand: `issueSecurityLevelId=10000&issueSecurityLevelId=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueSecurityLevel",
          "desc": "Get issue security level",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue security level.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Issue types",
      "desc": "This resource represents issues types. Use it to:\n\n *  get, create, update, and delete issue types.\n *  get all issue types for a user.\n *  get alternative issue types.\n *  set an avatar for an issue type.",
      "query": [
        {
          "name": "getIssueAllTypes",
          "desc": "Get all issue types for user",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getIssueTypesForProject",
          "desc": "Get issue types for project",
          "input": [
            {
              "name": "projectId",
              "desc": "The ID of the project.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "level",
              "desc": "The level of the issue type to filter by. Use:\n\n *  `-1` for Subtask.\n *  `0` for Base.\n *  `1` for Epic.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getIssueType",
          "desc": "Get issue type",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAlternativeIssueTypes",
          "desc": "Get alternative issue types",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createIssueType",
          "desc": "Create issue type",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateIssueType",
          "desc": "Update issue type",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssueType",
          "desc": "Delete issue type",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "alternativeIssueTypeId",
              "desc": "The ID of the replacement issue type.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "createIssueTypeAvatar",
          "desc": "Load issue type avatar",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "x",
              "desc": "The X coordinate of the top-left corner of the crop region.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "y",
              "desc": "The Y coordinate of the top-left corner of the crop region.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "size",
              "desc": "The length of each side of the crop region.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue type properties",
      "desc": "This resource represents [issue type](#api-group-Issue-types) properties, which provides for storing custom data against an issue type. Use it to get, create, and delete issue type properties as well as obtain the keys of all properties on a issues type. Issue type properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "query": [
        {
          "name": "getIssueTypePropertyKeys",
          "desc": "Get issue type property keys",
          "input": [
            {
              "name": "issueTypeId",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueTypeProperty",
          "desc": "Get issue type property",
          "input": [
            {
              "name": "issueTypeId",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property. Use [Get issue type property keys](#api-rest-api-3-issuetype-issueTypeId-properties-get) to get a list of all issue type property keys.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setIssueTypeProperty",
          "desc": "Set issue type property",
          "input": [
            {
              "name": "issueTypeId",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the issue type property. The maximum length is 255 characters.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the issue type property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned if the issue type property is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssueTypeProperty",
          "desc": "Delete issue type property",
          "input": [
            {
              "name": "issueTypeId",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property. Use [Get issue type property keys](#api-rest-api-3-issuetype-issueTypeId-properties-get) to get a list of all issue type property keys.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue type schemes",
      "desc": "This resource represents issue type schemes in classic projects. Use it to:\n\n *  get issue type schemes and a list of the projects that use them.\n *  associate issue type schemes with projects.\n *  add issue types to issue type schemes.\n *  delete issue types from issue type schemes.\n *  create, update, and delete issue type schemes.\n *  change the order of issue types in issue type schemes.",
      "query": [
        {
          "name": "getAllIssueTypeSchemes",
          "desc": "Get all issue type schemes",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The list of issue type schemes IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `name` Sorts by issue type scheme name.\n *  `id` Sorts by issue type scheme ID.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `projects` For each issue type schemes, returns information about the projects the issue type scheme is assigned to.\n *  `issueTypes` For each issue type schemes, returns information about the issueTypes the issue type scheme have.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "queryString",
              "desc": "String used to perform a case-insensitive partial match with issue type scheme name.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueTypeSchemesMapping",
          "desc": "Get issue type scheme items",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "issueTypeSchemeId",
              "desc": "The list of issue type scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `issueTypeSchemeId=10000&issueTypeSchemeId=10001`.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueTypeSchemeForProjects",
          "desc": "Get issue type schemes for projects",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "projectId",
              "desc": "The list of project IDs. To include multiple project IDs, provide an ampersand-separated list. For example, `projectId=10000&projectId=10001`.",
              "type": "required",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createIssueTypeScheme",
          "desc": "Create issue type scheme",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "assignIssueTypeSchemeToProject",
          "desc": "Assign issue type scheme to project",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateIssueTypeScheme",
          "desc": "Update issue type scheme",
          "input": [
            {
              "name": "issueTypeSchemeId",
              "desc": "The ID of the issue type scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssueTypeScheme",
          "desc": "Delete issue type scheme",
          "input": [
            {
              "name": "issueTypeSchemeId",
              "desc": "The ID of the issue type scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the issue type scheme is deleted.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addIssueTypesToIssueTypeScheme",
          "desc": "Add issue types to issue type scheme",
          "input": [
            {
              "name": "issueTypeSchemeId",
              "desc": "The ID of the issue type scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "reorderIssueTypesInIssueTypeScheme",
          "desc": "Change order of issue types",
          "input": [
            {
              "name": "issueTypeSchemeId",
              "desc": "The ID of the issue type scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeIssueTypeFromIssueTypeScheme",
          "desc": "Remove issue type from issue type scheme",
          "input": [
            {
              "name": "issueTypeSchemeId",
              "desc": "The ID of the issue type scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "issueTypeId",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue type screen schemes",
      "desc": "This resource represents issue type screen schemes. Use it to:\n\n *  get issue type screen schemes and a list of the projects that use them.\n *  create issue type screen schemes.\n *  update issue type screen schemes.\n *  delete issue type screen schemes.\n *  associate issue type screen schemes with projects.\n *  append issue type to screen scheme mappings to issue type screen schemes.\n *  remove issue type to screen scheme mappings from issue type screen schemes.\n *  update default screen scheme of issue type screen scheme.",
      "query": [
        {
          "name": "getIssueTypeScreenSchemes",
          "desc": "Get issue type screen schemes",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The list of issue type screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "queryString",
              "desc": "String used to perform a case-insensitive partial match with issue type screen scheme name.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `name` Sorts by issue type screen scheme name.\n *  `id` Sorts by issue type screen scheme ID.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `projects` that, for each issue type screen schemes, returns information about the projects the issue type screen scheme is assigned to.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueTypeScreenSchemeMappings",
          "desc": "Get issue type screen scheme items",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "issueTypeScreenSchemeId",
              "desc": "The list of issue type screen scheme IDs. To include multiple issue type screen schemes, separate IDs with ampersand: `issueTypeScreenSchemeId=10000&issueTypeScreenSchemeId=10001`.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getIssueTypeScreenSchemeProjectAssociations",
          "desc": "Get issue type screen schemes for projects",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "projectId",
              "desc": "The list of project IDs. To include multiple projects, separate IDs with ampersand: `projectId=10000&projectId=10001`.",
              "type": "required",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getProjectsForIssueTypeScreenScheme",
          "desc": "Get issue type screen scheme projects",
          "input": [
            {
              "name": "issueTypeScreenSchemeId",
              "desc": "The ID of the issue type screen scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "query",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createIssueTypeScreenScheme",
          "desc": "Create issue type screen scheme",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "assignIssueTypeScreenSchemeToProject",
          "desc": "Assign issue type screen scheme to project",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateIssueTypeScreenScheme",
          "desc": "Update issue type screen scheme",
          "input": [
            {
              "name": "issueTypeScreenSchemeId",
              "desc": "The ID of the issue type screen scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteIssueTypeScreenScheme",
          "desc": "Delete issue type screen scheme",
          "input": [
            {
              "name": "issueTypeScreenSchemeId",
              "desc": "The ID of the issue type screen scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the issue type screen scheme is deleted.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "appendMappingsForIssueTypeScreenScheme",
          "desc": "Append mappings to issue type screen scheme",
          "input": [
            {
              "name": "issueTypeScreenSchemeId",
              "desc": "The ID of the issue type screen scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateDefaultScreenScheme",
          "desc": "Update issue type screen scheme default screen scheme",
          "input": [
            {
              "name": "issueTypeScreenSchemeId",
              "desc": "The ID of the issue type screen scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeMappingsFromIssueTypeScreenScheme",
          "desc": "Remove mappings from issue type screen scheme",
          "input": [
            {
              "name": "issueTypeScreenSchemeId",
              "desc": "The ID of the issue type screen scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the screen scheme mappings are removed from the issue type screen scheme.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "JQL",
      "desc": "This resource represents JQL search auto-complete details. Use it to obtain JQL search auto-complete data and suggestions for use in programmatic construction of queries or custom query builders. It also provides operations to:\n\n *  convert one or more JQL queries with user identifiers (username or user key) to equivalent JQL queries with account IDs.\n *  convert readable details in one or more JQL queries to IDs where a user doesn't have permission to view the entity whose details are readable.",
      "query": [
        {
          "name": "getAutoComplete",
          "desc": "Get field reference data (GET)",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getFieldAutoCompleteForQueryString",
          "desc": "Get field auto complete suggestions",
          "input": [
            {
              "name": "fieldName",
              "desc": "The name of the field.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "fieldValue",
              "desc": "The partial field item name entered by the user.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "predicateName",
              "desc": "The name of the [ CHANGED operator predicate](https://confluence.atlassian.com/x/hQORLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED) for which the suggestions are generated. The valid predicate operators are *by*, *from*, and *to*.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "predicateValue",
              "desc": "The partial predicate item name entered by the user.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "getAutoCompletePost",
          "desc": "Get field reference data (POST)",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "parseJqlQueries",
          "desc": "Parse JQL query",
          "input": [
            {
              "name": "validation",
              "desc": "How to validate the JQL query and treat the validation results. Validation options include:\n\n *  `strict` Returns all errors. If validation fails, the query structure is not returned.\n *  `warn` Returns all errors. If validation fails but the JQL query is correctly formed, the query structure is returned.\n *  `none` No validation is performed. If JQL query is correctly formed, the query structure is returned.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "migrateQueries",
          "desc": "Convert user identifiers to account IDs in JQL queries",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful. Note that the JQL queries are returned in the same order that they were passed.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "sanitiseJqlQueries",
          "desc": "Sanitize JQL queries",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "JQL functions (apps)",
      "desc": "This resource represents JQL function's precomputations. Precomputation is a mapping between custom function call and JQL fragment returned by this function. Use it to get and update precomputations.",
      "query": [
        {
          "name": "getPrecomputations",
          "desc": "Get precomputations (apps)",
          "input": [
            {
              "name": "functionKey",
              "desc": "The function key in format:\n\n *  Forge: `ari:cloud:ecosystem::extension/[App ID]/[Environment ID]/static/[Function key from manifest]`\n *  Connect: `[App key]__[Module key]`",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `functionKey` Sorts by the functionKey.\n *  `used` Sorts by the used timestamp.\n *  `created` Sorts by the created timestamp.\n *  `updated` Sorts by the updated timestamp.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "updatePrecomputations",
          "desc": "Update precomputations (apps)",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Labels",
      "desc": "This resource represents available labels. Use it to get available labels for the global label field.",
      "query": [
        {
          "name": "getAllLabels",
          "desc": "Get all labels",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Permissions",
      "desc": "This resource represents permissions. Use it to obtain details of all permissions and determine whether the user has certain permissions.",
      "query": [
        {
          "name": "getMyPermissions",
          "desc": "Get my permissions",
          "input": [
            {
              "name": "projectKey",
              "desc": "The key of project. Ignored if `projectId` is provided.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectId",
              "desc": "The ID of project.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "issueKey",
              "desc": "The key of the issue. Ignored if `issueId` is provided.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "issueId",
              "desc": "The ID of the issue.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "permissions",
              "desc": "A list of permission keys. (Required) This parameter accepts a comma-separated list. To get the list of available permissions, use [Get all permissions](#api-rest-api-3-permissions-get).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectUuid",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectConfigurationUuid",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "commentId",
              "desc": "The ID of the comment.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if `permissions` is empty, contains an invalid key, or does not equal BROWSE\\_PROJECTS when commentId is provided.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the project or issue is not found or the user does not have permission to view the project or issue.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAllPermissions",
          "desc": "Get all permissions",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "getBulkPermissions",
          "desc": "Get bulk permissions",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if:\n\n *  `projectPermissions` is provided without at least one project permission being provided.\n *  an invalid global permission is provided in the global permissions list.\n *  an invalid project permission is provided in the project permissions list.\n *  more than 1000 valid project IDs or more than 1000 valid issue IDs are provided.\n *  an invalid account ID is provided.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getPermittedProjects",
          "desc": "Get permitted projects",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Myself",
      "desc": "This resource represents information about the current user, such as basic details, group membership, application roles, preferences, and locale. Use it to get, create, update, and delete (restore default) values of the user's preferences and locale.",
      "query": [
        {
          "name": "getPreference",
          "desc": "Get preference",
          "input": [
            {
              "name": "key",
              "desc": "The key of the preference.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "string"
            }
          ]
        },
        {
          "name": "getLocale",
          "desc": "Get locale",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getCurrentUser",
          "desc": "Get current user",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about user in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `groups` Returns all groups, including nested groups, the user belongs to.\n *  `applicationRoles` Returns the application roles the user is assigned to.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setPreference",
          "desc": "Set preference",
          "input": [
            {
              "name": "key",
              "desc": "The key of the preference. The maximum length is 255 characters.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removePreference",
          "desc": "Delete preference",
          "input": [
            {
              "name": "key",
              "desc": "The key of the preference.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "setLocale",
          "desc": "Set locale",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteLocale",
          "desc": "Delete locale",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue notification schemes",
      "desc": "This resource represents notification schemes, lists of events and the recipients who will receive notifications for those events. Use it to get details of a notification scheme and a list of notification schemes.\n\n### About notification schemes ###\n\nA notification scheme is a list of events and recipients who will receive notifications for those events. The list is contained within the `notificationSchemeEvents` object and contains pairs of `events` and `notifications`:\n\n *  `event` Identifies the type of event. The events can be [Jira system events](https://support.atlassian.com/jira-cloud-administration/docs/configure-notification-schemes/) (see the *Events* section) or [custom events](https://support.atlassian.com/jira-cloud-administration/docs/add-a-custom-event/).\n *  `notifications` Identifies the [recipients](https://confluence.atlassian.com/x/8YdKLg#Creatinganotificationscheme-recipientsRecipients) of notifications for each event. Recipients can be any of the following types:\n    \n     *  `CurrentAssignee`\n     *  `Reporter`\n     *  `CurrentUser`\n     *  `ProjectLead`\n     *  `ComponentLead`\n     *  `User` (the `parameter` is the user key)\n     *  `Group` (the `parameter` is the group name)\n     *  `ProjectRole` (the `parameter` is the project role ID)\n     *  `EmailAddress` *(deprecated)*\n     *  `AllWatchers`\n     *  `UserCustomField` (the `parameter` is the ID of the custom field)\n     *  `GroupCustomField`(the `parameter` is the ID of the custom field)",
      "query": [
        {
          "name": "getNotificationSchemes",
          "desc": "Get notification schemes paginated",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The list of notification schemes IDs to be filtered by",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "projectId",
              "desc": "The list of projects IDs to be filtered by",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "onlyDefault",
              "desc": "When set to true, returns only the default notification scheme. If you provide project IDs not associated with the default, returns an empty page. The default value is false.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information\n *  `field` Returns information about any custom fields assigned to receive an event\n *  `group` Returns information about any groups assigned to receive an event\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information\n *  `projectRole` Returns information about any project roles assigned to receive an event\n *  `user` Returns information about any users assigned to receive an event",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful. Only returns notification schemes that the user has permission to access. An empty list is returned if the user lacks permission to access all notification schemes.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getNotificationSchemeToProjectMappings",
          "desc": "Get projects using notification schemes paginated",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "notificationSchemeId",
              "desc": "The list of notifications scheme IDs to be filtered out",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "projectId",
              "desc": "The list of project IDs to be filtered out",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if search criteria are invalid, strings vs numbers for projectId, notificationSchemeId, startAt and maxResult",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getNotificationScheme",
          "desc": "Get notification scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the notification scheme. Use [Get notification schemes paginated](#api-rest-api-3-notificationscheme-get) to get a list of notification scheme IDs.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information\n *  `field` Returns information about any custom fields assigned to receive an event\n *  `group` Returns information about any groups assigned to receive an event\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information\n *  `projectRole` Returns information about any project roles assigned to receive an event\n *  `user` Returns information about any users assigned to receive an event",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createNotificationScheme",
          "desc": "Create notification scheme",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateNotificationScheme",
          "desc": "Update notification scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the notification scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the notification scheme isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addNotifications",
          "desc": "Add notifications to notification scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the notification scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the notification scheme isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteNotificationScheme",
          "desc": "Delete notification scheme",
          "input": [
            {
              "name": "notificationSchemeId",
              "desc": "The ID of the notification scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the notification scheme isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeNotificationFromNotificationScheme",
          "desc": "Remove notification from notification scheme",
          "input": [
            {
              "name": "notificationSchemeId",
              "desc": "The ID of the notification scheme.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "notificationId",
              "desc": "The ID of the notification.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if either the notification scheme or notification isn't found.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Permission schemes",
      "desc": "This resource represents permission schemes. Use it to get, create, update, and delete permission schemes as well as get, create, update, and delete details of the permissions granted in those schemes.",
      "query": [
        {
          "name": "getAllPermissionSchemes",
          "desc": "Get all permission schemes",
          "input": [
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getPermissionScheme",
          "desc": "Get permission scheme",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the permission scheme to return.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getPermissionSchemeGrants",
          "desc": "Get permission scheme grants",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the permission scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `user` Returns information about the user who is granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `field` Returns information about the custom field granted the permission.\n *  `all` Returns all expandable information.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getPermissionSchemeGrant",
          "desc": "Get permission scheme grant",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the permission scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "permissionId",
              "desc": "The ID of the permission grant.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createPermissionScheme",
          "desc": "Create permission scheme",
          "input": [
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the permission scheme is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updatePermissionScheme",
          "desc": "Update permission scheme",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the permission scheme to update.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the scheme is updated.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deletePermissionScheme",
          "desc": "Delete permission scheme",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the permission scheme being deleted.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        },
        {
          "name": "createPermissionGrant",
          "desc": "Create permission grant",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the permission scheme in which to create a new permission grant.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are always included when you specify any value. Expand options include:\n\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `user` Returns information about the user who is granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `field` Returns information about the custom field granted the permission.\n *  `all` Returns all expandable information.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the scheme permission is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deletePermissionSchemeEntity",
          "desc": "Delete permission scheme grant",
          "input": [
            {
              "name": "schemeId",
              "desc": "The ID of the permission scheme to delete the permission grant from.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "permissionId",
              "desc": "The ID of the permission grant to delete.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Issue priorities",
      "desc": "This resource represents issue priorities. Use it to get, create and update issue priorities and details for individual issue priorities.",
      "query": [
        {
          "name": "getPriorities",
          "desc": "Get priorities",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "searchPriorities",
          "desc": "Search priorities",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The list of priority IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=2&id=3`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "projectId",
              "desc": "The list of projects IDs. To include multiple IDs, provide an ampersand-separated list. For example, `projectId=10010&projectId=10111`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "onlyDefault",
              "desc": "Whether only the default priority is returned.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getPriority",
          "desc": "Get priority",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue priority.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createPriority",
          "desc": "Create priority",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setDefaultPriority",
          "desc": "Set default priority",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue priority isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "movePriorities",
          "desc": "Move priorities",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue priority isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updatePriority",
          "desc": "Update priority",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue priority.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue priority isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deletePriority",
          "desc": "Delete priority",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue priority.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "replaceWith",
              "desc": "The ID of the issue priority that will replace the currently selected resolution.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "303",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue priority isn't found.",
              "data_type": "unknown"
            },
            {
              "name": "409",
              "desc": "Returned if a task to delete the issue priority is already running.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Projects",
      "desc": "This resource represents projects. Use it to get, create, update, and delete projects. Also get statuses available to a project, a project's notification schemes, and update a project's type.",
      "query": [
        {
          "name": "getAllProjects",
          "desc": "Get all projects",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:\n\n *  `description` Returns the project description.\n *  `issueTypes` Returns all issue types associated with the project.\n *  `lead` Returns information about the project lead.\n *  `projectKeys` Returns all project keys associated with the project.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "recent",
              "desc": "Returns the user's most recently accessed projects. You may specify the number of results to return up to a maximum of 20. If access is anonymous, then the recently accessed projects are based on the current HTTP session.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "properties",
              "desc": "A list of project properties to return for the project. This parameter accepts a comma-separated list.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getRecent",
          "desc": "Get recent projects",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:\n\n *  `description` Returns the project description.\n *  `projectKeys` Returns all project keys associated with a project.\n *  `lead` Returns information about the project lead.\n *  `issueTypes` Returns all issue types associated with the project.\n *  `url` Returns the URL associated with the project.\n *  `permissions` Returns the permissions associated with the project.\n *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.\n *  `*` Returns the project with all available expand options.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "properties",
              "desc": "EXPERIMENTAL. A list of project properties to return for the project. This parameter accepts a comma-separated list. Invalid property names are ignored.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "searchProjects",
          "desc": "Get projects paginated",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field.\n\n *  `category` Sorts by project category. A complete list of category IDs is found using [Get all project categories](#api-rest-api-3-projectCategory-get).\n *  `issueCount` Sorts by the total number of issues in each project.\n *  `key` Sorts by project key.\n *  `lastIssueUpdatedTime` Sorts by the last issue update time.\n *  `name` Sorts by project name.\n *  `owner` Sorts by project lead.\n *  `archivedDate` EXPERIMENTAL. Sorts by project archived date.\n *  `deletedDate` EXPERIMENTAL. Sorts by project deleted date.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The project IDs to filter the results by. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`. Up to 50 project IDs can be provided.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "keys",
              "desc": "The project keys to filter the results by. To include multiple keys, provide an ampersand-separated list. For example, `keys=PA&keys=PB`. Up to 50 project keys can be provided.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "query",
              "desc": "Filter the results using a literal string. Projects with a matching `key` or `name` are returned (case insensitive).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "typeKey",
              "desc": "Orders results by the [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes). This parameter accepts a comma-separated list. Valid values are `business`, `service_desk`, and `software`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "categoryId",
              "desc": "The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "action",
              "desc": "Filter results by projects for which the user can:\n\n *  `view` the project, meaning that they have one of the following permissions:\n    \n     *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  `browse` the project, meaning that they have the *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n *  `edit` the project, meaning that they have one of the following permissions:\n    \n     *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.\n     *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).\n *  `create` the project, meaning that they have the *Create issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the issue is created.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expanded options include:\n\n *  `description` Returns the project description.\n *  `projectKeys` Returns all project keys associated with a project.\n *  `lead` Returns information about the project lead.\n *  `issueTypes` Returns all issue types associated with the project.\n *  `url` Returns the URL associated with the project.\n *  `insight` EXPERIMENTAL. Returns the insight details of total issue count and last issue update time for the project.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "status",
              "desc": "EXPERIMENTAL. Filter results by project status:\n\n *  `live` Search live projects.\n *  `archived` Search archived projects.\n *  `deleted` Search deleted projects, those in the recycle bin.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "properties",
              "desc": "EXPERIMENTAL. A list of project properties to return for the project. This parameter accepts a comma-separated list.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "propertyQuery",
              "desc": "EXPERIMENTAL. A query string used to search properties. The query string cannot be specified using a JSON object. For example, to search for the value of `nested` from `{\"something\":{\"nested\":1,\"other\":2}}` use `[thepropertykey].something.nested=1`. Note that the propertyQuery key is enclosed in square brackets to enable searching where the propertyQuery key includes dot (.) or equals (=) characters. Note that `thepropertykey` is only returned when included in `properties`.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getProject",
          "desc": "Get project",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:\n\n *  `description` The project description.\n *  `issueTypes` The issue types associated with the project.\n *  `lead` The project lead.\n *  `projectKeys` All project keys associated with the project.\n *  `issueTypeHierarchy` The project issue type hierarchy.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "properties",
              "desc": "A list of project properties to return for the project. This parameter accepts a comma-separated list.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAllStatuses",
          "desc": "Get all statuses for project",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getHierarchy",
          "desc": "Get project issue type hierarchy",
          "input": [
            {
              "name": "projectId",
              "desc": "The ID of the project.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getNotificationSchemeForProject",
          "desc": "Get project notification scheme",
          "input": [
            {
              "name": "projectKeyOrId",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `all` Returns all expandable information\n *  `field` Returns information about any custom fields assigned to receive an event\n *  `group` Returns information about any groups assigned to receive an event\n *  `notificationSchemeEvents` Returns a list of event associations. This list is returned for all expandable information\n *  `projectRole` Returns information about any project roles assigned to receive an event\n *  `user` Returns information about any users assigned to receive an event",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createProject",
          "desc": "Create project",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the project is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateProject",
          "desc": "Update project",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that the project description, issue types, and project lead are included in all responses by default. Expand options include:\n\n *  `description` The project description.\n *  `issueTypes` The issue types associated with the project.\n *  `lead` The project lead.\n *  `projectKeys` All project keys associated with the project.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the project is updated.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteProject",
          "desc": "Delete project",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "enableUndo",
              "desc": "Whether this project is placed in the Jira recycle bin where it will be available for restoration.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": []
        },
        {
          "name": "archiveProject",
          "desc": "Archive project",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteProjectAsynchronously",
          "desc": "Delete project asynchronously",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "303",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "restore",
          "desc": "Restore deleted or archived project",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Project types",
      "desc": "This resource represents project types. Use it to obtain a list of all project types, a list of project types accessible to the calling user, and details of a project type.",
      "query": [
        {
          "name": "getAllProjectTypes",
          "desc": "Get all project types",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getAllAccessibleProjectTypes",
          "desc": "Get licensed project types",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getProjectTypeByKey",
          "desc": "Get project type by key",
          "input": [
            {
              "name": "projectTypeKey",
              "desc": "The key of the project type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAccessibleProjectTypeByKey",
          "desc": "Get accessible project type by key",
          "input": [
            {
              "name": "projectTypeKey",
              "desc": "The key of the project type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Project avatars",
      "desc": "This resource represents avatars associated with a project. Use it to get, load, set, and remove project avatars.",
      "query": [
        {
          "name": "getAllProjectAvatars",
          "desc": "Get all project avatars",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The ID or (case-sensitive) key of the project.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "updateProjectAvatar",
          "desc": "Set project avatar",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The ID or (case-sensitive) key of the project.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteProjectAvatar",
          "desc": "Delete project avatar",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or (case-sensitive) key.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the avatar.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        },
        {
          "name": "createProjectAvatar",
          "desc": "Load project avatar",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The ID or (case-sensitive) key of the project.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "x",
              "desc": "The X coordinate of the top-left corner of the crop region.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "y",
              "desc": "The Y coordinate of the top-left corner of the crop region.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "size",
              "desc": "The length of each side of the crop region.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Project features",
      "desc": "This resource represents project features. Use it to get the list of features for a project and modify the state of a feature. The project feature endpoint is available only for Jira Software, both for team- and company-managed projects.",
      "query": [
        {
          "name": "getFeaturesForProject",
          "desc": "Get project features",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The ID or (case-sensitive) key of the project.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "toggleFeatureForProject",
          "desc": "Set project feature state",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The ID or (case-sensitive) key of the project.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "featureKey",
              "desc": "The key of the feature.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Project properties",
      "desc": "This resource represents [project](#api-group-Projects) properties, which provides for storing custom data against a project. Use it to get, create, and delete project properties as well as get a list of property keys for a project. Project properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "query": [
        {
          "name": "getProjectPropertyKeys",
          "desc": "Get project property keys",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getProjectProperty",
          "desc": "Get project property",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The project property key. Use [Get project property keys](#api-rest-api-3-project-projectIdOrKey-properties-get) to get a list of all project property keys.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setProjectProperty",
          "desc": "Set project property",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the project property. The maximum length is 255 characters.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the project property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned if the project property is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteProjectProperty",
          "desc": "Delete project property",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The project property key. Use [Get project property keys](#api-rest-api-3-project-projectIdOrKey-properties-get) to get a list of all project property keys.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Project roles",
      "desc": "This resource represents the roles that users can play in projects. Use this resource to get, create, update, and delete project roles.",
      "query": [
        {
          "name": "getProjectRoles",
          "desc": "Get project roles for project",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "object"
            }
          ]
        },
        {
          "name": "getProjectRole",
          "desc": "Get project role for project",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "excludeInactiveUsers",
              "desc": "Exclude inactive users.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getProjectRoleDetails",
          "desc": "Get project role details",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "currentMember",
              "desc": "Whether the roles should be filtered to include only those the user is assigned to.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "excludeConnectAddons",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getAllProjectRoles",
          "desc": "Get all project roles",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getProjectRoleById",
          "desc": "Get project role by ID",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createProjectRole",
          "desc": "Create project role",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "fullyUpdateProjectRole",
          "desc": "Fully update project role",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "partialUpdateProjectRole",
          "desc": "Partial update project role",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteProjectRole",
          "desc": "Delete project role",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the project role to delete. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "swap",
              "desc": "The ID of the project role that will replace the one being deleted.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Project role actors",
      "desc": "This resource represents the users assigned to [project roles](#api-group-Issue-comments). Use it to get, add, and remove default users from project roles. Also use it to add and remove users from a project role associated with a project.",
      "query": [
        {
          "name": "getProjectRoleActorsForRole",
          "desc": "Get default actors for project role",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setActors",
          "desc": "Set actors for project role",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful. The complete list of actors for the project is returned.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "addActorUsers",
          "desc": "Add actors to project role",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful. The complete list of actors for the project is returned.\n\nFor example, the cURL request above adds a group, *jira-developers*. For the response below to be returned as a result of that request, the user *Mia Krystof* would have previously been added as a `user` actor for this project.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteActor",
          "desc": "Delete actors from project role",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "user",
              "desc": "The user account ID of the user to remove from the project role.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "group",
              "desc": "The name of the group to remove from the project role. This parameter cannot be used with the `groupId` parameter. As a group's name can change, use of `groupId` is recommended.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "The ID of the group to remove from the project role. This parameter cannot be used with the `group` parameter.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "addProjectRoleActorsToRole",
          "desc": "Add default actors to project role",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteProjectRoleActorsFromRole",
          "desc": "Delete default actors from project role",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "user",
              "desc": "The user account ID of the user to remove as a default actor.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "groupId",
              "desc": "The group ID of the group to be removed as a default actor. This parameter cannot be used with the `group` parameter.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "group",
              "desc": "The group name of the group to be removed as a default actor.This parameter cannot be used with the `groupId` parameter. As a group's name can change, use of `groupId` is recommended.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Project versions",
      "desc": "This resource represents project versions. Use it to get, get lists of, create, update, move, merge, and delete project versions. This resource also provides counts of issues by version.",
      "query": [
        {
          "name": "getProjectVersionsPaginated",
          "desc": "Get project versions paginated",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `description` Sorts by version description.\n *  `name` Sorts by version name.\n *  `releaseDate` Sorts by release date, starting with the oldest date. Versions with no release date are listed last.\n *  `sequence` Sorts by the order of appearance in the user interface.\n *  `startDate` Sorts by start date, starting with the oldest date. Versions with no start date are listed last.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "query",
              "desc": "Filter the results using a literal string. Versions with matching `name` or `description` are returned (case insensitive).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "status",
              "desc": "A list of status values used to filter the results by version status. This parameter accepts a comma-separated list. The status values are `released`, `unreleased`, and `archived`.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `issuesstatus` Returns the number of issues in each status category for each version.\n *  `operations` Returns actions that can be performed on the specified version.\n *  `driver` Returns the Atlassian account ID of the version driver.\n *  `approvers` Returns a list containing the approvers for this version.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getProjectVersions",
          "desc": "Get project versions",
          "input": [
            {
              "name": "projectIdOrKey",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `operations`, which returns actions that can be performed on the version.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getVersion",
          "desc": "Get version",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about version in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `operations` Returns the list of operations available for this version.\n *  `issuesstatus` Returns the count of issues in this version for each of the status categories *to do*, *in progress*, *done*, and *unmapped*. The *unmapped* property represents the number of issues with a status other than *to do*, *in progress*, and *done*.\n *  `driver` Returns the Atlassian account ID of the version driver.\n *  `approvers` Returns a list containing the Atlassian account IDs of approvers for this version.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getVersionRelatedIssues",
          "desc": "Get version's related issues count",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getRelatedWork",
          "desc": "Get related work",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getVersionUnresolvedIssues",
          "desc": "Get version's unresolved issues count",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createVersion",
          "desc": "Create version",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateVersion",
          "desc": "Update version",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteVersion",
          "desc": "Delete version",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "moveFixIssuesTo",
              "desc": "The ID of the version to update `fixVersion` to when the field contains the deleted version. The replacement version must be in the same project as the version being deleted and cannot be the version being deleted.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "moveAffectedIssuesTo",
              "desc": "The ID of the version to update `affectedVersion` to when the field contains the deleted version. The replacement version must be in the same project as the version being deleted and cannot be the version being deleted.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "mergeVersions",
          "desc": "Merge versions",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version to delete.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "moveIssuesTo",
              "desc": "The ID of the version to merge into.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the version is deleted.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "moveVersion",
          "desc": "Move version",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version to be moved.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateRelatedWork",
          "desc": "Update related work",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version to update the related work on. For the related work id, pass it to the input JSON.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful together with updated related work.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "createRelatedWork",
          "desc": "Create related work",
          "input": [
            {
              "name": "id",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteAndReplaceVersion",
          "desc": "Delete and replace version",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the version.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the version is deleted.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteRelatedWork",
          "desc": "Delete related work",
          "input": [
            {
              "name": "versionId",
              "desc": "The ID of the version that the target related work belongs to.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "relatedWorkId",
              "desc": "The ID of the related work to delete.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Project email",
      "desc": "This resource represents the email address used to send a project's notifications. Use it to get and set the [project's sender email address](https://confluence.atlassian.com/x/dolKLg).",
      "query": [
        {
          "name": "getProjectEmail",
          "desc": "Get project's sender email",
          "input": [
            {
              "name": "projectId",
              "desc": "The project ID.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "updateProjectEmail",
          "desc": "Set project's sender email",
          "input": [
            {
              "name": "projectId",
              "desc": "The project ID.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the project's sender email address is successfully set.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Project permission schemes",
      "desc": "This resource represents permission schemes for a project. Use this resource to:\n\n *  get details of a project's issue security levels available to the calling user.\n *  get the permission scheme associated with the project or assign different permission scheme to the project.\n *  get details of a project's issue security scheme.\n\nSee [Managing project permissions](https://confluence.atlassian.com/x/yodKLg) for more information about permission schemes.",
      "query": [
        {
          "name": "getProjectIssueSecurityScheme",
          "desc": "Get project issue security scheme",
          "input": [
            {
              "name": "projectKeyOrId",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getAssignedPermissionScheme",
          "desc": "Get assigned permission scheme",
          "input": [
            {
              "name": "projectKeyOrId",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getSecurityLevelsForProject",
          "desc": "Get project issue security levels",
          "input": [
            {
              "name": "projectKeyOrId",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "assignPermissionScheme",
          "desc": "Assign permission scheme",
          "input": [
            {
              "name": "projectKeyOrId",
              "desc": "The project ID or project key (case sensitive).",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Note that permissions are included when you specify any value. Expand options include:\n\n *  `all` Returns all expandable information.\n *  `field` Returns information about the custom field granted the permission.\n *  `group` Returns information about the group that is granted the permission.\n *  `permissions` Returns all permission grants for each permission scheme.\n *  `projectRole` Returns information about the project role granted the permission.\n *  `user` Returns information about the user who is granted the permission.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Project categories",
      "desc": "This resource represents project categories. Use it to create, update, and delete project categories as well as obtain a list of all project categories and details of individual categories. For more information on managing project categories, see [Adding, assigning, and deleting project categories](https://confluence.atlassian.com/x/-A5WMg).",
      "query": [
        {
          "name": "getAllProjectCategories",
          "desc": "Get all project categories",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getProjectCategoryById",
          "desc": "Get project category by ID",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the project category.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createProjectCategory",
          "desc": "Create project category",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateProjectCategory",
          "desc": "Update project category",
          "input": [
            {
              "name": "id",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeProjectCategory",
          "desc": "Delete project category",
          "input": [
            {
              "name": "id",
              "desc": "ID of the project category to delete.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Project key and name validation",
      "desc": "This resource provides validation for project keys and names.",
      "query": [
        {
          "name": "validateProjectKey",
          "desc": "Validate project key",
          "input": [
            {
              "name": "key",
              "desc": "The project key.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getValidProjectKey",
          "desc": "Get valid project key",
          "input": [
            {
              "name": "key",
              "desc": "The project key.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "string"
            }
          ]
        },
        {
          "name": "getValidProjectName",
          "desc": "Get valid project name",
          "input": [
            {
              "name": "name",
              "desc": "The project name.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "string"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Issue resolutions",
      "desc": "This resource represents issue resolution values. Use it to obtain a list of all issue resolution values and the details of individual resolution values.",
      "query": [
        {
          "name": "getResolutions",
          "desc": "Get resolutions",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "searchResolutions",
          "desc": "Search resolutions",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The list of resolutions IDs to be filtered out",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "onlyDefault",
              "desc": "When set to true, return default only, when IDs provided, if none of them is default, return empty page. Default value is false",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getResolution",
          "desc": "Get resolution",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue resolution value.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createResolution",
          "desc": "Create resolution",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setDefaultResolution",
          "desc": "Set default resolution",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue resolution isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "moveResolutions",
          "desc": "Move resolutions",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue resolution isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateResolution",
          "desc": "Update resolution",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue resolution.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue resolution isn't found.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteResolution",
          "desc": "Delete resolution",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the issue resolution.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "replaceWith",
              "desc": "The ID of the issue resolution that will replace the currently selected resolution.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "303",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request isn't valid.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user doesn't have the necessary permission.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the issue resolution isn't found.",
              "data_type": "unknown"
            },
            {
              "name": "409",
              "desc": "Returned if a task to delete the issue resolution is already running.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Screen tabs",
      "desc": "This resource represents the screen tabs used to record issue details. Use it to get, create, update, move, and delete screen tabs.",
      "query": [
        {
          "name": "getBulkScreenTabs",
          "desc": "Get bulk screen tabs",
          "input": [
            {
              "name": "screenId",
              "desc": "The list of screen IDs. To include multiple screen IDs, provide an ampersand-separated list. For example, `screenId=10000&screenId=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "tabId",
              "desc": "The list of tab IDs. To include multiple tab IDs, provide an ampersand-separated list. For example, `tabId=10000&tabId=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResult",
              "desc": "The maximum number of items to return per page. The maximum number is 100,",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": []
        },
        {
          "name": "getAllScreenTabs",
          "desc": "Get all screen tabs",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "projectKey",
              "desc": "The key of the project.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "addScreenTab",
          "desc": "Create screen tab",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "renameScreenTab",
          "desc": "Update screen tab",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "tabId",
              "desc": "The ID of the screen tab.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteScreenTab",
          "desc": "Delete screen tab",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "tabId",
              "desc": "The ID of the screen tab.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        },
        {
          "name": "moveScreenTab",
          "desc": "Move screen tab",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "tabId",
              "desc": "The ID of the screen tab.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "pos",
              "desc": "The position of tab. The base index is 0.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Screen tab fields",
      "desc": "This resource represents the screen tab fields used to record issue details. Use it to get, add, move, and remove fields from screen tabs.",
      "query": [
        {
          "name": "getAllScreenTabFields",
          "desc": "Get all screen tab fields",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "tabId",
              "desc": "The ID of the screen tab.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "projectKey",
              "desc": "The key of the project.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "addScreenTabField",
          "desc": "Add screen tab field",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "tabId",
              "desc": "The ID of the screen tab.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeScreenTabField",
          "desc": "Remove screen tab field",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "tabId",
              "desc": "The ID of the screen tab.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The ID of the field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "moveScreenTabField",
          "desc": "Move screen tab field",
          "input": [
            {
              "name": "screenId",
              "desc": "The ID of the screen.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "tabId",
              "desc": "The ID of the screen tab.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The ID of the field.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Screen schemes",
      "desc": "This resource represents screen schemes in classic projects. Use it to get, create, update, and delete screen schemes.",
      "query": [
        {
          "name": "getScreenSchemes",
          "desc": "Get screen schemes",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "id",
              "desc": "The list of screen scheme IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=10000&id=10001`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) include additional information in the response. This parameter accepts `issueTypeScreenSchemes` that, for each screen schemes, returns information about the issue type screen scheme the screen scheme is assigned to.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "queryString",
              "desc": "String used to perform a case-insensitive partial match with screen scheme name.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `id` Sorts by screen scheme ID.\n *  `name` Sorts by screen scheme name.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createScreenScheme",
          "desc": "Create screen scheme",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateScreenScheme",
          "desc": "Update screen scheme",
          "input": [
            {
              "name": "screenSchemeId",
              "desc": "The ID of the screen scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteScreenScheme",
          "desc": "Delete screen scheme",
          "input": [
            {
              "name": "screenSchemeId",
              "desc": "The ID of the screen scheme.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Server info",
      "desc": "This resource provides information about the Jira instance.",
      "query": [
        {
          "name": "getServerInfo",
          "desc": "Get Jira instance info",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Issue navigator settings",
      "desc": "This resource represents issue navigator settings. Use it to get and set issue navigator default columns.",
      "query": [
        {
          "name": "getIssueNavigatorDefaultColumns",
          "desc": "Get issue navigator default columns",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setIssueNavigatorDefaultColumns",
          "desc": "Set issue navigator default columns",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Workflow statuses",
      "desc": "This resource represents issue workflow statuses. Use it to obtain a list of all statuses associated with workflows and the details of a status.",
      "query": [
        {
          "name": "getStatuses",
          "desc": "Get all statuses",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getStatus",
          "desc": "Get status",
          "input": [
            {
              "name": "idOrName",
              "desc": "The ID or name of the status.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Workflow status categories",
      "desc": "This resource represents status categories. Use it to obtain a list of all status categories and the details of a category. Status categories provided a mechanism for categorizing [statuses](#api-group-Workflow-statuses).",
      "query": [
        {
          "name": "getStatusCategories",
          "desc": "Get all status categories",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getStatusCategory",
          "desc": "Get status category",
          "input": [
            {
              "name": "idOrKey",
              "desc": "The ID or key of the status category.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "Status",
      "desc": "This resource represents statuses. Use it to search, get, create, delete, and change statuses.",
      "query": [
        {
          "name": "getStatusesById",
          "desc": "Bulk get statuses",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `usages` Returns the project and issue types that use the status in their workflow.\n *  `workflowUsages` Returns the workflows that use the status.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "id",
              "desc": "The list of status IDs. To include multiple IDs, provide an ampersand-separated list. For example, id=10000&id=10001.\n\nMin items `1`, Max items `50`",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "search",
          "desc": "Search statuses paginated",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `usages` Returns the project and issue types that use the status in their workflow.\n *  `workflowUsages` Returns the workflows that use the status.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectId",
              "desc": "The project the status is part of or null for global statuses.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "searchString",
              "desc": "Term to match status names against or null to search for all statuses in the search scope.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "statusCategory",
              "desc": "Category of the status to filter by. The supported values are: `TODO`, `IN_PROGRESS`, and `DONE`.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "updateStatuses",
          "desc": "Bulk update statuses",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "createStatuses",
          "desc": "Bulk create statuses",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "deleteStatusesById",
          "desc": "Bulk delete Statuses",
          "input": [
            {
              "name": "id",
              "desc": "The list of status IDs. To include multiple IDs, provide an ampersand-separated list. For example, id=10000&id=10001.\n\nMin items `1`, Max items `50`",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Tasks",
      "desc": "This resource represents a [long-running asynchronous tasks](#async-operations). Use it to obtain details about the progress of a long-running task or cancel a long-running task.",
      "query": [
        {
          "name": "getTask",
          "desc": "Get task",
          "input": [
            {
              "name": "taskId",
              "desc": "The ID of the task.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "cancelTask",
          "desc": "Cancel task",
          "input": [
            {
              "name": "taskId",
              "desc": "The ID of the task.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "202",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if cancellation of the task is not possible.",
              "data_type": "array"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "array"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "array"
            },
            {
              "name": "404",
              "desc": "Returned if the task is not found.",
              "data_type": "array"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "UI modifications (apps)",
      "desc": "UI modifications is a feature available for **Forge apps only**. It enables Forge apps to control how selected Jira fields behave on the following views: global issue create, issue view. For example: hide specific fields, set them as required, etc.",
      "query": [
        {
          "name": "getUiModifications",
          "desc": "Get UI modifications",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "expand",
              "desc": "Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `data` Returns UI modification data.\n *  `contexts` Returns UI modification contexts.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createUiModification",
          "desc": "Create UI modification",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the UI modification is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateUiModification",
          "desc": "Update UI modification",
          "input": [
            {
              "name": "uiModificationId",
              "desc": "The ID of the UI modification.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the UI modification is updated.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteUiModification",
          "desc": "Delete UI modification",
          "input": [
            {
              "name": "uiModificationId",
              "desc": "The ID of the UI modification.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the UI modification is deleted.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Users",
      "desc": "This resource represent users. Use it to:\n\n *  get, get a list of, create, and delete users.\n *  get, set, and reset a user's default issue table columns.\n *  get a list of the groups the user belongs to.\n *  get a list of user account IDs for a list of usernames or user keys.",
      "query": [
        {
          "name": "getUser",
          "desc": "Get user",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*. Required.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "key",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information about users in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `groups` includes all groups and nested groups to which the user belongs.\n *  `applicationRoles` includes details of all the applications to which the user has access.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "bulkGetUsers",
          "desc": "Bulk get users",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "key",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "accountId",
              "desc": "The account ID of a user. To specify multiple users, pass multiple `accountId` parameters. For example, `accountId=5b10a2844c20165700ede21g&accountId=5b10ac8d82e05b22cc7d4ef5`.",
              "type": "required",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "bulkGetUsersMigration",
          "desc": "Get account IDs for users",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "username",
              "desc": "Username of a user. To specify multiple users, pass multiple copies of this parameter. For example, `username=fred&username=barney`. Required if `key` isn't provided. Cannot be provided if `key` is present.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "key",
              "desc": "Key of a user. To specify multiple users, pass multiple copies of this parameter. For example, `key=fred&key=barney`. Required if `username` isn't provided. Cannot be provided if `username` is present.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getUserDefaultColumns",
          "desc": "Get user default columns",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getUserEmail",
          "desc": "Get user email",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getUserEmailBulk",
          "desc": "Get user email bulk",
          "input": [
            {
              "name": "accountId",
              "desc": "The account IDs of the users for which emails are required. An `accountId` is an identifier that uniquely identifies the user across all Atlassian products. For example, `5b10ac8d82e05b22cc7d4ef5`. Note, this should be treated as an opaque identifier (that is, do not assume any structure in the value).",
              "type": "required",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getUserGroups",
          "desc": "Get user groups",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "key",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getAllUsersDefault",
          "desc": "Get all users default",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getAllUsers",
          "desc": "Get all users",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createUser",
          "desc": "Create user",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "removeUser",
          "desc": "Delete user",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "key",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "setUserColumns",
          "desc": "Set user default columns",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "resetUserColumns",
          "desc": "Reset user default columns",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "User search",
      "desc": "This resource represents various ways to search for and find users. Use it to obtain list of users including users assignable to projects and issues, users with permissions, user lists for pickup fields, and user lists generated using structured queries. Note that the operations in this resource only return users found within the first 1000 users.",
      "query": [
        {
          "name": "findBulkAssignableUsers",
          "desc": "Find users assignable to projects",
          "input": [
            {
              "name": "query",
              "desc": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectKeys",
              "desc": "A list of project keys (case sensitive). This parameter accepts a comma-separated list.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "findAssignableUsers",
          "desc": "Find users assignable to issues",
          "input": [
            {
              "name": "query",
              "desc": "A query string that is matched against user attributes, such as `displayName`, and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `username` or `accountId` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "sessionId",
              "desc": "The sessionId of this request. SessionId is the same until the assignee is set.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "project",
              "desc": "The project ID or project key (case sensitive). Required, unless `issueKey` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "issueKey",
              "desc": "The key of the issue. Required, unless `project` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return. This operation may return less than the maximum number of items even if more are available. The operation fetches users up to the maximum and then, from the fetched users, returns only the users that can be assigned to the issue.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "actionDescriptorId",
              "desc": "The ID of the transition.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "recommend",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "findUsersWithAllPermissions",
          "desc": "Find users with permissions",
          "input": [
            {
              "name": "query",
              "desc": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "permissions",
              "desc": "A comma separated list of permissions. Permissions can be specified as any:\n\n *  permission returned by [Get all permissions](#api-rest-api-3-permissions-get).\n *  custom project permission added by Connect apps.\n *  (deprecated) one of the following:\n    \n     *  ASSIGNABLE\\_USER\n     *  ASSIGN\\_ISSUE\n     *  ATTACHMENT\\_DELETE\\_ALL\n     *  ATTACHMENT\\_DELETE\\_OWN\n     *  BROWSE\n     *  CLOSE\\_ISSUE\n     *  COMMENT\\_DELETE\\_ALL\n     *  COMMENT\\_DELETE\\_OWN\n     *  COMMENT\\_EDIT\\_ALL\n     *  COMMENT\\_EDIT\\_OWN\n     *  COMMENT\\_ISSUE\n     *  CREATE\\_ATTACHMENT\n     *  CREATE\\_ISSUE\n     *  DELETE\\_ISSUE\n     *  EDIT\\_ISSUE\n     *  LINK\\_ISSUE\n     *  MANAGE\\_WATCHER\\_LIST\n     *  MODIFY\\_REPORTER\n     *  MOVE\\_ISSUE\n     *  PROJECT\\_ADMIN\n     *  RESOLVE\\_ISSUE\n     *  SCHEDULE\\_ISSUE\n     *  SET\\_ISSUE\\_SECURITY\n     *  TRANSITION\\_ISSUE\n     *  VIEW\\_VERSION\\_CONTROL\n     *  VIEW\\_VOTERS\\_AND\\_WATCHERS\n     *  VIEW\\_WORKFLOW\\_READONLY\n     *  WORKLOG\\_DELETE\\_ALL\n     *  WORKLOG\\_DELETE\\_OWN\n     *  WORKLOG\\_EDIT\\_ALL\n     *  WORKLOG\\_EDIT\\_OWN\n     *  WORK\\_ISSUE",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "issueKey",
              "desc": "The issue key for the issue.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectKey",
              "desc": "The project key for the project (case sensitive).",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "findUsersForPicker",
          "desc": "Find users for picker",
          "input": [
            {
              "name": "query",
              "desc": "A query string that is matched against user attributes, such as `displayName`, and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return. The total number of matched users is returned in `total`.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "showAvatar",
              "desc": "Include the URI to the user's avatar.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "exclude",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "excludeAccountIds",
              "desc": "A list of account IDs to exclude from the search results. This parameter accepts a comma-separated list. Multiple account IDs can also be provided using an ampersand-separated list. For example, `excludeAccountIds=5b10a2844c20165700ede21g,5b10a0effa615349cb016cd8&excludeAccountIds=5b10ac8d82e05b22cc7d4ef5`. Cannot be provided with `exclude`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "avatarSize",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "excludeConnectUsers",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "findUsers",
          "desc": "Find users",
          "input": [
            {
              "name": "query",
              "desc": "A query string that is matched against user attributes ( `displayName`, and `emailAddress`) to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` or `property` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "A query string that is matched exactly against a user `accountId`. Required, unless `query` or `property` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of filtered results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "property",
              "desc": "A query string used to search properties. Property keys are specified by path, so property keys containing dot (.) or equals (=) characters cannot be used. The query string cannot be specified using a JSON object. Example: To search for the value of `nested` from `{\"something\":{\"nested\":1,\"other\":2}}` use `thepropertykey.something.nested=1`. Required, unless `accountId` or `query` is specified.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "findUsersByQuery",
          "desc": "Find users by query",
          "input": [
            {
              "name": "query",
              "desc": "The search query.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "findUserKeysByQuery",
          "desc": "Find user keys by query",
          "input": [
            {
              "name": "query",
              "desc": "The search query.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "findUsersWithBrowsePermission",
          "desc": "Find users with browse permission",
          "input": [
            {
              "name": "query",
              "desc": "A query string that is matched against user attributes, such as `displayName` and `emailAddress`, to find relevant users. The string can match the prefix of the attribute's value. For example, *query=john* matches a user with a `displayName` of *John Smith* and a user with an `emailAddress` of *johnson@example.com*. Required, unless `accountId` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "accountId",
              "desc": "A query string that is matched exactly against user `accountId`. Required, unless `query` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "issueKey",
              "desc": "The issue key for the issue. Required, unless `projectKey` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectKey",
              "desc": "The project key for the project (case sensitive). Required, unless `issueKey` is specified.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "User properties",
      "desc": "This resource represents [user](#api-group-Users) properties and provides for storing custom data against a user. Use it to get, create, and delete user properties as well as get a list of property keys for a user. This resourse is designed for integrations and apps to store per-user data and settings. This enables data used to customized the user experience to be kept in the Jira Cloud instance's database. User properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).\n\nThis resource does not access the [user properties](https://confluence.atlassian.com/x/8YxjL) created and maintained in Jira.",
      "query": [
        {
          "name": "getUserPropertyKeys",
          "desc": "Get user property keys",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "userKey",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getUserProperty",
          "desc": "Get user property",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "userKey",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the user's property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "setUserProperty",
          "desc": "Set user property",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "userKey",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the user's property. The maximum length is 255 characters.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the user property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned if the user property is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteUserProperty",
          "desc": "Delete user property",
          "input": [
            {
              "name": "accountId",
              "desc": "The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "userKey",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "username",
              "desc": "This parameter is no longer available and will be removed from the documentation soon. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the user's property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Webhooks",
      "desc": "This resource represents webhooks. Webhooks are calls sent to a URL when an event occurs in Jira for issues specified by a JQL query. Only Connect and OAuth 2.0 apps can register and manage webhooks. For more information, see [Webhooks](https://developer.atlassian.com/cloud/jira/platform/webhooks/#registering-a-webhook-via-the-jira-rest-api-for-connect-apps).",
      "query": [
        {
          "name": "getDynamicWebhooksForApp",
          "desc": "Get dynamic webhooks for app",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the caller isn't an app.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getFailedWebhooks",
          "desc": "Get failed webhooks",
          "input": [
            {
              "name": "maxResults",
              "desc": "The maximum number of webhooks to return per page. If obeying the maxResults directive would result in records with the same failure time being split across pages, the directive is ignored and all records with the same failure time included on the page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "after",
              "desc": "The time after which any webhook failure must have occurred for the record to be returned, expressed as milliseconds since the UNIX epoch.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "400 response",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the caller is not a Connect app.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "registerDynamicWebhooks",
          "desc": "Register dynamic webhooks",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the caller isn't an app.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWebhookById",
          "desc": "Delete webhooks by ID",
          "input": [],
          "output": [
            {
              "name": "400",
              "desc": "Returned if the list of webhook IDs is missing.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the caller isn't an app.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "refreshWebhooks",
          "desc": "Extend webhook life",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the caller isn't an app.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Workflows",
      "desc": "This resource represents workflows. Use it to:\n\n *  Get workflows\n *  Create workflows\n *  Update workflows\n *  Delete inactive workflows\n *  Get workflow capabilities",
      "query": [
        {
          "name": "getAllWorkflows",
          "desc": "Get all workflows",
          "input": [
            {
              "name": "workflowName",
              "desc": "The name of the workflow to be returned. Only one workflow can be specified.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "getWorkflowsPaginated",
          "desc": "Get workflows paginated",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "workflowName",
              "desc": "The name of a workflow to return. To include multiple workflows, provide an ampersand-separated list. For example, `workflowName=name1&workflowName=name2`.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `transitions` For each workflow, returns information about the transitions inside the workflow.\n *  `transitions.rules` For each workflow transition, returns information about its rules. Transitions are included automatically if this expand is requested.\n *  `transitions.properties` For each workflow transition, returns information about its properties. Transitions are included automatically if this expand is requested.\n *  `statuses` For each workflow, returns information about the statuses inside the workflow.\n *  `statuses.properties` For each workflow status, returns information about its properties. Statuses are included automatically if this expand is requested.\n *  `default` For each workflow, returns information about whether this is the default workflow.\n *  `schemes` For each workflow, returns information about the workflow schemes the workflow is assigned to.\n *  `projects` For each workflow, returns information about the projects the workflow is assigned to, through workflow schemes.\n *  `hasDraftWorkflow` For each workflow, returns information about whether the workflow has a draft version.\n *  `operations` For each workflow, returns information about the actions that can be undertaken on the workflow.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "queryString",
              "desc": "String used to perform a case-insensitive partial match with workflow name.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "orderBy",
              "desc": "[Order](#ordering) the results by a field:\n\n *  `name` Sorts by workflow name.\n *  `created` Sorts by create time.\n *  `updated` Sorts by update time.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "isActive",
              "desc": "Filters active and inactive workflows.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the user does not have the necessary permission.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "workflowCapabilities",
          "desc": "Get available workflow capabilities",
          "input": [
            {
              "name": "workflowId",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "projectId",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "issueTypeId",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createWorkflow",
          "desc": "Create workflow",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the workflow is created.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteInactiveWorkflow",
          "desc": "Delete inactive workflow",
          "input": [
            {
              "name": "entityId",
              "desc": "The entity ID of the workflow.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "readWorkflows",
          "desc": "Bulk get workflows",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `workflows.usages` Returns the project and issue types that each workflow is associated with.\n *  `statuses.usages` Returns the project and issue types that each status is associated with.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "createWorkflows",
          "desc": "Bulk create workflows",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "validateCreateWorkflows",
          "desc": "Validate create workflows",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateWorkflows",
          "desc": "Bulk update workflows",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `workflows.usages` Returns the project and issue types that each workflow is associated with.\n *  `statuses.usages` Returns the project and issue types that each status is associated with.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "validateUpdateWorkflows",
          "desc": "Validate update workflows",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Workflow transition rules",
      "desc": "This resource represents workflow transition rules. Workflow transition rules define a Connect or a Forge app routine, such as a [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/) that is executed in association with the workflow. Use it to read and modify configuration of workflow transition rules.",
      "query": [
        {
          "name": "getWorkflowTransitionRuleConfigurations",
          "desc": "Get workflow transition rule configurations",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "types",
              "desc": "The types of the transition rules to return.",
              "type": "required",
              "data_type": "array"
            },
            {
              "name": "keys",
              "desc": "The transition rule class keys, as defined in the Connect or the Forge app descriptor, of the transition rules to return.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "workflowNames",
              "desc": "The list of workflow names to filter by.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "withTags",
              "desc": "The list of `tags` to filter by.",
              "type": "optional",
              "data_type": "array"
            },
            {
              "name": "draft",
              "desc": "Whether draft or published workflows are returned. If not provided, both workflow types are returned.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts `transition`, which, for each rule, returns information about the transition the rule is assigned to.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the caller is not a Connect or Forge app.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "updateWorkflowTransitionRuleConfigurations",
          "desc": "Update workflow transition rule configurations",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the caller is not a Connect or Forge app.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorkflowTransitionRuleConfigurations",
          "desc": "Delete workflow transition rule configurations",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the request is invalid.",
              "data_type": "unknown"
            },
            {
              "name": "403",
              "desc": "Returned if the caller is not a Connect app.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Workflow transition properties",
      "desc": "This resource represents workflow transition properties, which provides for storing custom data against a workflow transition. Use it to get, create, and delete workflow transition properties as well as get a list of property keys for a workflow transition. Workflow transition properties are a type of [entity property](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/).",
      "query": [
        {
          "name": "getWorkflowTransitionProperties",
          "desc": "Get workflow transition properties",
          "input": [
            {
              "name": "transitionId",
              "desc": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira administration console. The ID is shown next to the transition.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "includeReservedKeys",
              "desc": "Some properties with keys that have the *jira.* prefix are reserved, which means they are not editable. To include these properties in the results, set this parameter to *true*.",
              "type": "optional",
              "data_type": "boolean"
            },
            {
              "name": "key",
              "desc": "The key of the property being returned, also known as the name of the property. If this parameter is not specified, all properties on the transition are returned.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "workflowName",
              "desc": "The name of the workflow that the transition belongs to.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "workflowMode",
              "desc": "The workflow status. Set to *live* for active and inactive workflows, or *draft* for draft workflows.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "200 response",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "updateWorkflowTransitionProperty",
          "desc": "Update workflow transition property",
          "input": [
            {
              "name": "transitionId",
              "desc": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "key",
              "desc": "The key of the property being updated, also known as the name of the property. Set this to the same value as the `key` defined in the request body.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "workflowName",
              "desc": "The name of the workflow that the transition belongs to.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "workflowMode",
              "desc": "The workflow status. Set to `live` for inactive workflows or `draft` for draft workflows. Active workflows cannot be edited.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "200 response",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "createWorkflowTransitionProperty",
          "desc": "Create workflow transition property",
          "input": [
            {
              "name": "transitionId",
              "desc": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "key",
              "desc": "The key of the property being added, also known as the name of the property. Set this to the same value as the `key` defined in the request body.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "workflowName",
              "desc": "The name of the workflow that the transition belongs to.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "workflowMode",
              "desc": "The workflow status. Set to *live* for inactive workflows or *draft* for draft workflows. Active workflows cannot be edited.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "200 response",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorkflowTransitionProperty",
          "desc": "Delete workflow transition property",
          "input": [
            {
              "name": "transitionId",
              "desc": "The ID of the transition. To get the ID, view the workflow in text mode in the Jira admin settings. The ID is shown next to the transition.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "key",
              "desc": "The name of the transition property to delete, also known as the name of the property.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "workflowName",
              "desc": "The name of the workflow that the transition belongs to.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "workflowMode",
              "desc": "The workflow status. Set to `live` for inactive workflows or `draft` for draft workflows. Active workflows cannot be edited.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Workflow schemes",
      "desc": "This resource represents workflow schemes. Use it to manage workflow schemes and the workflow scheme's workflows and issue types.\n\nA workflow scheme maps issue types to workflows. A workflow scheme can be associated with one or more projects, which enables the projects to use the workflow-issue type mappings.\n\nActive workflow schemes (workflow schemes that are used by projects) cannot be edited. When an active workflow scheme is edited, a draft copy of the scheme is created. The draft workflow scheme is then be edited and published (replacing the active scheme).\n\nSee [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.",
      "query": [
        {
          "name": "getAllWorkflowSchemes",
          "desc": "Get all workflow schemes",
          "input": [
            {
              "name": "startAt",
              "desc": "The index of the first item to return in a page of results (page offset).",
              "type": "optional",
              "data_type": "integer"
            },
            {
              "name": "maxResults",
              "desc": "The maximum number of items to return per page.",
              "type": "optional",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getWorkflowScheme",
          "desc": "Get workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "returnDraftIfExists",
              "desc": "Returns the workflow scheme's draft rather than scheme itself, if set to true. If the workflow scheme does not have a draft, then the workflow scheme is returned.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getDefaultWorkflow",
          "desc": "Get default workflow",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "returnDraftIfExists",
              "desc": "Set to `true` to return the default workflow for the workflow scheme's draft rather than scheme itself. If the workflow scheme does not have a draft, then the default workflow for the workflow scheme is returned.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getWorkflowSchemeIssueType",
          "desc": "Get workflow for issue type in workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "issueType",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "returnDraftIfExists",
              "desc": "Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getWorkflow",
          "desc": "Get issue types for workflows in workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "workflowName",
              "desc": "The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.",
              "type": "optional",
              "data_type": "string"
            },
            {
              "name": "returnDraftIfExists",
              "desc": "Returns the mapping from the workflow scheme's draft rather than the workflow scheme, if set to true. If no draft exists, the mapping from the workflow scheme is returned.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createWorkflowScheme",
          "desc": "Create workflow scheme",
          "input": [],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "readWorkflowSchemes",
          "desc": "Bulk get workflow schemes",
          "input": [
            {
              "name": "expand",
              "desc": "Use [expand](#expansion) to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:\n\n *  `workflows.usages` Returns the project and issue types that each workflow in the workflow scheme is associated with.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "array"
            }
          ]
        },
        {
          "name": "updateSchemes",
          "desc": "Update workflow scheme",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful and there is no asynchronous task.",
              "data_type": "unknown"
            },
            {
              "name": "303",
              "desc": "Returned if the request is successful and there is an asynchronous task for the migrations.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateWorkflowSchemeMappings",
          "desc": "Get required status mappings for workflow scheme update",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateWorkflowScheme",
          "desc": "Classic update workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorkflowScheme",
          "desc": "Delete workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme. Find this ID by editing the desired workflow scheme in Jira. The ID is shown in the URL as `schemeId`. For example, *schemeId=10301*.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateDefaultWorkflow",
          "desc": "Update default workflow",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteDefaultWorkflow",
          "desc": "Delete default workflow",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "updateDraftIfNeeded",
              "desc": "Set to true to create or update the draft of a workflow scheme and delete the mapping from the draft, when the workflow scheme cannot be edited. Defaults to `false`.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setWorkflowSchemeIssueType",
          "desc": "Set workflow for issue type in workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "issueType",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorkflowSchemeIssueType",
          "desc": "Delete workflow for issue type in workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "issueType",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "updateDraftIfNeeded",
              "desc": "Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to `false`.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateWorkflowMapping",
          "desc": "Set issue types for workflow in workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "workflowName",
              "desc": "The name of the workflow.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorkflowMapping",
          "desc": "Delete issue types for workflow in workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "workflowName",
              "desc": "The name of the workflow.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "updateDraftIfNeeded",
              "desc": "Set to true to create or update the draft of a workflow scheme and delete the mapping from the draft, when the workflow scheme cannot be edited. Defaults to `false`.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "Workflow scheme project associations",
      "desc": "This resource represents the associations between workflow schemes and projects.\n\nFor more information, see [Managing your workflows](https://confluence.atlassian.com/x/q4hKLg).",
      "query": [
        {
          "name": "getWorkflowSchemeProjectAssociations",
          "desc": "Get workflow scheme project associations",
          "input": [
            {
              "name": "projectId",
              "desc": "The ID of a project to return the workflow schemes for. To include multiple projects, provide an ampersand-Jim: oneseparated list. For example, `projectId=10000&projectId=10001`.",
              "type": "required",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "assignSchemeToProject",
          "desc": "Assign workflow scheme to project",
          "input": [],
          "output": [
            {
              "name": "204",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Workflow scheme drafts",
      "desc": "This resource represents draft workflow schemes. Use it to manage drafts of workflow schemes.\n\nA workflow scheme maps issue types to workflows. A workflow scheme can be associated with one or more projects, which enables the projects to use the workflow-issue type mappings.\n\nActive workflow schemes (workflow schemes that are used by projects) cannot be edited. Editing an active workflow scheme creates a draft copy of the scheme. The draft workflow scheme can then be edited and published (replacing the active scheme).\n\nSee [Configuring workflow schemes](https://confluence.atlassian.com/x/tohKLg) for more information.",
      "query": [
        {
          "name": "getWorkflowSchemeDraft",
          "desc": "Get draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the active workflow scheme that the draft was created from.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getDraftDefaultWorkflow",
          "desc": "Get draft default workflow",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getWorkflowSchemeDraftIssueType",
          "desc": "Get workflow for issue type in draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "issueType",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "getDraftWorkflow",
          "desc": "Get issue types for workflows in draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "workflowName",
              "desc": "The name of a workflow in the scheme. Limits the results to the workflow-issue type mapping for the specified workflow.",
              "type": "optional",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "createWorkflowSchemeDraftFromParent",
          "desc": "Create draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the active workflow scheme that the draft is created from.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "201",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateWorkflowSchemeDraft",
          "desc": "Update draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the active workflow scheme that the draft was created from.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorkflowSchemeDraft",
          "desc": "Delete draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the active workflow scheme that the draft was created from.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": []
        },
        {
          "name": "updateDraftDefaultWorkflow",
          "desc": "Update draft default workflow",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteDraftDefaultWorkflow",
          "desc": "Delete draft default workflow",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "setWorkflowSchemeDraftIssueType",
          "desc": "Set workflow for issue type in draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "issueType",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteWorkflowSchemeDraftIssueType",
          "desc": "Delete workflow for issue type in draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "issueType",
              "desc": "The ID of the issue type.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "publishDraftWorkflowScheme",
          "desc": "Publish draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "validateOnly",
              "desc": "Whether the request only performs a validation.",
              "type": "optional",
              "data_type": "boolean"
            }
          ],
          "output": [
            {
              "name": "303",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "updateDraftWorkflowMapping",
          "desc": "Set issue types for workflow in workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "workflowName",
              "desc": "The name of the workflow.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "deleteDraftWorkflowMapping",
          "desc": "Delete issue types for workflow in draft workflow scheme",
          "input": [
            {
              "name": "id",
              "desc": "The ID of the workflow scheme that the draft belongs to.",
              "type": "required",
              "data_type": "integer"
            },
            {
              "name": "workflowName",
              "desc": "The name of the workflow.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        }
      ],
      "monitor": []
    },
    {
      "name": "App properties",
      "desc": "This resource represents app properties. Use it to store arbitrary data for your\n[Connect app](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps).",
      "query": [
        {
          "name": "AddonPropertiesResource.getAddonProperties_get",
          "desc": "Get app properties",
          "input": [
            {
              "name": "addonKey",
              "desc": "The key of the app, as defined in its descriptor.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "AddonPropertiesResource.getAddonProperty_get",
          "desc": "Get app property",
          "input": [
            {
              "name": "addonKey",
              "desc": "The key of the app, as defined in its descriptor.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if the property key is longer than 127 characters.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the property is not found or doesn't belong to the app.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "AddonPropertiesResource.putAddonProperty_put",
          "desc": "Set app property",
          "input": [
            {
              "name": "addonKey",
              "desc": "The key of the app, as defined in its descriptor.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned is the property is created.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if:\n  * the property key is longer than 127 characters.\n  * the value is not valid JSON.\n  * the value is longer than 32768 characters.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "AddonPropertiesResource.deleteAddonProperty_delete",
          "desc": "Delete app property",
          "input": [
            {
              "name": "addonKey",
              "desc": "The key of the app, as defined in its descriptor.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "400",
              "desc": "Returned if the property key is longer than 127 characters.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the authentication credentials are incorrect or missing.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the property is not found or doesn't belong to the app.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "AddonPropertiesResource.putAppProperty_put",
          "desc": "Set app property (Forge)",
          "input": [
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the property is updated.",
              "data_type": "unknown"
            },
            {
              "name": "201",
              "desc": "Returned is the property is created.",
              "data_type": "unknown"
            },
            {
              "name": "400",
              "desc": "Returned if:\n  * the property key is longer than 127 characters.\n  * the value isn't valid JSON.\n  * the value is longer than 32768 characters.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "AddonPropertiesResource.deleteAppProperty_delete",
          "desc": "Delete app property (Forge)",
          "input": [
            {
              "name": "propertyKey",
              "desc": "The key of the property.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "400",
              "desc": "Returned if the property key is longer than 127 characters.",
              "data_type": "unknown"
            },
            {
              "name": "404",
              "desc": "Returned if the property isn't found or doesn't belong to the app.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "Dynamic modules",
      "desc": "This resource represents [modules registered dynamically](https://developer.atlassian.com/cloud/jira/platform/dynamic-modules/)\nby [Connect apps](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps).",
      "query": [
        {
          "name": "DynamicModulesResource.getModules_get",
          "desc": "Get modules",
          "input": [],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the call is not from a Connect app.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "action": [
        {
          "name": "DynamicModulesResource.registerModules_post",
          "desc": "Register modules",
          "input": [],
          "output": [
            {
              "name": "400",
              "desc": "Returned if:\n* any of the provided modules is invalid. For example, required properties are missing.\n* any of the modules conflict with registered dynamic modules or modules defined in the app descriptor. For example, there are duplicate keys.\n\nDetails of the issues encountered are included in the error message.",
              "data_type": "unknown"
            },
            {
              "name": "401",
              "desc": "Returned if the call is not from a Connect app.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "DynamicModulesResource.removeModules_delete",
          "desc": "Remove modules",
          "input": [
            {
              "name": "moduleKey",
              "desc": "The key of the module to remove. To include multiple module keys, provide multiple copies of this parameter.\nFor example, `moduleKey=dynamic-attachment-entity-property&moduleKey=dynamic-select-field`.\nNonexistent keys are ignored.",
              "type": "optional",
              "data_type": "array"
            }
          ],
          "output": [
            {
              "name": "401",
              "desc": "Returned if the call is not from a Connect app.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "App migration",
      "desc": "This resource supports [app migrations](https://developer.atlassian.com/platform/app-migration/). Use it to:\n- [to request migrated workflow rules details](https://developer.atlassian.com/platform/app-migration/tutorials/migration-app-workflow-rules/).\n- [perform bulk updates of entity properties](https://developer.atlassian.com/platform/app-migration/tutorials/entity-properties-bulk-api/).\n- [perform bulk updates of issue custom field values](https://developer.atlassian.com/platform/app-migration/tutorials/migrating-app-custom-fields/).",
      "query": [],
      "action": [
        {
          "name": "AppIssueFieldValueUpdateResource.updateIssueFields_put",
          "desc": "Bulk update custom field value",
          "input": [
            {
              "name": "Atlassian-Transfer-Id",
              "desc": "The ID of the transfer.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        },
        {
          "name": "MigrationResource.updateEntityPropertiesValue_put",
          "desc": "Bulk update entity properties",
          "input": [
            {
              "name": "Atlassian-Transfer-Id",
              "desc": "The app migration transfer ID.",
              "type": "required",
              "data_type": "string"
            },
            {
              "name": "entityType",
              "desc": "The type indicating the object that contains the entity properties.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": []
        },
        {
          "name": "MigrationResource.workflowRuleSearch_post",
          "desc": "Get workflow transition rule configurations",
          "input": [
            {
              "name": "Atlassian-Transfer-Id",
              "desc": "The app migration transfer ID.",
              "type": "required",
              "data_type": "string"
            }
          ],
          "output": [
            {
              "name": "200",
              "desc": "Returned if the request is successful.",
              "data_type": "unknown"
            }
          ]
        }
      ],
      "monitor": []
    }
  ]
}
