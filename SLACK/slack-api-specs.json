{
  "name": "Slack",
  "desc": "Slack is a cloud-based freemium cross-platform instant messaging service created by Slack Technologies and currently owned by Salesforce.",
  "services": [
    {
      "name": "api",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "api.test",
          "desc": "Checks API calling code.",
          "input": [
            {
              "name": "error",
              "type": "string",
              "description": "Error response to return",
              "required": false,
              "example": "my_error"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": true,\n    \"args\": {\n        \"foo\": \"bar\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"my_error\",\n    \"args\": {\n        \"error\": \"my_error\"\n    }\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "auth",
      "desc": "",
      "query": [
        {
          "name": "auth.teams.list",
          "desc": "Obtain a full list of workspaces your org-wide app has been approved for.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Set cursor to next_cursor returned by the previous call to list items in the next page.",
              "required": false,
              "example": "5c3e53d5"
            },
            {
              "name": "include_icon",
              "type": "boolean",
              "description": "Whether to return icon paths for each workspace. An icon path represents a URI pointing to the image signifying the workspace.",
              "required": false,
              "example": "falsefalse"
            },
            {
              "name": "limit",
              "type": "integer",
              "description": "The maximum number of workspaces to return. Must be a positive integer no larger than 1000.",
              "required": false,
              "example": "10050"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"teams\": [\n        {\n            \"name\": \"Shinichi's workspace\",\n            \"id\": \"T12345678\"\n        },\n        {\n            \"name\": \"Migi's workspace\",\n            \"id\": \"T12345679\"\n        }\n    ],\n    \"response_metadata\": {\n        \"next_cursor\": \"dXNlcl9pZDo5MTQyOTI5Mzkz\"\n    }\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "auth",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "auth.test",
          "desc": "Checks authentication & identity.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"url\": \"https://subarachnoid.slack.com/\",\n    \"team\": \"Subarachnoid Workspace\",\n    \"user\": \"grace\",\n    \"team_id\": \"T12345678\",\n    \"user_id\": \"W12345678\"\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}{\n    \"ok\": true,\n    \"url\": \"https://subarachnoid.slack.com/\",\n    \"team\": \"Subarachnoid Workspace\",\n    \"user\": \"bot\",\n    \"team_id\": \"T0G9PQBBK\",\n    \"user_id\": \"W23456789\",\n    \"bot_id\": \"BZYBOTHED\"\n}{\n    \"ok\": false,\n    \"error\": \"not_authed\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "bookmarks",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "bookmarks.add",
          "desc": "Add bookmark to a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel_id",
              "type": "string",
              "description": "Channel to add bookmark in.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "title",
              "type": "string",
              "description": "Title for the bookmark.",
              "required": true,
              "example": ""
            },
            {
              "name": "type",
              "type": "string",
              "description": "Type of the bookmark i.e link.",
              "required": true,
              "example": ""
            },
            {
              "name": "emoji",
              "type": "string",
              "description": "Emoji tag to apply to the link.",
              "required": false,
              "example": ""
            },
            {
              "name": "entity_id",
              "type": "string",
              "description": "ID of the entity being bookmarked. Only applies to message and file types.",
              "required": false,
              "example": ""
            },
            {
              "name": "link",
              "type": "string",
              "description": "Link to bookmark.",
              "required": false,
              "example": ""
            },
            {
              "name": "parent_id",
              "type": "string",
              "description": "Id of this bookmark's parent",
              "required": false,
              "example": ""
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"bookmark\": {\n        \"id\": \"Bk033XFJ9BTJ\",\n        \"channel_id\": \"C1RQ000\",\n        \"title\": \"bookmark-1\",\n        \"link\": \"https://google.com\",\n        \"emoji\": \":clap:\",\n        \"icon_url\": \"https://www.google.com/favicon.ico\",\n        \"type\": \"link\",\n        \"entity_id\": null,\n        \"date_created\": 1644956055,\n        \"date_updated\": 0,\n        \"rank\": \"g\",\n        \"last_updated_by_user_id\": \"U0334B6G6G5\",\n        \"last_updated_by_team_id\": \"T018DF03GHY\",\n        \"shortcut_id\": null,\n        \"app_id\": null\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "bookmarks",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "bookmarks.edit",
          "desc": "Edit bookmark.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "bookmark_id",
              "type": "string",
              "description": "Bookmark to update.",
              "required": true,
              "example": ""
            },
            {
              "name": "channel_id",
              "type": "string",
              "description": "Channel to update bookmark in.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "emoji",
              "type": "string",
              "description": "Emoji tag to apply to the link.",
              "required": false,
              "example": ""
            },
            {
              "name": "link",
              "type": "string",
              "description": "Link to bookmark.",
              "required": false,
              "example": ""
            },
            {
              "name": "title",
              "type": "string",
              "description": "Title for the bookmark.",
              "required": false,
              "example": ""
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"bookmark\": {\n        \"id\": \"Bk033XFJ9BTJ\",\n        \"channel_id\": \"C1RQ000\",\n        \"title\": \"bookmark-1\",\n        \"link\": \"https://google.com\",\n        \"emoji\": \":clap:\",\n        \"icon_url\": \"https://www.google.com/favicon.ico\",\n        \"type\": \"link\",\n        \"entity_id\": null,\n        \"date_created\": 1644956055,\n        \"date_updated\": 0,\n        \"rank\": \"g\",\n        \"last_updated_by_user_id\": \"U0334B6G6G5\",\n        \"last_updated_by_team_id\": \"T018DF03GHY\",\n        \"shortcut_id\": null,\n        \"app_id\": null\n    }\n}{\n    \"ok\": false,\n    \"error\": \"not_authed\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "bookmarks",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "bookmarks.list",
          "desc": "List bookmark for the channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel_id",
              "type": "string",
              "description": "Channel to list bookmarks in.",
              "required": true,
              "example": "C1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"bookmark\": {\n        \"id\": \"Bk033XFJ9BTJ\",\n        \"channel_id\": \"C1RQ000\",\n        \"title\": \"bookmark-1\",\n        \"link\": \"https://google.com\",\n        \"emoji\": \":clap:\",\n        \"icon_url\": \"https://www.google.com/favicon.ico\",\n        \"type\": \"link\",\n        \"entity_id\": null,\n        \"date_created\": 1644956055,\n        \"date_updated\": 0,\n        \"rank\": \"g\",\n        \"last_updated_by_user_id\": \"U0334B6G6G5\",\n        \"last_updated_by_team_id\": \"T018DF03GHY\",\n        \"shortcut_id\": null,\n        \"app_id\": null\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "bookmarks",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "bookmarks.remove",
          "desc": "Remove bookmark from the channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "bookmark_id",
              "type": "string",
              "description": "Bookmark to remove.",
              "required": true,
              "example": ""
            },
            {
              "name": "channel_id",
              "type": "string",
              "description": "Channel to remove bookmark.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "quip_section_id",
              "type": "string",
              "description": "Quip section ID to unbookmark",
              "required": false,
              "example": ""
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"not_found\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "bots",
      "desc": "",
      "query": [
        {
          "name": "bots.info",
          "desc": "Gets information about a bot user.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "bot",
              "type": "string",
              "description": "Bot user to get info on",
              "required": false,
              "example": "B12345678"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id or enterprise id where the bot exists, required if org token is used",
              "required": false,
              "example": "T1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"bot\": {\n        \"id\": \"B123456\",\n        \"deleted\": false,\n        \"name\": \"beforebot\",\n        \"updated\": 1449272004,\n        \"app_id\": \"A123456\",\n        \"user_id\": \"U123456\",\n        \"icons\": {\n            \"image_36\": \"https://...\",\n            \"image_48\": \"https://...\",\n            \"image_72\": \"https://...\"\n        }\n    }\n}{\n    \"ok\": false,\n    \"error\": \"bot_not_found\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "calls",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "calls.add",
          "desc": "Registers a new Call.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "external_unique_id",
              "type": "string",
              "description": "An ID supplied by the 3rd-party Call provider. It must be unique across all Calls from that service.",
              "required": true,
              "example": "025169F6-E37A-4E62-BB54-7F93A0FC4C1F"
            },
            {
              "name": "join_url",
              "type": "string",
              "description": "The URL required for a client to join the Call.",
              "required": true,
              "example": "https://example.com/calls/1234567890"
            },
            {
              "name": "created_by",
              "type": "string",
              "description": "The valid Slack user ID of the user who created this Call. When this method is called with a user token, the created_by field is optional and defaults to the authed user of the token. Otherwise, the field is required.",
              "required": false,
              "example": "U1H77"
            },
            {
              "name": "date_start",
              "type": "integer",
              "description": "Unix timestamp of the call start time",
              "required": false,
              "example": "1562002086"
            },
            {
              "name": "desktop_app_join_url",
              "type": "string",
              "description": "When supplied, available Slack clients will attempt to directly launch the 3rd-party Call with this URL.",
              "required": false,
              "example": "callapp://join/1234567890"
            },
            {
              "name": "external_display_id",
              "type": "string",
              "description": "An optional, human-readable ID supplied by the 3rd-party Call provider. If supplied, this ID will be displayed in the Call object.",
              "required": false,
              "example": "705-292-868"
            },
            {
              "name": "title",
              "type": "string",
              "description": "The name of the Call.",
              "required": false,
              "example": "Kimpossible sync up"
            },
            {
              "name": "users",
              "type": "array",
              "description": "The list of users to register as participants in the Call. Read more on how to specify users here.",
              "required": false,
              "example": "[{\"slack_id\": \"U1H77\"}, {\"external_id\": \"54321678\", \"display_name\": \"External User\", \"avatar_url\": \"https://example.com/users/avatar1234.jpg\"}]"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "calls",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "calls.end",
          "desc": "Ends a Call.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "id",
              "type": "string",
              "description": "id returned when registering the call using the calls.add method.",
              "required": true,
              "example": "R0E69JAIF"
            },
            {
              "name": "duration",
              "type": "integer",
              "description": "Call duration in seconds",
              "required": false,
              "example": "1800"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "calls",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "calls.info",
          "desc": "Returns information about a Call.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "id",
              "type": "string",
              "description": "id of the Call returned by the calls.add method.",
              "required": true,
              "example": "R0E69JAIF"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "chat.deleteScheduledMessage",
          "desc": "Deletes a pending scheduled message from the queue.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "The channel the scheduled_message is posting to",
              "required": true,
              "example": "C123456789"
            },
            {
              "name": "scheduled_message_id",
              "type": "string",
              "description": "scheduled_message_id returned from call to chat.scheduleMessage",
              "required": true,
              "example": "Q1234ABCD"
            },
            {
              "name": "as_user",
              "type": "boolean",
              "description": "Pass true to delete the message as the authed user with chat:write:user scope. Bot users in this context are considered authed users. If unused or false, the message will be deleted with chat:write:bot scope.",
              "required": false,
              "example": "true"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_scheduled_message_id\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [
        {
          "name": "chat.getPermalink",
          "desc": "Retrieve a permalink URL for a specific extant message",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "The ID of the conversation or channel containing the message",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "message_ts",
              "type": "string",
              "description": "A message's ts value, uniquely identifying it within a channel",
              "required": true,
              "example": "1234567890.123456"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": \"C123ABC456\",\n    \"permalink\": \"https://ghostbusters.slack.com/archives/C1H9RESGA/p135854651500008\"\n}{\n    \"ok\": true,\n    \"channel\": \"C123ABC456\",\n    \"permalink\": \"https://ghostbusters.slack.com/archives/C1H9RESGL/p135854651700023?thread_ts=1358546515.000008&cid=C1H9RESGL\"\n}{\n    \"ok\": false,\n    \"error\": \"channel_not_found\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "chat.meMessage",
          "desc": "Share a me message into a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "text",
              "type": "string",
              "description": "Text of the message to send.",
              "required": true,
              "example": "Hello world"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": \"C123ABC456\",\n    \"ts\": \"1417671948.000006\"\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "chat.postEphemeral",
          "desc": "Sends an ephemeral message to a user in a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "user",
              "type": "",
              "description": "id of the user who will receive the ephemeral message. The user should be in the channel specified by the channel argument.",
              "required": true,
              "example": "U0BPQUNTA"
            },
            {
              "name": "attachments",
              "type": "string",
              "description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
              "required": true,
              "example": "[{\"pretext\": \"pre-hello\", \"text\": \"text-world\"}]"
            },
            {
              "name": "blocks",
              "type": "blocks[] as string",
              "description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
              "required": true,
              "example": "[{\"type\": \"section\", \"text\": {\"type\": \"plain_text\", \"text\": \"Hello world\"}}]"
            },
            {
              "name": "text",
              "type": "string",
              "description": "How this field works and whether it is required depends on other fields you use in your API call. See below for more detail.",
              "required": true,
              "example": "Hello world"
            },
            {
              "name": "as_user",
              "type": "boolean",
              "description": "(Legacy) Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false.",
              "required": false,
              "example": "true"
            },
            {
              "name": "icon_emoji",
              "type": "string",
              "description": "Emoji to use as the icon for this message. Overrides icon_url.",
              "required": false,
              "example": ":chart_with_upwards_trend:"
            },
            {
              "name": "icon_url",
              "type": "string",
              "description": "URL to an image to use as the icon for this message.",
              "required": false,
              "example": "http://lorempixel.com/48/48"
            },
            {
              "name": "link_names",
              "type": "boolean",
              "description": "Find and link channel names and usernames.",
              "required": false,
              "example": "true"
            },
            {
              "name": "parse",
              "type": "string",
              "description": "Change how messages are treated. Defaults to none. See below.",
              "required": false,
              "example": "full"
            },
            {
              "name": "thread_ts",
              "type": "string",
              "description": "Provide another message's ts value to post this message in a thread. Avoid using a reply's ts value; use its parent's value instead. Ephemeral messages in threads are only shown if there is already an active thread.",
              "required": false,
              "example": "1234567890.123456"
            },
            {
              "name": "username",
              "type": "string",
              "description": "Set your bot's user name.",
              "required": false,
              "example": "My Bot"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"message_ts\": \"1502210682.580145\"\n}{\n    \"ok\": false,\n    \"error\": \"user_not_in_channel\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "chat.postMessage",
          "desc": "Sends a message to a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name. See below for more details.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "attachments",
              "type": "string",
              "description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
              "required": true,
              "example": "[{\"pretext\": \"pre-hello\", \"text\": \"text-world\"}]"
            },
            {
              "name": "blocks",
              "type": "blocks[] as string",
              "description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
              "required": true,
              "example": "[{\"type\": \"section\", \"text\": {\"type\": \"plain_text\", \"text\": \"Hello world\"}}]"
            },
            {
              "name": "text",
              "type": "string",
              "description": "How this field works and whether it is required depends on other fields you use in your API call. See below for more detail.",
              "required": true,
              "example": "Hello world"
            },
            {
              "name": "as_user",
              "type": "boolean",
              "description": "(Legacy) Pass true to post the message as the authed user instead of as a bot. Defaults to false. Can only be used by classic Slack apps. See authorship below.",
              "required": false,
              "example": "true"
            },
            {
              "name": "icon_emoji",
              "type": "string",
              "description": "Emoji to use as the icon for this message. Overrides icon_url.",
              "required": false,
              "example": ":chart_with_upwards_trend:"
            },
            {
              "name": "icon_url",
              "type": "string",
              "description": "URL to an image to use as the icon for this message.",
              "required": false,
              "example": "http://lorempixel.com/48/48"
            },
            {
              "name": "link_names",
              "type": "boolean",
              "description": "Find and link user groups. No longer supports linking individual users; use syntax shown in Mentioning Users instead.",
              "required": false,
              "example": "true"
            },
            {
              "name": "metadata",
              "type": "string",
              "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string. Metadata you post to Slack is accessible to any app or user who is a member of that workspace.",
              "required": false,
              "example": "{\"event_type\": \"task_created\", \"event_payload\": { \"id\": \"11223\", \"title\": \"Redesign Homepage\"}}"
            },
            {
              "name": "mrkdwn",
              "type": "boolean",
              "description": "Disable Slack markup parsing by setting to false. Enabled by default.",
              "required": false,
              "example": "truefalse"
            },
            {
              "name": "parse",
              "type": "string",
              "description": "Change how messages are treated. See below.",
              "required": false,
              "example": "full"
            },
            {
              "name": "reply_broadcast",
              "type": "boolean",
              "description": "Used in conjunction with thread_ts and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to false.",
              "required": false,
              "example": "true"
            },
            {
              "name": "service_team_id",
              "type": "string",
              "description": "For a message posted in App Home, Team ID corresponding to the selected app installation.",
              "required": false,
              "example": "T123A4B56"
            },
            {
              "name": "thread_ts",
              "type": "string",
              "description": "Provide another message's ts value to make this message a reply. Avoid using a reply's ts value; use its parent instead.",
              "required": false,
              "example": ""
            },
            {
              "name": "unfurl_links",
              "type": "boolean",
              "description": "Pass true to enable unfurling of primarily text-based content.",
              "required": false,
              "example": "true"
            },
            {
              "name": "unfurl_media",
              "type": "boolean",
              "description": "Pass false to disable unfurling of media content.",
              "required": false,
              "example": "false"
            },
            {
              "name": "username",
              "type": "string",
              "description": "Set your bot's user name.",
              "required": false,
              "example": "My Bot"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": \"C123ABC456\",\n    \"ts\": \"1503435956.000247\",\n    \"message\": {\n        \"text\": \"Here's a message for you\",\n        \"username\": \"ecto1\",\n        \"bot_id\": \"B123ABC456\",\n        \"attachments\": [\n            {\n                \"text\": \"This is an attachment\",\n                \"id\": 1,\n                \"fallback\": \"This is an attachment's fallback\"\n            }\n        ],\n        \"type\": \"message\",\n        \"subtype\": \"bot_message\",\n        \"ts\": \"1503435956.000247\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"too_many_attachments\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "chat.scheduleMessage",
          "desc": "Schedules a message to be sent to a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel, private group, or DM channel to send message to. Can be an encoded ID, or a name. See below for more details.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "post_at",
              "type": "integer",
              "description": "Unix EPOCH timestamp of time in future to send the message.",
              "required": true,
              "example": "299876400"
            },
            {
              "name": "attachments",
              "type": "string",
              "description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
              "required": true,
              "example": "[{\"pretext\": \"pre-hello\", \"text\": \"text-world\"}]"
            },
            {
              "name": "blocks",
              "type": "blocks[] as string",
              "description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
              "required": true,
              "example": "[{\"type\": \"section\", \"text\": {\"type\": \"plain_text\", \"text\": \"Hello world\"}}]"
            },
            {
              "name": "text",
              "type": "string",
              "description": "How this field works and whether it is required depends on other fields you use in your API call. See below for more detail.",
              "required": true,
              "example": "Hello world"
            },
            {
              "name": "as_user",
              "type": "boolean",
              "description": "Set to true to post the message as the authed user, instead of as a bot. Defaults to false. Cannot be used by new Slack apps. See chat.postMessage.",
              "required": false,
              "example": "true"
            },
            {
              "name": "link_names",
              "type": "boolean",
              "description": "Find and link user groups. No longer supports linking individual users; use syntax shown in Mentioning Users instead.",
              "required": false,
              "example": "true"
            },
            {
              "name": "metadata",
              "type": "string",
              "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string. Metadata you post to Slack is accessible to any app or user who is a member of that workspace.",
              "required": false,
              "example": "{\"event_type\": \"task_created\", \"event_payload\": { \"id\": \"11223\", \"title\": \"Redesign Homepage\"}}"
            },
            {
              "name": "parse",
              "type": "string",
              "description": "Change how messages are treated. See chat.postMessage.",
              "required": false,
              "example": "full"
            },
            {
              "name": "reply_broadcast",
              "type": "boolean",
              "description": "Used in conjunction with thread_ts and indicates whether reply should be made visible to everyone in the channel or conversation. Defaults to false.",
              "required": false,
              "example": "true"
            },
            {
              "name": "thread_ts",
              "type": "string",
              "description": "Provide another message's ts value to make this message a reply. Avoid using a reply's ts value; use its parent instead.",
              "required": false,
              "example": ""
            },
            {
              "name": "unfurl_links",
              "type": "boolean",
              "description": "Pass true to enable unfurling of primarily text-based content.",
              "required": false,
              "example": "true"
            },
            {
              "name": "unfurl_media",
              "type": "boolean",
              "description": "Pass false to disable unfurling of media content.",
              "required": false,
              "example": "false"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": \"C123ABC456\",\n    \"scheduled_message_id\": \"Q1298393284\",\n    \"post_at\": \"1562180400\",\n    \"message\": {\n        \"text\": \"Here's a message for you in the future\",\n        \"username\": \"ecto1\",\n        \"bot_id\": \"B123ABC456\",\n        \"attachments\": [\n            {\n                \"text\": \"This is an attachment\",\n                \"id\": 1,\n                \"fallback\": \"This is an attachment's fallback\"\n            }\n        ],\n        \"type\": \"delayed_message\",\n        \"subtype\": \"bot_message\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"time_in_past\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "chat.scheduledMessages.list",
          "desc": "Returns a list of scheduled messages.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "The channel of the scheduled messages",
              "required": false,
              "example": "C123456789"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "For pagination purposes, this is the cursor value returned from a previous call to chat.scheduledmessages.list indicating where you want to start this call from.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "latest",
              "type": "string",
              "description": "A Unix timestamp of the latest value in the time range",
              "required": false,
              "example": "1562137200"
            },
            {
              "name": "limit",
              "type": "integer",
              "description": "Maximum number of original entries to return.",
              "required": false,
              "example": "100"
            },
            {
              "name": "oldest",
              "type": "string",
              "description": "A Unix timestamp of the oldest value in the time range",
              "required": false,
              "example": "1562137200"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id to list channels in, required if org token is used",
              "required": false,
              "example": "T1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"scheduled_messages\": [\n        {\n            \"id\": 1298393284,\n            \"channel_id\": \"C1H9RESGL\",\n            \"post_at\": 1551991428,\n            \"date_created\": 1551891734,\n            \"text\": \"Here's a message for you in the future\"\n        }\n    ],\n    \"response_metadata\": {\n        \"next_cursor\": \"\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_channel\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "chat.update",
          "desc": "Updates a message.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel containing the message to be updated.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "ts",
              "type": "string",
              "description": "Timestamp of the message to be updated.",
              "required": true,
              "example": "\"1405894322.002768\""
            },
            {
              "name": "attachments",
              "type": "string",
              "description": "A JSON-based array of structured attachments, presented as a URL-encoded string.",
              "required": true,
              "example": "[{\"pretext\": \"pre-hello\", \"text\": \"text-world\"}]"
            },
            {
              "name": "blocks",
              "type": "blocks[] as string",
              "description": "A JSON-based array of structured blocks, presented as a URL-encoded string.",
              "required": true,
              "example": "[{\"type\": \"section\", \"text\": {\"type\": \"plain_text\", \"text\": \"Hello world\"}}]"
            },
            {
              "name": "text",
              "type": "string",
              "description": "How this field works and whether it is required depends on other fields you use in your API call. See below for more detail.",
              "required": true,
              "example": "Hello world"
            },
            {
              "name": "as_user",
              "type": "boolean",
              "description": "Pass true to update the message as the authed user. Bot users in this context are considered authed users.",
              "required": false,
              "example": "true"
            },
            {
              "name": "file_ids",
              "type": "array",
              "description": "Array of new file ids that will be sent with this message.",
              "required": false,
              "example": "F013GKY52QK,F013GL22D0T or [\"F013GKY52QK\",\"F013GL22D0T\"]"
            },
            {
              "name": "link_names",
              "type": "boolean",
              "description": "Find and link channel names and usernames. Defaults to none. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, none.",
              "required": false,
              "example": "true"
            },
            {
              "name": "metadata",
              "type": "string",
              "description": "JSON object with event_type and event_payload fields, presented as a URL-encoded string. If you don't include this field, the message's previous metadata will be retained. To remove previous metadata, include an empty object for this field. Metadata you post to Slack is accessible to any app or user who is a member of that workspace.",
              "required": false,
              "example": "{\"event_type\": \"task_created\", \"event_payload\": { \"id\": \"11223\", \"title\": \"Redesign Homepage\"}}"
            },
            {
              "name": "parse",
              "type": "string",
              "description": "Change how messages are treated. Defaults to client, unlike chat.postMessage. Accepts either none or full. If you do not specify a value for this field, the original value set for the message will be overwritten with the default, client.",
              "required": false,
              "example": "none"
            },
            {
              "name": "reply_broadcast",
              "type": "boolean",
              "description": "Broadcast an existing thread reply to make it visible to everyone in the channel or conversation.",
              "required": false,
              "example": "falsetrue"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": \"C123ABC456\",\n    \"ts\": \"1401383885.000061\",\n    \"text\": \"Updated text you carefully authored\",\n    \"message\": {\n        \"text\": \"Updated text you carefully authored\",\n        \"user\": \"U34567890\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"cant_update_message\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.create",
          "desc": "Initiates a public or private channel-based conversation",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "name",
              "type": "string",
              "description": "Name of the public or private channel to create",
              "required": true,
              "example": "mychannel"
            },
            {
              "name": "is_private",
              "type": "boolean",
              "description": "Create a private channel instead of a public one",
              "required": false,
              "example": "true"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id to create the channel in, required if org token is used",
              "required": false,
              "example": "T1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": {\n        \"id\": \"C0EAQDV4Z\",\n        \"name\": \"endeavor\",\n        \"is_channel\": true,\n        \"is_group\": false,\n        \"is_im\": false,\n        \"created\": 1504554479,\n        \"creator\": \"U0123456\",\n        \"is_archived\": false,\n        \"is_general\": false,\n        \"unlinked\": 0,\n        \"name_normalized\": \"endeavor\",\n        \"is_shared\": false,\n        \"is_ext_shared\": false,\n        \"is_org_shared\": false,\n        \"pending_shared\": [],\n        \"is_pending_ext_shared\": false,\n        \"is_member\": true,\n        \"is_private\": false,\n        \"is_mpim\": false,\n        \"last_read\": \"0000000000.000000\",\n        \"latest\": null,\n        \"unread_count\": 0,\n        \"unread_count_display\": 0,\n        \"topic\": {\n            \"value\": \"\",\n            \"creator\": \"\",\n            \"last_set\": 0\n        },\n        \"purpose\": {\n            \"value\": \"\",\n            \"creator\": \"\",\n            \"last_set\": 0\n        },\n        \"previous_names\": [],\n        \"priority\": 0\n    }\n}{\n    \"ok\": false,\n    \"error\": \"name_taken\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.history",
          "desc": "Fetches a conversation's history of messages and events.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Conversation ID to fetch history for.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "include_all_metadata",
              "type": "boolean",
              "description": "Return all metadata associated with this message.",
              "required": false,
              "example": "0true"
            },
            {
              "name": "inclusive",
              "type": "boolean",
              "description": "Include messages with oldest or latest timestamps in results. Ignored unless either timestamp is specified.",
              "required": false,
              "example": "0true"
            },
            {
              "name": "latest",
              "type": "string",
              "description": "Only messages before this Unix timestamp will be included in results. Default is the current time.",
              "required": false,
              "example": "1234567890.123456"
            },
            {
              "name": "limit",
              "type": "number",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
              "required": false,
              "example": "10020"
            },
            {
              "name": "oldest",
              "type": "string",
              "description": "Only messages after this Unix timestamp will be included in results.",
              "required": false,
              "example": "01234567890.123456"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"messages\": [\n        {\n            \"type\": \"message\",\n            \"user\": \"U123ABC456\",\n            \"text\": \"I find you punny and would like to smell your nose letter\",\n            \"ts\": \"1512085950.000216\"\n        },\n        {\n            \"type\": \"message\",\n            \"user\": \"U222BBB222\",\n            \"text\": \"What, you want to smell my shoes better?\",\n            \"ts\": \"1512104434.000490\"\n        }\n    ],\n    \"has_more\": true,\n    \"pin_count\": 0,\n    \"response_metadata\": {\n        \"next_cursor\": \"bmV4dF90czoxNTEyMDg1ODYxMDAwNTQz\"\n    }\n}{\n    \"ok\": true,\n    \"messages\": [\n        {\n            \"type\": \"message\",\n            \"user\": \"U123ABC456\",\n            \"text\": \"I find you punny and would like to smell your nose letter\",\n            \"ts\": \"1512085950.000216\"\n        },\n        {\n            \"type\": \"message\",\n            \"user\": \"U222BBB222\",\n            \"text\": \"Isn't this whether dreadful? <https://badpuns.example.com/puns/123>\",\n            \"attachments\": [\n                {\n                    \"service_name\": \"Leg end nary a laugh, Ink.\",\n                    \"text\": \"This is likely a pun about the weather.\",\n                    \"fallback\": \"We're withholding a pun from you\",\n                    \"thumb_url\": \"https://badpuns.example.com/puns/123.png\",\n                    \"thumb_width\": 1920,\n                    \"thumb_height\": 700,\n                    \"id\": 1\n                }\n            ],\n            \"ts\": \"1512085950.218404\"\n        }\n    ],\n    \"has_more\": true,\n    \"pin_count\": 0,\n    \"response_metadata\": {\n        \"next_cursor\": \"bmV4dF90czoxNTEyMTU0NDA5MDAwMjU2\"\n    }\n}{\n    \"ok\": true,\n    \"latest\": \"1512085950.000216\",\n    \"messages\": [\n        {\n            \"type\": \"message\",\n            \"user\": \"U123ABC456\",\n            \"text\": \"I find you punny and would like to smell your nose letter\",\n            \"ts\": \"1512085950.000216\"\n        }\n    ],\n    \"has_more\": true,\n    \"pin_count\": 0,\n    \"response_metadata\": {\n        \"next_cursor\": \"bmV4dF90czoxNTEyMzU2NTI2MDAwMTMw\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"channel_not_found\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [
        {
          "name": "conversations.info",
          "desc": "Retrieve information about a conversation.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Conversation ID to learn more about",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "include_locale",
              "type": "boolean",
              "description": "Set this to true to receive the locale for this conversation. Defaults to false",
              "required": false,
              "example": "true"
            },
            {
              "name": "include_num_members",
              "type": "boolean",
              "description": "Set to true to include the member count for the specified conversation. Defaults to false",
              "required": false,
              "example": "falsetrue"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": {\n        \"id\": \"C012AB3CD\",\n        \"name\": \"general\",\n        \"is_channel\": true,\n        \"is_group\": false,\n        \"is_im\": false,\n        \"created\": 1449252889,\n        \"creator\": \"W012A3BCD\",\n        \"is_archived\": false,\n        \"is_general\": true,\n        \"unlinked\": 0,\n        \"name_normalized\": \"general\",\n        \"is_read_only\": false,\n        \"is_shared\": false,\n        \"parent_conversation\": null,\n        \"is_ext_shared\": false,\n        \"is_org_shared\": false,\n        \"pending_shared\": [],\n        \"is_pending_ext_shared\": false,\n        \"is_member\": true,\n        \"is_private\": false,\n        \"is_mpim\": false,\n        \"last_read\": \"1502126650.228446\",\n        \"topic\": {\n            \"value\": \"For public discussion of generalities\",\n            \"creator\": \"W012A3BCD\",\n            \"last_set\": 1449709364\n        },\n        \"purpose\": {\n            \"value\": \"This part of the workspace is for fun. Make fun here.\",\n            \"creator\": \"W012A3BCD\",\n            \"last_set\": 1449709364\n        },\n        \"previous_names\": [\n            \"specifics\",\n            \"abstractions\",\n            \"etc\"\n        ],\n        \"locale\": \"en-US\"\n    }\n}{\n    \"ok\": true,\n    \"channel\": {\n        \"id\": \"C012AB3CD\",\n        \"created\": 1507235627,\n        \"is_im\": true,\n        \"is_org_shared\": false,\n        \"user\": \"U27FFLNF4\",\n        \"last_read\": \"1513718191.000038\",\n        \"latest\": {\n            \"type\": \"message\",\n            \"user\": \"U5R3PALPN\",\n            \"text\": \"Psssst!\",\n            \"ts\": \"1513718191.000038\"\n        },\n        \"unread_count\": 0,\n        \"unread_count_display\": 0,\n        \"is_open\": true,\n        \"locale\": \"en-US\",\n        \"priority\": 0.043016851216706\n    }\n}{\n    \"ok\": true,\n    \"channel\": {\n        \"id\": \"C012AB3CD\",\n        \"created\": 1507235627,\n        \"is_im\": true,\n        \"is_org_shared\": false,\n        \"user\": \"U27FFLNF4\",\n        \"last_read\": \"1513718191.000038\",\n        \"latest\": {\n            \"type\": \"message\",\n            \"user\": \"U5R3PALPN\",\n            \"text\": \"Psssst!\",\n            \"ts\": \"1513718191.000038\"\n        },\n        \"unread_count\": 0,\n        \"unread_count_display\": 0,\n        \"is_open\": true,\n        \"locale\": \"en-US\",\n        \"priority\": 0.043016851216706,\n        \"num_members\": 2\n    }\n}{\n    \"ok\": false,\n    \"error\": \"channel_not_found\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.join",
          "desc": "Joins an existing conversation.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "ID of conversation to join",
              "required": true,
              "example": "C1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": {\n        \"id\": \"C061EG9SL\",\n        \"name\": \"general\",\n        \"is_channel\": true,\n        \"is_group\": false,\n        \"is_im\": false,\n        \"created\": 1449252889,\n        \"creator\": \"U061F7AUR\",\n        \"is_archived\": false,\n        \"is_general\": true,\n        \"unlinked\": 0,\n        \"name_normalized\": \"general\",\n        \"is_shared\": false,\n        \"is_ext_shared\": false,\n        \"is_org_shared\": false,\n        \"pending_shared\": [],\n        \"is_pending_ext_shared\": false,\n        \"is_member\": true,\n        \"is_private\": false,\n        \"is_mpim\": false,\n        \"topic\": {\n            \"value\": \"Which widget do you worry about?\",\n            \"creator\": \"\",\n            \"last_set\": 0\n        },\n        \"purpose\": {\n            \"value\": \"For widget discussion\",\n            \"creator\": \"\",\n            \"last_set\": 0\n        },\n        \"previous_names\": []\n    },\n    \"warning\": \"already_in_channel\",\n    \"response_metadata\": {\n        \"warnings\": [\n            \"already_in_channel\"\n        ]\n    }\n}{\n    \"ok\": false,\n    \"error\": \"is_archived\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [
        {
          "name": "conversations.list",
          "desc": "Lists all channels in a Slack team.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "exclude_archived",
              "type": "boolean",
              "description": "Set to true to exclude archived channels from the list.",
              "required": false,
              "example": "falsetrue"
            },
            {
              "name": "limit",
              "type": "number",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer under 1000.",
              "required": false,
              "example": "10020"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id to list channels in, required if token belongs to org-wide app",
              "required": false,
              "example": "T1234567890"
            },
            {
              "name": "types",
              "type": "string",
              "description": "Mix and match channel types by providing a comma-separated list of any combination of public_channel, private_channel, mpim, im",
              "required": false,
              "example": "public_channelpublic_channel,private_channel"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channels\": [\n        {\n            \"id\": \"C012AB3CD\",\n            \"name\": \"general\",\n            \"is_channel\": true,\n            \"is_group\": false,\n            \"is_im\": false,\n            \"created\": 1449252889,\n            \"creator\": \"U012A3CDE\",\n            \"is_archived\": false,\n            \"is_general\": true,\n            \"unlinked\": 0,\n            \"name_normalized\": \"general\",\n            \"is_shared\": false,\n            \"is_ext_shared\": false,\n            \"is_org_shared\": false,\n            \"pending_shared\": [],\n            \"is_pending_ext_shared\": false,\n            \"is_member\": true,\n            \"is_private\": false,\n            \"is_mpim\": false,\n            \"updated\": 1678229664302,\n            \"topic\": {\n                \"value\": \"Company-wide announcements and work-based matters\",\n                \"creator\": \"\",\n                \"last_set\": 0\n            },\n            \"purpose\": {\n                \"value\": \"This channel is for team-wide communication and announcements. All team members are in this channel.\",\n                \"creator\": \"\",\n                \"last_set\": 0\n            },\n            \"previous_names\": [],\n            \"num_members\": 4\n        },\n        {\n            \"id\": \"C061EG9T2\",\n            \"name\": \"random\",\n            \"is_channel\": true,\n            \"is_group\": false,\n            \"is_im\": false,\n            \"created\": 1449252889,\n            \"creator\": \"U061F7AUR\",\n            \"is_archived\": false,\n            \"is_general\": false,\n            \"unlinked\": 0,\n            \"name_normalized\": \"random\",\n            \"is_shared\": false,\n            \"is_ext_shared\": false,\n            \"is_org_shared\": false,\n            \"pending_shared\": [],\n            \"is_pending_ext_shared\": false,\n            \"is_member\": true,\n            \"is_private\": false,\n            \"is_mpim\": false,\n            \"updated\": 1678229664302,\n            \"topic\": {\n                \"value\": \"Non-work banter and water cooler conversation\",\n                \"creator\": \"\",\n                \"last_set\": 0\n            },\n            \"purpose\": {\n                \"value\": \"A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\",\n                \"creator\": \"\",\n                \"last_set\": 0\n            },\n            \"previous_names\": [],\n            \"num_members\": 4\n        }\n    ],\n    \"response_metadata\": {\n        \"next_cursor\": \"dGVhbTpDMDYxRkE1UEI=\"\n    }\n}{\n    \"ok\": true,\n    \"channels\": [\n        {\n            \"id\": \"G0AKFJBEU\",\n            \"name\": \"mpdm-mr.banks--slactions-jackson--beforebot-1\",\n            \"is_channel\": false,\n            \"is_group\": true,\n            \"is_im\": false,\n            \"created\": 1493657761,\n            \"creator\": \"U061F7AUR\",\n            \"is_archived\": false,\n            \"is_general\": false,\n            \"unlinked\": 0,\n            \"name_normalized\": \"mpdm-mr.banks--slactions-jackson--beforebot-1\",\n            \"is_shared\": false,\n            \"is_ext_shared\": false,\n            \"is_org_shared\": false,\n            \"pending_shared\": [],\n            \"is_pending_ext_shared\": false,\n            \"is_member\": true,\n            \"is_private\": true,\n            \"is_mpim\": true,\n            \"is_open\": true,\n            \"updated\": 1678229664302,\n            \"topic\": {\n                \"value\": \"Group messaging\",\n                \"creator\": \"U061F7AUR\",\n                \"last_set\": 1493657761\n            },\n            \"purpose\": {\n                \"value\": \"Group messaging with: @mr.banks @slactions-jackson @beforebot\",\n                \"creator\": \"U061F7AUR\",\n                \"last_set\": 1493657761\n            },\n            \"priority\": 0\n        },\n        {\n            \"id\": \"D0C0F7S8Y\",\n            \"created\": 1498500348,\n            \"is_im\": true,\n            \"is_org_shared\": false,\n            \"user\": \"U0BS9U4SV\",\n            \"is_user_deleted\": false,\n            \"priority\": 0\n        },\n        {\n            \"id\": \"D0BSHH4AD\",\n            \"created\": 1498511030,\n            \"is_im\": true,\n            \"is_org_shared\": false,\n            \"user\": \"U0C0NS9HN\",\n            \"is_user_deleted\": false,\n            \"priority\": 0\n        }\n    ],\n    \"response_metadata\": {\n        \"next_cursor\": \"aW1faWQ6RDBCSDk1RExI\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.listConnectInvites",
          "desc": "Lists shared channel invites that have been generated or received but have not been approved by all parties",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "count",
              "type": "integer",
              "description": "Maximum number of invites to return",
              "required": false,
              "example": "100"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Set to next_cursor returned by previous call to list items in subsequent page",
              "required": false,
              "example": "5c3e53d5"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "Encoded team id for the workspace to retrieve invites for, required if org token is used",
              "required": false,
              "example": "T1234567890"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.mark",
          "desc": "Sets the read cursor in a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel or conversation to set the read cursor for.",
              "required": true,
              "example": "C012345678"
            },
            {
              "name": "ts",
              "type": "string",
              "description": "Unique identifier of message you want marked as most recently seen in this conversation.",
              "required": true,
              "example": "1593473566.000200"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [
        {
          "name": "conversations.members",
          "desc": "Retrieve members of a conversation.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "ID of the conversation to retrieve members for",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "limit",
              "type": "number",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
              "required": false,
              "example": "10020"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"members\": [\n        \"U023BECGF\",\n        \"U061F7AUR\",\n        \"W012A3CDE\"\n    ],\n    \"response_metadata\": {\n        \"next_cursor\": \"e3VzZXJfaWQ6IFcxMjM0NTY3fQ==\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_cursor\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [
        {
          "name": "conversations.replies",
          "desc": "Retrieve a thread of messages posted to a conversation",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Conversation ID to fetch thread from.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "ts",
              "type": "string",
              "description": "Unique identifier of either a thread’s parent message or a message in the thread. ts must be the timestamp of an existing message with 0 or more replies. If there are no replies then just the single message referenced by ts will return - it is just an ordinary, unthreaded message.",
              "required": true,
              "example": "1234567890.123456"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "include_all_metadata",
              "type": "boolean",
              "description": "Return all metadata associated with this message.",
              "required": false,
              "example": "0true"
            },
            {
              "name": "inclusive",
              "type": "boolean",
              "description": "Include messages with oldest or latest timestamps in results. Ignored unless either timestamp is specified.",
              "required": false,
              "example": "0true"
            },
            {
              "name": "latest",
              "type": "string",
              "description": "Only messages before this Unix timestamp will be included in results.",
              "required": false,
              "example": "now1234567890.123456"
            },
            {
              "name": "limit",
              "type": "number",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached.",
              "required": false,
              "example": "100020"
            },
            {
              "name": "oldest",
              "type": "string",
              "description": "Only messages after this Unix timestamp will be included in results.",
              "required": false,
              "example": "01234567890.123456"
            }
          ],
          "output": [
            "{\n    \"messages\": [\n        {\n            \"type\": \"message\",\n            \"user\": \"U061F7AUR\",\n            \"text\": \"island\",\n            \"thread_ts\": \"1482960137.003543\",\n            \"reply_count\": 3,\n            \"subscribed\": true,\n            \"last_read\": \"1484678597.521003\",\n            \"unread_count\": 0,\n            \"ts\": \"1482960137.003543\"\n        },\n        {\n            \"type\": \"message\",\n            \"user\": \"U061F7AUR\",\n            \"text\": \"one island\",\n            \"thread_ts\": \"1482960137.003543\",\n            \"parent_user_id\": \"U061F7AUR\",\n            \"ts\": \"1483037603.017503\"\n        },\n        {\n            \"type\": \"message\",\n            \"user\": \"U061F7AUR\",\n            \"text\": \"two island\",\n            \"thread_ts\": \"1482960137.003543\",\n            \"parent_user_id\": \"U061F7AUR\",\n            \"ts\": \"1483051909.018632\"\n        },\n        {\n            \"type\": \"message\",\n            \"user\": \"U061F7AUR\",\n            \"text\": \"three for the land\",\n            \"thread_ts\": \"1482960137.003543\",\n            \"parent_user_id\": \"U061F7AUR\",\n            \"ts\": \"1483125339.020269\"\n        }\n    ],\n    \"has_more\": true,\n    \"ok\": true,\n    \"response_metadata\": {\n        \"next_cursor\": \"bmV4dF90czoxNDg0Njc4MjkwNTE3MDkx\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"thread_not_found\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.setPurpose",
          "desc": "Sets the purpose for a conversation.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Conversation to set the purpose of",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "purpose",
              "type": "string",
              "description": "A new, specialer purpose",
              "required": true,
              "example": "My More Special Purpose"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.setTopic",
          "desc": "Sets the topic for a conversation.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Conversation to set the topic of",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "topic",
              "type": "string",
              "description": "The new topic string. Does not support formatting or linkification.",
              "required": true,
              "example": "Apply topically for best effects"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": {\n        \"id\": \"C12345678\",\n        \"name\": \"tips-and-tricks\",\n        \"is_channel\": true,\n        \"is_group\": false,\n        \"is_im\": false,\n        \"is_mpim\": false,\n        \"is_private\": false,\n        \"created\": 1649195947,\n        \"is_archived\": false,\n        \"is_general\": false,\n        \"unlinked\": 0,\n        \"name_normalized\": \"tips-and-tricks\",\n        \"is_shared\": false,\n        \"is_frozen\": false,\n        \"is_org_shared\": false,\n        \"is_pending_ext_shared\": false,\n        \"pending_shared\": [],\n        \"parent_conversation\": null,\n        \"creator\": \"U12345678\",\n        \"is_ext_shared\": false,\n        \"shared_team_ids\": [\n            \"T12345678\"\n        ],\n        \"pending_connected_team_ids\": [],\n        \"is_member\": true,\n        \"last_read\": \"1649869848.627809\",\n        \"latest\": {\n            \"type\": \"message\",\n            \"subtype\": \"channel_topic\",\n            \"ts\": \"1649952691.429799\",\n            \"user\": \"U12345678\",\n            \"text\": \"set the channel topic: Apply topically for best effects\",\n            \"topic\": \"Apply topically for best effects\"\n        },\n        \"unread_count\": 1,\n        \"unread_count_display\": 0,\n        \"topic\": {\n            \"value\": \"Apply topically for best effects\",\n            \"creator\": \"U12345678\",\n            \"last_set\": 1649952691\n        },\n        \"purpose\": {\n            \"value\": \"\",\n            \"creator\": \"\",\n            \"last_set\": 0\n        },\n        \"previous_names\": []\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_arguments\",\n    \"response_metadata\": {\n        \"messages\": [\n            \"[ERROR] missing required field: topic\"\n        ]\n    }\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "dnd",
      "desc": "",
      "query": [
        {
          "name": "dnd.info",
          "desc": "Retrieves a user's current Do Not Disturb status.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "Encoded team id where passed in user param belongs, required if org token is used. If no user param is passed, then a team which has access to the app should be passed",
              "required": false,
              "example": "T1234567890"
            },
            {
              "name": "user",
              "type": "string",
              "description": "User to fetch status for (defaults to current user)",
              "required": false,
              "example": "U1234"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "dnd",
      "desc": "",
      "query": [
        {
          "name": "dnd.teamInfo",
          "desc": "Retrieves the Do Not Disturb status for up to 50 users on a team.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "users",
              "type": "string",
              "description": "Comma-separated list of users to fetch Do Not Disturb status for",
              "required": true,
              "example": "U1234,W4567"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "Encoded team id where passed in users belong, required if org token is used",
              "required": false,
              "example": "T1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"users\": {\n        \"U023BECGF\": {\n            \"dnd_enabled\": true,\n            \"next_dnd_start_ts\": 1450387800,\n            \"next_dnd_end_ts\": 1450423800\n        },\n        \"W058CJVAA\": {\n            \"dnd_enabled\": false,\n            \"next_dnd_start_ts\": 1,\n            \"next_dnd_end_ts\": 1\n        }\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "emoji",
      "desc": "",
      "query": [
        {
          "name": "emoji.list",
          "desc": "Lists custom emoji for a team.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "include_categories",
              "type": "boolean",
              "description": "Include a list of categories for Unicode emoji and the emoji in each category",
              "required": false,
              "example": "true"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "files.completeUploadExternal",
          "desc": "Finishes an upload started with files.getUploadURLExternal",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "files",
              "type": "array",
              "description": "Array of file ids and their corresponding (optional) titles.",
              "required": true,
              "example": "[{\"id\":\"F044GKUHN9Z\", \"title\":\"slack-test\"}]"
            },
            {
              "name": "channel_id",
              "type": "",
              "description": "Channel ID where the file will be shared. If not specified the file will be private.",
              "required": false,
              "example": "C0NF841BK"
            },
            {
              "name": "initial_comment",
              "type": "string",
              "description": "The message text introducing the file in specified channels.",
              "required": false,
              "example": ""
            },
            {
              "name": "thread_ts",
              "type": "string",
              "description": "Provide another message's ts value to upload this file as a reply. Never use a reply's ts value; use its parent instead.",
              "required": false,
              "example": "1524523204.000192"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"files\": [\n        {\n            \"id\": \"F123ABC456\",\n            \"title\": \"slack-test\"\n        }\n    ]\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.getUploadURLExternal",
          "desc": "Gets a URL for an edge external file upload",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "filename",
              "type": "string",
              "description": "Name of the file being uploaded.",
              "required": true,
              "example": "laughingoutloudcat.jpg"
            },
            {
              "name": "length",
              "type": "integer",
              "description": "Size in bytes of the file being uploaded.",
              "required": true,
              "example": "53072"
            },
            {
              "name": "alt_txt",
              "type": "string",
              "description": "Description of image for screen-reader.",
              "required": false,
              "example": "Aerial view of the Bixby Bridge and coastline of the Big Sur area in California"
            },
            {
              "name": "snippet_type",
              "type": "string",
              "description": "Syntax type of the snippet being uploaded.",
              "required": false,
              "example": "python"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"upload_url\": \"https://files.slack.com/upload/v1/ABC123...\",\n    \"file_id\": \"F123ABC456\"\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.info",
          "desc": "Gets information about a file.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "file",
              "type": "string",
              "description": "Specify a file by providing its ID.",
              "required": true,
              "example": "F2147483862"
            },
            {
              "name": "count",
              "type": "integer",
              "description": "Number of items to return per page.",
              "required": false,
              "example": "10020"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Parameter for pagination. File comments are paginated for a single file. Set cursor equal to the next_cursor attribute returned by the previous request's response_metadata. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection of comments. See pagination for more details.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "limit",
              "type": "integer",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.",
              "required": false,
              "example": "020"
            },
            {
              "name": "page",
              "type": "integer",
              "description": "Page number of results to return.",
              "required": false,
              "example": "12"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"file\": {\n        \"id\": \"F0S43PZDF\",\n        \"created\": 1531763342,\n        \"timestamp\": 1531763342,\n        \"name\": \"tedair.gif\",\n        \"title\": \"tedair.gif\",\n        \"mimetype\": \"image/gif\",\n        \"filetype\": \"gif\",\n        \"pretty_type\": \"GIF\",\n        \"user\": \"U061F7AUR\",\n        \"editable\": false,\n        \"size\": 137531,\n        \"mode\": \"hosted\",\n        \"is_external\": false,\n        \"external_type\": \"\",\n        \"is_public\": true,\n        \"public_url_shared\": false,\n        \"display_as_bot\": false,\n        \"username\": \"\",\n        \"url_private\": \"https://.../tedair.gif\",\n        \"url_private_download\": \"https://.../tedair.gif\",\n        \"thumb_64\": \"https://.../tedair_64.png\",\n        \"thumb_80\": \"https://.../tedair_80.png\",\n        \"thumb_360\": \"https://.../tedair_360.png\",\n        \"thumb_360_w\": 176,\n        \"thumb_360_h\": 226,\n        \"thumb_160\": \"https://.../tedair_=_160.png\",\n        \"thumb_360_gif\": \"https://.../tedair_360.gif\",\n        \"image_exif_rotation\": 1,\n        \"original_w\": 176,\n        \"original_h\": 226,\n        \"deanimate_gif\": \"https://.../tedair_deanimate_gif.png\",\n        \"pjpeg\": \"https://.../tedair_pjpeg.jpg\",\n        \"permalink\": \"https://.../tedair.gif\",\n        \"permalink_public\": \"https://.../...\",\n        \"comments_count\": 0,\n        \"is_starred\": false,\n        \"shares\": {\n            \"public\": {\n                \"C0T8SE4AU\": [\n                    {\n                        \"reply_users\": [\n                            \"U061F7AUR\"\n                        ],\n                        \"reply_users_count\": 1,\n                        \"reply_count\": 1,\n                        \"ts\": \"1531763348.000001\",\n                        \"thread_ts\": \"1531763273.000015\",\n                        \"latest_reply\": \"1531763348.000001\",\n                        \"channel_name\": \"file-under\",\n                        \"team_id\": \"T061EG9R6\"\n                    }\n                ]\n            }\n        },\n        \"channels\": [\n            \"C0T8SE4AU\"\n        ],\n        \"groups\": [],\n        \"ims\": [],\n        \"has_rich_preview\": false,\n        \"alt_txt\": \"tedair.gif\"\n    },\n    \"comments\": [],\n    \"response_metadata\": {\n        \"next_cursor\": \"dGVhbTpDMUg5UkVTR0w=\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.list",
          "desc": "List for a team, in a channel, or from a user with applied filters.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Filter files appearing in a specific channel, indicated by its ID.",
              "required": false,
              "example": "C1234567890"
            },
            {
              "name": "count",
              "type": "integer",
              "description": "Number of items to return per page.",
              "required": false,
              "example": "10020"
            },
            {
              "name": "page",
              "type": "integer",
              "description": "Page number of results to return.",
              "required": false,
              "example": "12"
            },
            {
              "name": "show_files_hidden_by_limit",
              "type": "boolean",
              "description": "Show truncated file info for files hidden due to being too old, and the team who owns the file being over the file limit.",
              "required": false,
              "example": "true"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id to list files in, required if org token is used",
              "required": false,
              "example": "T1234567890"
            },
            {
              "name": "ts_from",
              "type": "string",
              "description": "Filter files created after this timestamp (inclusive).",
              "required": false,
              "example": "123456789"
            },
            {
              "name": "ts_to",
              "type": "string",
              "description": "Filter files created before this timestamp (inclusive).",
              "required": false,
              "example": "123456789"
            },
            {
              "name": "types",
              "type": "string",
              "description": "Filter files by type (see below). You can pass multiple values in the types argument, like types=spaces,snippets.The default value is all, which does not filter the list.",
              "required": false,
              "example": "allimages"
            },
            {
              "name": "user",
              "type": "string",
              "description": "Filter files created by a single user.",
              "required": false,
              "example": "W1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"files\": [\n        {\n            \"id\": \"F0S43P1CZ\",\n            \"created\": 1531763254,\n            \"timestamp\": 1531763254,\n            \"name\": \"billair.gif\",\n            \"title\": \"billair.gif\",\n            \"mimetype\": \"image/gif\",\n            \"filetype\": \"gif\",\n            \"pretty_type\": \"GIF\",\n            \"user\": \"U061F7AUR\",\n            \"editable\": false,\n            \"size\": 144538,\n            \"mode\": \"hosted\",\n            \"is_external\": false,\n            \"external_type\": \"\",\n            \"is_public\": true,\n            \"public_url_shared\": false,\n            \"display_as_bot\": false,\n            \"username\": \"\",\n            \"url_private\": \"https://.../billair.gif\",\n            \"url_private_download\": \"https://.../billair.gif\",\n            \"thumb_64\": \"https://.../billair_64.png\",\n            \"thumb_80\": \"https://.../billair_80.png\",\n            \"thumb_360\": \"https://.../billair_360.png\",\n            \"thumb_360_w\": 176,\n            \"thumb_360_h\": 226,\n            \"thumb_160\": \"https://.../billair_=_160.png\",\n            \"thumb_360_gif\": \"https://.../billair_360.gif\",\n            \"image_exif_rotation\": 1,\n            \"original_w\": 176,\n            \"original_h\": 226,\n            \"deanimate_gif\": \"https://.../billair_deanimate_gif.png\",\n            \"pjpeg\": \"https://.../billair_pjpeg.jpg\",\n            \"permalink\": \"https://.../billair.gif\",\n            \"permalink_public\": \"https://.../...\",\n            \"channels\": [\n                \"C0T8SE4AU\"\n            ],\n            \"groups\": [],\n            \"ims\": [],\n            \"comments_count\": 0\n        },\n        {\n            \"id\": \"F0S43PZDF\",\n            \"created\": 1531763342,\n            \"timestamp\": 1531763342,\n            \"name\": \"tedair.gif\",\n            \"title\": \"tedair.gif\",\n            \"mimetype\": \"image/gif\",\n            \"filetype\": \"gif\",\n            \"pretty_type\": \"GIF\",\n            \"user\": \"U061F7AUR\",\n            \"editable\": false,\n            \"size\": 137531,\n            \"mode\": \"hosted\",\n            \"is_external\": false,\n            \"external_type\": \"\",\n            \"is_public\": true,\n            \"public_url_shared\": false,\n            \"display_as_bot\": false,\n            \"username\": \"\",\n            \"url_private\": \"https://.../tedair.gif\",\n            \"url_private_download\": \"https://.../tedair.gif\",\n            \"thumb_64\": \"https://.../tedair_64.png\",\n            \"thumb_80\": \"https://.../tedair_80.png\",\n            \"thumb_360\": \"https://.../tedair_360.png\",\n            \"thumb_360_w\": 176,\n            \"thumb_360_h\": 226,\n            \"thumb_160\": \"https://.../tedair_=_160.png\",\n            \"thumb_360_gif\": \"https://.../tedair_360.gif\",\n            \"image_exif_rotation\": 1,\n            \"original_w\": 176,\n            \"original_h\": 226,\n            \"deanimate_gif\": \"https://.../tedair_deanimate_gif.png\",\n            \"pjpeg\": \"https://.../tedair_pjpeg.jpg\",\n            \"permalink\": \"https://.../tedair.gif\",\n            \"permalink_public\": \"https://.../...\",\n            \"channels\": [\n                \"C0T8SE4AU\"\n            ],\n            \"groups\": [],\n            \"ims\": [],\n            \"comments_count\": 0\n        }\n    ],\n    \"paging\": {\n        \"count\": 100,\n        \"total\": 2,\n        \"page\": 1,\n        \"pages\": 1\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.remote.add",
          "desc": "Adds a file from a remote service",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "external_id",
              "type": "string",
              "description": "Creator defined GUID for the file.",
              "required": true,
              "example": "123456"
            },
            {
              "name": "external_url",
              "type": "string",
              "description": "URL of the remote file.",
              "required": true,
              "example": "http://example.com/my_cloud_service_file/abc123"
            },
            {
              "name": "title",
              "type": "string",
              "description": "Title of the file being shared.",
              "required": true,
              "example": "Danger, High Voltage!"
            },
            {
              "name": "filetype",
              "type": "string",
              "description": "type of file",
              "required": false,
              "example": "doc"
            },
            {
              "name": "indexable_file_contents",
              "type": "",
              "description": "A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file.",
              "required": false,
              "example": "..."
            },
            {
              "name": "preview_image",
              "type": "",
              "description": "Preview of the document via multipart/form-data.",
              "required": false,
              "example": "..."
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.remote.info",
          "desc": "Retrieve information about a remote file added to Slack",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "external_id",
              "type": "string",
              "description": "Creator defined GUID for the file.",
              "required": false,
              "example": "123456"
            },
            {
              "name": "file",
              "type": "string",
              "description": "Specify a file by providing its ID.",
              "required": false,
              "example": "F2147483862"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.remote.list",
          "desc": "Retrieve information about a remote file added to Slack",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Filter files appearing in a specific channel, indicated by its ID.",
              "required": false,
              "example": "C1234567890"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "limit",
              "type": "integer",
              "description": "The maximum number of items to return.",
              "required": false,
              "example": "20"
            },
            {
              "name": "ts_from",
              "type": "string",
              "description": "Filter files created after this timestamp (inclusive).",
              "required": false,
              "example": "0123456789"
            },
            {
              "name": "ts_to",
              "type": "string",
              "description": "Filter files created before this timestamp (inclusive).",
              "required": false,
              "example": "now123456789"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.remote.share",
          "desc": "Share a remote file into a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channels",
              "type": "string",
              "description": "Comma-separated list of channel IDs where the file will be shared.",
              "required": true,
              "example": "C1234567890,C2345678901,C3456789012"
            },
            {
              "name": "external_id",
              "type": "string",
              "description": "The globally unique identifier (GUID) for the file, as set by the app registering the file with Slack.  Either this field or file or both are required.",
              "required": false,
              "example": "123456"
            },
            {
              "name": "file",
              "type": "string",
              "description": "Specify a file registered with Slack by providing its ID. Either this field or external_id or both are required.",
              "required": false,
              "example": "F2147483862"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.remote.update",
          "desc": "Updates an existing remote file.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "external_id",
              "type": "string",
              "description": "Creator defined GUID for the file.",
              "required": false,
              "example": "123456"
            },
            {
              "name": "external_url",
              "type": "string",
              "description": "URL of the remote file.",
              "required": false,
              "example": "http://example.com/my_cloud_service_file/abc123"
            },
            {
              "name": "file",
              "type": "string",
              "description": "Specify a file by providing its ID.",
              "required": false,
              "example": "F2147483862"
            },
            {
              "name": "filetype",
              "type": "string",
              "description": "type of file",
              "required": false,
              "example": "doc"
            },
            {
              "name": "indexable_file_contents",
              "type": "",
              "description": "File containing contents that can be used to improve searchability for the remote file.",
              "required": false,
              "example": "..."
            },
            {
              "name": "preview_image",
              "type": "",
              "description": "Preview of the document via multipart/form-data.",
              "required": false,
              "example": "..."
            },
            {
              "name": "title",
              "type": "string",
              "description": "Title of the file being shared.",
              "required": false,
              "example": "Danger, High Voltage!"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "files.upload",
          "desc": "Uploads or creates a file.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channels",
              "type": "string",
              "description": "Comma-separated list of channel names or IDs where the file will be shared.",
              "required": false,
              "example": "C1234567890,C2345678901,C3456789012"
            },
            {
              "name": "content",
              "type": "string",
              "description": "File contents via a POST variable. If omitting this parameter, you must provide a file.",
              "required": false,
              "example": "..."
            },
            {
              "name": "file",
              "type": "",
              "description": "File contents via multipart/form-data. If omitting this parameter, you must submit content.",
              "required": false,
              "example": "..."
            },
            {
              "name": "filename",
              "type": "string",
              "description": "Filename of file.",
              "required": false,
              "example": "foo.txt"
            },
            {
              "name": "filetype",
              "type": "string",
              "description": "A file type identifier.",
              "required": false,
              "example": "php"
            },
            {
              "name": "initial_comment",
              "type": "string",
              "description": "The message text introducing the file in specified channels.",
              "required": false,
              "example": "Best!"
            },
            {
              "name": "thread_ts",
              "type": "string",
              "description": "Provide another message's ts value to upload this file as a reply. Never use a reply's ts value; use its parent instead.",
              "required": false,
              "example": "1234567890.123456"
            },
            {
              "name": "title",
              "type": "string",
              "description": "Title of file.",
              "required": false,
              "example": "My File"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"file\": {\n        \"id\": \"F0TD00400\",\n        \"created\": 1532293501,\n        \"timestamp\": 1532293501,\n        \"name\": \"dramacat.gif\",\n        \"title\": \"dramacat\",\n        \"mimetype\": \"image/jpeg\",\n        \"filetype\": \"gif\",\n        \"pretty_type\": \"JPEG\",\n        \"user\": \"U0L4B9NSU\",\n        \"editable\": false,\n        \"size\": 43518,\n        \"mode\": \"hosted\",\n        \"is_external\": false,\n        \"external_type\": \"\",\n        \"is_public\": false,\n        \"public_url_shared\": false,\n        \"display_as_bot\": false,\n        \"username\": \"\",\n        \"url_private\": \"https://.../dramacat.gif\",\n        \"url_private_download\": \"https://.../dramacat.gif\",\n        \"thumb_64\": \"https://.../dramacat_64.gif\",\n        \"thumb_80\": \"https://.../dramacat_80.gif\",\n        \"thumb_360\": \"https://.../dramacat_360.gif\",\n        \"thumb_360_w\": 360,\n        \"thumb_360_h\": 250,\n        \"thumb_480\": \"https://.../dramacat_480.gif\",\n        \"thumb_480_w\": 480,\n        \"thumb_480_h\": 334,\n        \"thumb_160\": \"https://.../dramacat_160.gif\",\n        \"image_exif_rotation\": 1,\n        \"original_w\": 526,\n        \"original_h\": 366,\n        \"permalink\": \"https://.../dramacat.gif\",\n        \"permalink_public\": \"https://.../More-Path-Components\",\n        \"comments_count\": 0,\n        \"is_starred\": false,\n        \"shares\": {\n            \"private\": {\n                \"D0L4B9P0Q\": [\n                    {\n                        \"reply_users\": [],\n                        \"reply_users_count\": 0,\n                        \"reply_count\": 0,\n                        \"ts\": \"1532293503.000001\"\n                    }\n                ]\n            }\n        },\n        \"channels\": [],\n        \"groups\": [],\n        \"ims\": [\n            \"D0L4B9P0Q\"\n        ],\n        \"has_rich_preview\": false\n    }\n}{\n    \"ok\": true,\n    \"file\": {\n        \"id\": \"F0TD0GUTS\",\n        \"created\": 1532294750,\n        \"timestamp\": 1532294750,\n        \"name\": \"-.txt\",\n        \"title\": \"Untitled\",\n        \"mimetype\": \"text/plain\",\n        \"filetype\": \"text\",\n        \"pretty_type\": \"Plain Text\",\n        \"user\": \"U0L4B9NSU\",\n        \"editable\": true,\n        \"size\": 11,\n        \"mode\": \"snippet\",\n        \"is_external\": false,\n        \"external_type\": \"\",\n        \"is_public\": true,\n        \"public_url_shared\": false,\n        \"display_as_bot\": false,\n        \"username\": \"\",\n        \"url_private\": \"https://.../.txt\",\n        \"url_private_download\": \"https://...download/-.txt\",\n        \"permalink\": \"https://.../.txt\",\n        \"permalink_public\": \"https://.../.txt\",\n        \"edit_link\": \"https://.../.txt/edit\",\n        \"preview\": \"launch plan\",\n        \"preview_highlight\": \"<div class=\\\"CodeMirror cm-s-default CodeMirrorServer\\\" oncopy=\\\"if(event.clipboardData){event.clipboardData.setData('text/plain',window.getSelection().toString().replace(/\\\\u200b/g,''));event.preventDefault();event.stopPropagation();}\\\">\\n<div class=\\\"CodeMirror-code\\\">\\n<div><pre>launch plan</pre></div>\\n</div>\\n</div>\\n\",\n        \"lines\": 1,\n        \"lines_more\": 0,\n        \"preview_is_truncated\": false,\n        \"comments_count\": 0,\n        \"is_starred\": false,\n        \"shares\": {\n            \"public\": {\n                \"C061EG9SL\": [\n                    {\n                        \"reply_users\": [],\n                        \"reply_users_count\": 0,\n                        \"reply_count\": 0,\n                        \"ts\": \"1532294750.000001\",\n                        \"channel_name\": \"general\",\n                        \"team_id\": \"T061EG9R6\"\n                    }\n                ]\n            }\n        },\n        \"channels\": [\n            \"C061EG9SL\"\n        ],\n        \"groups\": [],\n        \"ims\": [],\n        \"has_rich_preview\": false\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "pins",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "pins.add",
          "desc": "Pins an item to a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel to pin the messsage to. You must also include a timestamp when pinning messages.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "quip_component_id",
              "type": "string",
              "description": "Component ID for the pins component that was inserted into the channel canvas, if any.",
              "required": false,
              "example": ""
            },
            {
              "name": "timestamp",
              "type": "string",
              "description": "Timestamp of the message to pin. You must also include the channel.",
              "required": false,
              "example": "1234567890.123456"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"error\": \"channel_not_found\",\n    \"ok\": false\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "pins",
      "desc": "",
      "query": [
        {
          "name": "pins.list",
          "desc": "Lists items pinned to a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel to get pinned items for.",
              "required": true,
              "example": "C1234567890"
            }
          ],
          "output": [
            "{\n    \"items\": [\n        {\n            \"channel\": \"C123ABC456\",\n            \"created\": 1508881078,\n            \"created_by\": \"U123ABC456\",\n            \"message\": {\n                \"permalink\": \"https://hitchhikers.slack.com/archives/C2U86NC6H/p1508197641000151\",\n                \"pinned_to\": [\n                    \"C2U86NC6H\"\n                ],\n                \"text\": \"What is the meaning of life?\",\n                \"ts\": \"1508197641.000151\",\n                \"type\": \"message\",\n                \"user\": \"U123ABC456\"\n            },\n            \"type\": \"message\"\n        },\n        {\n            \"channel\": \"C123ABC456\",\n            \"created\": 1508880991,\n            \"created_by\": \"U123ABC456\",\n            \"message\": {\n                \"permalink\": \"https://hitchhikers.slack.com/archives/C2U86NC6H/p1508284197000015\",\n                \"pinned_to\": [\n                    \"C123ABC456\"\n                ],\n                \"text\": \"The meaning of life, the universe, and everything is 42.\",\n                \"ts\": \"1503289197.000015\",\n                \"type\": \"message\",\n                \"user\": \"U123ABC456\"\n            },\n            \"type\": \"message\"\n        }\n    ],\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "pins",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "pins.remove",
          "desc": "Un-pins an item from a channel.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel where the item is pinned to.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "timestamp",
              "type": "string",
              "description": "Timestamp of the message to un-pin.",
              "required": false,
              "example": "1234567890.123456"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"error\": \"no_pin\",\n    \"ok\": false\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "reactions",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "reactions.add",
          "desc": "Adds a reaction to an item.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel where the message to add reaction to was posted.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "name",
              "type": "string",
              "description": "Reaction (emoji) name",
              "required": true,
              "example": "thumbsup"
            },
            {
              "name": "timestamp",
              "type": "string",
              "description": "Timestamp of the message to add reaction to.",
              "required": true,
              "example": "1234567890.123456"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"error\": \"already_reacted\",\n    \"ok\": false\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "reactions",
      "desc": "",
      "query": [
        {
          "name": "reactions.get",
          "desc": "Gets reactions for an item.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel where the message to get reactions for was posted.",
              "required": false,
              "example": "C0NF841BK"
            },
            {
              "name": "file",
              "type": "string",
              "description": "File to get reactions for.",
              "required": false,
              "example": "F1234567890"
            },
            {
              "name": "file_comment",
              "type": "string",
              "description": "File comment to get reactions for.",
              "required": false,
              "example": "Fc1234567890"
            },
            {
              "name": "full",
              "type": "boolean",
              "description": "If true always return the complete reaction list.",
              "required": false,
              "example": "true"
            },
            {
              "name": "timestamp",
              "type": "string",
              "description": "Timestamp of the message to get reactions for.",
              "required": false,
              "example": "1524523204.000192"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"type\": \"message\",\n    \"message\": {\n        \"type\": \"message\",\n        \"text\": \"Hi there!\",\n        \"user\": \"W123456\",\n        \"ts\": \"1648602352.215969\",\n        \"team\": \"T123456\",\n        \"reactions\": [\n            {\n                \"name\": \"grinning\",\n                \"users\": [\n                    \"W222222\"\n                ],\n                \"count\": 1\n            },\n            {\n                \"name\": \"question\",\n                \"users\": [\n                    \"W333333\"\n                ],\n                \"count\": 1\n            }\n        ],\n        \"permalink\": \"https://xxx.slack.com/archives/C123456/p1648602352215969\"\n    },\n    \"channel\": \"C123ABC456\"\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "reactions",
      "desc": "",
      "query": [
        {
          "name": "reactions.list",
          "desc": "Lists reactions made by a user.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "count",
              "type": "integer",
              "description": "Number of items to return per page.",
              "required": false,
              "example": "10020"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Parameter for pagination. Set cursor equal to the next_cursor attribute returned by the previous request's response_metadata. This parameter is optional, but pagination is mandatory: the default value simply fetches the first \"page\" of the collection. See pagination for more details.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "full",
              "type": "boolean",
              "description": "If true always return the complete reaction list.",
              "required": false,
              "example": "true"
            },
            {
              "name": "limit",
              "type": "integer",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached.",
              "required": false,
              "example": "020"
            },
            {
              "name": "page",
              "type": "integer",
              "description": "Page number of results to return.",
              "required": false,
              "example": "12"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id to list reactions in, required if org token is used",
              "required": false,
              "example": "T1234567890"
            },
            {
              "name": "user",
              "type": "string",
              "description": "Show reactions made by this user. Defaults to the authed user.",
              "required": false,
              "example": "W1234567890"
            }
          ],
          "output": [
            "{\n    \"items\": [\n        {\n            \"type\": \"message\",\n            \"channel\": \"C123ABC456\",\n            \"message\": {\n                \"bot_id\": \"B123ABC456\",\n                \"reactions\": [\n                    {\n                        \"count\": 1,\n                        \"name\": \"robot_face\",\n                        \"users\": [\n                            \"U123ABC456\"\n                        ]\n                    }\n                ],\n                \"subtype\": \"bot_message\",\n                \"text\": \"Hello from Python! :tada:\",\n                \"ts\": \"1507849573.000090\",\n                \"username\": \"Shipit Notifications\"\n            }\n        },\n        {\n            \"comment\": {\n                \"type\": \"file_comment\",\n                \"comment\": \"This is a file comment\",\n                \"created\": 1508286096,\n                \"id\": \"Fc123ABC456\",\n                \"reactions\": [\n                    {\n                        \"count\": 1,\n                        \"name\": \"white_check_mark\",\n                        \"users\": [\n                            \"U123ABC456\"\n                        ]\n                    }\n                ],\n                \"timestamp\": 1508286096,\n                \"user\": \"U123ABC456\"\n            },\n            \"file\": {\n                \"channels\": [\n                    \"C123ABC456\"\n                ],\n                \"comments_count\": 1,\n                \"created\": 1507850315,\n                \"reactions\": [\n                    {\n                        \"count\": 1,\n                        \"name\": \"stuck_out_tongue_winking_eye\",\n                        \"users\": [\n                            \"U123ABC456\"\n                        ]\n                    }\n                ],\n                \"title\": \"computer.gif\",\n                \"user\": \"U123ABC456\",\n                \"username\": \"\"\n            }\n        },\n        {\n            \"file\": {\n                \"channels\": [\n                    \"C123ABC456\"\n                ],\n                \"comments_count\": 1,\n                \"created\": 1507850315,\n                \"id\": \"F123ABC456\",\n                \"name\": \"computer.gif\",\n                \"reactions\": [\n                    {\n                        \"count\": 1,\n                        \"name\": \"stuck_out_tongue_winking_eye\",\n                        \"users\": [\n                            \"U123ABC456\"\n                        ]\n                    }\n                ],\n                \"size\": 1639034,\n                \"title\": \"computer.gif\",\n                \"user\": \"U123ABC456\",\n                \"username\": \"\"\n            },\n            \"type\": \"file\"\n        }\n    ],\n    \"ok\": true,\n    \"response_metadata\": {\n        \"next_cursor\": \"dGVhbTpDMUg5UkVTR0w=\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "reactions",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "reactions.remove",
          "desc": "Removes a reaction from an item.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "name",
              "type": "string",
              "description": "Reaction (emoji) name.",
              "required": true,
              "example": "thumbsup"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel where the message to remove reaction from was posted.",
              "required": false,
              "example": "C1234567890"
            },
            {
              "name": "file",
              "type": "string",
              "description": "File to remove reaction from.",
              "required": false,
              "example": "F1234567890"
            },
            {
              "name": "file_comment",
              "type": "string",
              "description": "File comment to remove reaction from.",
              "required": false,
              "example": "Fc1234567890"
            },
            {
              "name": "timestamp",
              "type": "string",
              "description": "Timestamp of the message to remove reaction from.",
              "required": false,
              "example": "1234567890.123456"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"error\": \"no_reaction\",\n    \"ok\": false\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "team",
      "desc": "",
      "query": [
        {
          "name": "team.billing.info",
          "desc": "Reads a workspace's billing plan information.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"plan\": \"free\"\n}{\n    \"ok\": false,\n    \"error\": \"invalid_team\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "team",
      "desc": "",
      "query": [
        {
          "name": "team.info",
          "desc": "Gets information about the current team.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "domain",
              "type": "string",
              "description": "Query by domain instead of team (only when team is null). This only works for domains in the same enterprise as the querying team token. This also expects the domain to belong to a team and not the enterprise itself.",
              "required": false,
              "example": ""
            },
            {
              "name": "team",
              "type": "string",
              "description": "Team to get info about; if omitted, will return information about the current team.",
              "required": false,
              "example": "T1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"team\": {\n        \"id\": \"T12345\",\n        \"name\": \"My Team\",\n        \"domain\": \"example\",\n        \"email_domain\": \"example.com\",\n        \"icon\": {\n            \"image_34\": \"https://...\",\n            \"image_44\": \"https://...\",\n            \"image_68\": \"https://...\",\n            \"image_88\": \"https://...\",\n            \"image_102\": \"https://...\",\n            \"image_132\": \"https://...\",\n            \"image_default\": true\n        },\n        \"enterprise_id\": \"E1234A12AB\",\n        \"enterprise_name\": \"Umbrella Corporation\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "team",
      "desc": "",
      "query": [
        {
          "name": "team.preferences.list",
          "desc": "Retrieve a list of a workspace's team preferences.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"allow_message_deletion\": true,\n    \"display_real_names\": false,\n    \"disable_file_uploads\": \"disable_all\",\n    \"msg_edit_window_mins\": 25,\n    \"who_can_post_general\": \"everyone\"\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "team",
      "desc": "",
      "query": [
        {
          "name": "team.profile.get",
          "desc": "Retrieve a team's profile.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "visibility",
              "type": "string",
              "description": "Filter by visibility.",
              "required": false,
              "example": "all"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"profile\": {\n        \"fields\": [\n            {\n                \"id\": \"111111ABC\",\n                \"ordering\": 0,\n                \"label\": \"Phone extension\",\n                \"hint\": \"Enter the extension to reach your desk\",\n                \"type\": \"text\",\n                \"possible_values\": null,\n                \"options\": {\n                    \"is_scim\": true,\n                    \"is_protected\": true\n                },\n                \"is_hidden\": false,\n                \"section_id\": \"123ABC\"\n            },\n            {\n                \"id\": \"222222ABC\",\n                \"ordering\": 1,\n                \"label\": \"Date of birth\",\n                \"hint\": \"When you were born\",\n                \"type\": \"date\",\n                \"possible_values\": null,\n                \"options\": {\n                    \"is_scim\": true,\n                    \"is_protected\": true\n                },\n                \"is_hidden\": true,\n                \"section_id\": \"123ABC\"\n            },\n            {\n                \"id\": \"333333ABC\",\n                \"ordering\": 2,\n                \"label\": \"House\",\n                \"hint\": \"Put on the sorting hat\",\n                \"type\": \"options_list\",\n                \"possible_values\": [\n                    \"Gryffindor\",\n                    \"Hufflepuff\",\n                    \"Ravenclaw\",\n                    \"Slytherin\"\n                ],\n                \"options\": {\n                    \"is_scim\": false,\n                    \"is_protected\": false\n                },\n                \"is_hidden\": false,\n                \"section_id\": \"456DEF\"\n            }\n        ],\n        \"sections\": [\n            {\n                \"id\": \"123ABC\",\n                \"team_id\": \"T123456\",\n                \"section_type\": \"contact\",\n                \"label\": \"Contact Information\",\n                \"order\": 1,\n                \"is_hidden\": true\n            },\n            {\n                \"id\": \"456DEF\",\n                \"team_id\": \"T123456\",\n                \"section_type\": \"custom\",\n                \"label\": \"About Me\",\n                \"order\": 2,\n                \"is_hidden\": true\n            }\n        ]\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "usergroups",
      "desc": "",
      "query": [
        {
          "name": "usergroups.list",
          "desc": "List all User Groups for a team.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "include_count",
              "type": "boolean",
              "description": "Include the number of users in each User Group.",
              "required": false,
              "example": "true"
            },
            {
              "name": "include_disabled",
              "type": "boolean",
              "description": "Include disabled User Groups.",
              "required": false,
              "example": "true"
            },
            {
              "name": "include_users",
              "type": "boolean",
              "description": "Include the list of users for each User Group.",
              "required": false,
              "example": "true"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id to list user groups in, required if org token is used",
              "required": false,
              "example": "T1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"usergroups\": [\n        {\n            \"id\": \"S0614TZR7\",\n            \"team_id\": \"T060RNRCH\",\n            \"is_usergroup\": true,\n            \"name\": \"Team Admins\",\n            \"description\": \"A group of all Administrators on your team.\",\n            \"handle\": \"admins\",\n            \"is_external\": false,\n            \"date_create\": 1446598059,\n            \"date_update\": 1446670362,\n            \"date_delete\": 0,\n            \"auto_type\": \"admin\",\n            \"created_by\": \"USLACKBOT\",\n            \"updated_by\": \"U060RNRCZ\",\n            \"deleted_by\": null,\n            \"prefs\": {\n                \"channels\": [],\n                \"groups\": []\n            },\n            \"user_count\": \"2\"\n        },\n        {\n            \"id\": \"S06158AV7\",\n            \"team_id\": \"T060RNRCH\",\n            \"is_usergroup\": true,\n            \"name\": \"Team Owners\",\n            \"description\": \"A group of all Owners on your team.\",\n            \"handle\": \"owners\",\n            \"is_external\": false,\n            \"date_create\": 1446678371,\n            \"date_update\": 1446678371,\n            \"date_delete\": 0,\n            \"auto_type\": \"owner\",\n            \"created_by\": \"USLACKBOT\",\n            \"updated_by\": \"USLACKBOT\",\n            \"deleted_by\": null,\n            \"prefs\": {\n                \"channels\": [],\n                \"groups\": []\n            },\n            \"user_count\": \"1\"\n        },\n        {\n            \"id\": \"S0615G0KT\",\n            \"team_id\": \"T060RNRCH\",\n            \"is_usergroup\": true,\n            \"name\": \"Marketing Team\",\n            \"description\": \"Marketing gurus, PR experts and product advocates.\",\n            \"handle\": \"marketing-team\",\n            \"is_external\": false,\n            \"date_create\": 1446746793,\n            \"date_update\": 1446747767,\n            \"date_delete\": 1446748865,\n            \"auto_type\": null,\n            \"created_by\": \"U060RNRCZ\",\n            \"updated_by\": \"U060RNRCZ\",\n            \"deleted_by\": null,\n            \"prefs\": {\n                \"channels\": [],\n                \"groups\": []\n            },\n            \"user_count\": \"0\"\n        }\n    ]\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "users",
      "desc": "",
      "query": [
        {
          "name": "users.conversations",
          "desc": "List conversations the calling user may access.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "exclude_archived",
              "type": "boolean",
              "description": "Set to true to exclude archived channels from the list",
              "required": false,
              "example": "falsetrue"
            },
            {
              "name": "limit",
              "type": "number",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer with a max value of 999.",
              "required": false,
              "example": "10020"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id to list conversations in, required if org token is used",
              "required": false,
              "example": "T1234567890"
            },
            {
              "name": "types",
              "type": "string",
              "description": "Mix and match channel types by providing a comma-separated list of any combination of public_channel, private_channel, mpim, im",
              "required": false,
              "example": "public_channelim,mpim"
            },
            {
              "name": "user",
              "type": "string",
              "description": "Browse conversations by a specific user ID's membership. Non-public channels are restricted to those where the calling user shares membership.",
              "required": false,
              "example": "W0B2345D"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channels\": [\n        {\n            \"id\": \"C012AB3CD\",\n            \"name\": \"general\",\n            \"is_channel\": true,\n            \"is_group\": false,\n            \"is_im\": false,\n            \"created\": 1449252889,\n            \"creator\": \"U012A3CDE\",\n            \"is_archived\": false,\n            \"is_general\": true,\n            \"unlinked\": 0,\n            \"name_normalized\": \"general\",\n            \"is_shared\": false,\n            \"is_ext_shared\": false,\n            \"is_org_shared\": false,\n            \"pending_shared\": [],\n            \"is_pending_ext_shared\": false,\n            \"is_private\": false,\n            \"is_mpim\": false,\n            \"topic\": {\n                \"value\": \"Company-wide announcements and work-based matters\",\n                \"creator\": \"\",\n                \"last_set\": 0\n            },\n            \"purpose\": {\n                \"value\": \"This channel is for team-wide communication and announcements. All team members are in this channel.\",\n                \"creator\": \"\",\n                \"last_set\": 0\n            },\n            \"previous_names\": []\n        },\n        {\n            \"id\": \"C061EG9T2\",\n            \"name\": \"random\",\n            \"is_channel\": true,\n            \"is_group\": false,\n            \"is_im\": false,\n            \"created\": 1449252889,\n            \"creator\": \"U061F7AUR\",\n            \"is_archived\": false,\n            \"is_general\": false,\n            \"unlinked\": 0,\n            \"name_normalized\": \"random\",\n            \"is_shared\": false,\n            \"is_ext_shared\": false,\n            \"is_org_shared\": false,\n            \"pending_shared\": [],\n            \"is_pending_ext_shared\": false,\n            \"is_private\": false,\n            \"is_mpim\": false,\n            \"topic\": {\n                \"value\": \"Non-work banter and water cooler conversation\",\n                \"creator\": \"\",\n                \"last_set\": 0\n            },\n            \"purpose\": {\n                \"value\": \"A place for non-work-related flimflam, faffing, hodge-podge or jibber-jabber you'd prefer to keep out of more focused work-related channels.\",\n                \"creator\": \"\",\n                \"last_set\": 0\n            },\n            \"previous_names\": []\n        }\n    ],\n    \"response_metadata\": {\n        \"next_cursor\": \"dGVhbTpDMDYxRkE1UEI=\"\n    }\n}{\n    \"ok\": true,\n    \"channels\": [\n        {\n            \"id\": \"G0AKFJBEU\",\n            \"name\": \"mpdm-mr.banks--slactions-jackson--beforebot-1\",\n            \"is_channel\": false,\n            \"is_group\": true,\n            \"is_im\": false,\n            \"created\": 1493657761,\n            \"creator\": \"U061F7AUR\",\n            \"is_archived\": false,\n            \"is_general\": false,\n            \"unlinked\": 0,\n            \"name_normalized\": \"mpdm-mr.banks--slactions-jackson--beforebot-1\",\n            \"is_shared\": false,\n            \"is_ext_shared\": false,\n            \"is_org_shared\": false,\n            \"pending_shared\": [],\n            \"is_pending_ext_shared\": false,\n            \"is_private\": true,\n            \"is_mpim\": true,\n            \"is_open\": true,\n            \"topic\": {\n                \"value\": \"Group messaging\",\n                \"creator\": \"U061F7AUR\",\n                \"last_set\": 1493657761\n            },\n            \"purpose\": {\n                \"value\": \"Group messaging with: @mr.banks @slactions-jackson @beforebot\",\n                \"creator\": \"U061F7AUR\",\n                \"last_set\": 1493657761\n            },\n            \"priority\": 0\n        },\n        {\n            \"id\": \"D0C0F7S8Y\",\n            \"created\": 1498500348,\n            \"is_im\": true,\n            \"is_org_shared\": false,\n            \"user\": \"U0BS9U4SV\",\n            \"is_user_deleted\": false,\n            \"priority\": 0\n        },\n        {\n            \"id\": \"D0BSHH4AD\",\n            \"created\": 1498511030,\n            \"is_im\": true,\n            \"is_org_shared\": false,\n            \"user\": \"U0C0NS9HN\",\n            \"is_user_deleted\": false,\n            \"priority\": 0\n        }\n    ],\n    \"response_metadata\": {\n        \"next_cursor\": \"aW1faWQ6RDBCSDk1RExI\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "users",
      "desc": "",
      "query": [
        {
          "name": "users.getPresence",
          "desc": "Gets user presence information.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "user",
              "type": "string",
              "description": "User to get presence info on. Defaults to the authed user.",
              "required": false,
              "example": "W1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"presence\": \"active\"\n}{\n    \"ok\": true,\n    \"presence\": \"active\",\n    \"online\": true,\n    \"auto_away\": false,\n    \"manual_away\": false,\n    \"connection_count\": 1,\n    \"last_activity\": 1419027078\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "users",
      "desc": "",
      "query": [
        {
          "name": "users.info",
          "desc": "Gets information about a user.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "user",
              "type": "string",
              "description": "User to get info on",
              "required": true,
              "example": "W1234567890"
            },
            {
              "name": "include_locale",
              "type": "boolean",
              "description": "Set this to true to receive the locale for this user. Defaults to false",
              "required": false,
              "example": "true"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"user\": {\n        \"id\": \"W012A3CDE\",\n        \"team_id\": \"T012AB3C4\",\n        \"name\": \"spengler\",\n        \"deleted\": false,\n        \"color\": \"9f69e7\",\n        \"real_name\": \"Egon Spengler\",\n        \"tz\": \"America/Los_Angeles\",\n        \"tz_label\": \"Pacific Daylight Time\",\n        \"tz_offset\": -25200,\n        \"profile\": {\n            \"avatar_hash\": \"ge3b51ca72de\",\n            \"status_text\": \"Print is dead\",\n            \"status_emoji\": \":books:\",\n            \"real_name\": \"Egon Spengler\",\n            \"display_name\": \"spengler\",\n            \"real_name_normalized\": \"Egon Spengler\",\n            \"display_name_normalized\": \"spengler\",\n            \"email\": \"spengler@ghostbusters.example.com\",\n            \"image_original\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"team\": \"T012AB3C4\"\n        },\n        \"is_admin\": true,\n        \"is_owner\": false,\n        \"is_primary_owner\": false,\n        \"is_restricted\": false,\n        \"is_ultra_restricted\": false,\n        \"is_bot\": false,\n        \"updated\": 1502138686,\n        \"is_app_user\": false,\n        \"has_2fa\": false\n    }\n}{\n    \"ok\": false,\n    \"error\": \"user_not_found\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "users",
      "desc": "",
      "query": [
        {
          "name": "users.list",
          "desc": "Lists all users in a Slack team.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "cursor",
              "type": "string",
              "description": "Paginate through collections of data by setting the cursor parameter to a next_cursor attribute returned by a previous request's response_metadata. Default value fetches the first \"page\" of the collection. See pagination for more detail.",
              "required": false,
              "example": "dXNlcjpVMDYxTkZUVDI="
            },
            {
              "name": "include_locale",
              "type": "boolean",
              "description": "Set this to true to receive the locale for users. Defaults to false",
              "required": false,
              "example": "true"
            },
            {
              "name": "limit",
              "type": "number",
              "description": "The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached. Providing no limit value will result in Slack attempting to deliver you the entire result set. If the collection is too large you may experience limit_required or HTTP 500 errors.",
              "required": false,
              "example": "020"
            },
            {
              "name": "team_id",
              "type": "string",
              "description": "encoded team id to list users in, required if org token is used",
              "required": false,
              "example": "T1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"members\": [\n        {\n            \"id\": \"W012A3CDE\",\n            \"team_id\": \"T012AB3C4\",\n            \"name\": \"spengler\",\n            \"deleted\": false,\n            \"color\": \"9f69e7\",\n            \"real_name\": \"spengler\",\n            \"tz\": \"America/Los_Angeles\",\n            \"tz_label\": \"Pacific Daylight Time\",\n            \"tz_offset\": -25200,\n            \"profile\": {\n                \"avatar_hash\": \"ge3b51ca72de\",\n                \"status_text\": \"Print is dead\",\n                \"status_emoji\": \":books:\",\n                \"real_name\": \"Egon Spengler\",\n                \"display_name\": \"spengler\",\n                \"real_name_normalized\": \"Egon Spengler\",\n                \"display_name_normalized\": \"spengler\",\n                \"email\": \"spengler@ghostbusters.example.com\",\n                \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n                \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n                \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n                \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n                \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n                \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n                \"team\": \"T012AB3C4\"\n            },\n            \"is_admin\": true,\n            \"is_owner\": false,\n            \"is_primary_owner\": false,\n            \"is_restricted\": false,\n            \"is_ultra_restricted\": false,\n            \"is_bot\": false,\n            \"updated\": 1502138686,\n            \"is_app_user\": false,\n            \"has_2fa\": false\n        },\n        {\n            \"id\": \"W07QCRPA4\",\n            \"team_id\": \"T0G9PQBBK\",\n            \"name\": \"glinda\",\n            \"deleted\": false,\n            \"color\": \"9f69e7\",\n            \"real_name\": \"Glinda Southgood\",\n            \"tz\": \"America/Los_Angeles\",\n            \"tz_label\": \"Pacific Daylight Time\",\n            \"tz_offset\": -25200,\n            \"profile\": {\n                \"avatar_hash\": \"8fbdd10b41c6\",\n                \"image_24\": \"https://a.slack-edge.com...png\",\n                \"image_32\": \"https://a.slack-edge.com...png\",\n                \"image_48\": \"https://a.slack-edge.com...png\",\n                \"image_72\": \"https://a.slack-edge.com...png\",\n                \"image_192\": \"https://a.slack-edge.com...png\",\n                \"image_512\": \"https://a.slack-edge.com...png\",\n                \"image_1024\": \"https://a.slack-edge.com...png\",\n                \"image_original\": \"https://a.slack-edge.com...png\",\n                \"first_name\": \"Glinda\",\n                \"last_name\": \"Southgood\",\n                \"title\": \"Glinda the Good\",\n                \"phone\": \"\",\n                \"skype\": \"\",\n                \"real_name\": \"Glinda Southgood\",\n                \"real_name_normalized\": \"Glinda Southgood\",\n                \"display_name\": \"Glinda the Fairly Good\",\n                \"display_name_normalized\": \"Glinda the Fairly Good\",\n                \"email\": \"glenda@south.oz.coven\"\n            },\n            \"is_admin\": true,\n            \"is_owner\": false,\n            \"is_primary_owner\": false,\n            \"is_restricted\": false,\n            \"is_ultra_restricted\": false,\n            \"is_bot\": false,\n            \"updated\": 1480527098,\n            \"has_2fa\": false\n        }\n    ],\n    \"cache_ts\": 1498777272,\n    \"response_metadata\": {\n        \"next_cursor\": \"dXNlcjpVMEc5V0ZYTlo=\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"invalid_cursor\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "users",
      "desc": "",
      "query": [
        {
          "name": "users.lookupByEmail",
          "desc": "Find a user with an email address.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "email",
              "type": "string",
              "description": "An email address belonging to a user in the workspace",
              "required": true,
              "example": "spengler@ghostbusters.example.com"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"user\": {\n        \"id\": \"W012A3CDE\",\n        \"team_id\": \"T012AB3C4\",\n        \"name\": \"spengler\",\n        \"deleted\": false,\n        \"color\": \"9f69e7\",\n        \"real_name\": \"Egon Spengler\",\n        \"tz\": \"America/Los_Angeles\",\n        \"tz_label\": \"Pacific Daylight Time\",\n        \"tz_offset\": -25200,\n        \"profile\": {\n            \"avatar_hash\": \"ge3b51ca72de\",\n            \"status_text\": \"Print is dead\",\n            \"status_emoji\": \":books:\",\n            \"real_name\": \"Egon Spengler\",\n            \"display_name\": \"spengler\",\n            \"real_name_normalized\": \"Egon Spengler\",\n            \"display_name_normalized\": \"spengler\",\n            \"email\": \"spengler@ghostbusters.example.com\",\n            \"image_24\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_32\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_48\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_72\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_192\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"image_512\": \"https://.../avatar/e3b51ca72dee4ef87916ae2b9240df50.jpg\",\n            \"team\": \"T012AB3C4\"\n        },\n        \"is_admin\": true,\n        \"is_owner\": false,\n        \"is_primary_owner\": false,\n        \"is_restricted\": false,\n        \"is_ultra_restricted\": false,\n        \"is_bot\": false,\n        \"updated\": 1502138686,\n        \"is_app_user\": false,\n        \"has_2fa\": false\n    }\n}{\n    \"ok\": false,\n    \"error\": \"users_not_found\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "users",
      "desc": "",
      "query": [
        {
          "name": "users.profile.get",
          "desc": "Retrieve a user's profile information, including their custom status.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "include_labels",
              "type": "boolean",
              "description": "Include labels for each ID in custom profile fields. Using this parameter will heavily rate-limit your requests and is not recommended.",
              "required": false,
              "example": "falsetrue"
            },
            {
              "name": "user",
              "type": "string",
              "description": "User to retrieve profile info for",
              "required": false,
              "example": "W1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"profile\": {\n        \"title\": \"Head of Coffee Production\",\n        \"phone\": \"\",\n        \"skype\": \"\",\n        \"real_name\": \"John Smith\",\n        \"real_name_normalized\": \"John Smith\",\n        \"display_name\": \"john\",\n        \"display_name_normalized\": \"john\",\n        \"fields\": {\n            \"Xf0111111\": {\n                \"value\": \"Barista\",\n                \"alt\": \"\"\n            },\n            \"Xf0222222\": {\n                \"value\": \"2022-04-11\",\n                \"alt\": \"\"\n            },\n            \"Xf0333333\": {\n                \"value\": \"https://example.com\",\n                \"alt\": \"\"\n            }\n        },\n        \"status_text\": \"Watching cold brew steep\",\n        \"status_emoji\": \":coffee:\",\n        \"status_emoji_display_info\": [],\n        \"status_expiration\": 0,\n        \"avatar_hash\": \"123xyz\",\n        \"start_date\": \"2022-03-21\",\n        \"email\": \"johnsmith@example.com\",\n        \"pronouns\": \"they/them/theirs\",\n        \"huddle_state\": \"default_unset\",\n        \"huddle_state_expiration_ts\": 0,\n        \"first_name\": \"john\",\n        \"last_name\": \"smith\",\n        \"image_24\": \"https://.../...-24.png\",\n        \"image_32\": \"https://.../...-32.png\",\n        \"image_48\": \"https://.../...-48.png\",\n        \"image_72\": \"https://.../...-72.png\",\n        \"image_192\": \"https://.../....-192png\",\n        \"image_512\": \"https://.../...-512.png\"\n    }\n}{\n    \"ok\": false,\n    \"error\": \"user_not_found\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "users",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "users.setPresence",
          "desc": "Manually sets user presence.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "presence",
              "type": "string",
              "description": "Either auto or away",
              "required": true,
              "example": "away"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "apps",
      "desc": "",
      "query": [
        {
          "name": "apps.uninstall",
          "desc": "Uninstalls your app from a workspace.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "client_id",
              "type": "string",
              "description": "Issued when you created your application.",
              "required": true,
              "example": "56579136444.26251006572"
            },
            {
              "name": "client_secret",
              "type": "string",
              "description": "Issued when you created your application.",
              "required": true,
              "example": "f25b5ceaf8a3c2a2c4f52bb4f0b0499e"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "chat",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "chat.delete",
          "desc": "Deletes a message.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "Channel containing the message to be deleted.",
              "required": true,
              "example": "C1234567890"
            },
            {
              "name": "ts",
              "type": "string",
              "description": "Timestamp of the message to be deleted.",
              "required": true,
              "example": "\"1405894322.002768\""
            },
            {
              "name": "as_user",
              "type": "boolean",
              "description": "Pass true to delete the message as the authed user with chat:write:user scope. Bot users in this context are considered authed users. If unused or false, the message will be deleted with chat:write:bot scope.",
              "required": false,
              "example": "true"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"channel\": \"C123ABC456\",\n    \"ts\": \"1401383885.000061\"\n}{\n    \"error\": \"message_not_found\",\n    \"ok\": false\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.archive",
          "desc": "Archives a conversation.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "",
              "description": "ID of conversation to archive",
              "required": true,
              "example": "C1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"channel_not_found\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.leave",
          "desc": "Leaves a conversation.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "",
              "description": "Conversation to leave",
              "required": true,
              "example": "C1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": true,\n    \"not_in_channel\": true\n}{\n    \"ok\": false,\n    \"error\": \"cant_leave_general\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "conversations",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "conversations.unarchive",
          "desc": "Reverses conversation archival.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "channel",
              "type": "string",
              "description": "ID of conversation to unarchive",
              "required": true,
              "example": "C1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"channel_not_found\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "files.delete",
          "desc": "Deletes a file.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "file",
              "type": "string",
              "description": "ID of file to delete.",
              "required": true,
              "example": "F1234567890"
            }
          ],
          "output": [
            "{\n    \"ok\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "monitor": []
    },
    {
      "name": "files",
      "desc": "",
      "query": [
        {
          "name": "files.remote.remove",
          "desc": "Remove a remote file.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "external_id",
              "type": "string",
              "description": "Creator defined GUID for the file.",
              "required": false,
              "example": "123456"
            },
            {
              "name": "file",
              "type": "string",
              "description": "Specify a file by providing its ID.",
              "required": false,
              "example": "F2147483862"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "auth",
      "desc": "",
      "query": [
        {
          "name": "auth.revoke",
          "desc": "Revokes a token.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "test",
              "type": "boolean",
              "description": "Setting this parameter to 1 triggers a testing mode where the specified token will not actually be revoked.",
              "required": false,
              "example": "true"
            }
          ],
          "output": [
            "{\n    \"ok\": true,\n    \"revoked\": true\n}{\n    \"ok\": false,\n    \"error\": \"invalid_auth\"\n}"
          ]
        }
      ],
      "action": [],
      "monitor": []
    },
    {
      "name": "calls",
      "desc": "",
      "query": [],
      "action": [
        {
          "name": "calls.end",
          "desc": "Ends a Call.",
          "input": [
            {
              "name": "token",
              "type": "token",
              "description": "Authentication token bearing required scopes. Tokens should be passed as an HTTP Authorization header or alternatively, as a POST parameter.",
              "required": true,
              "example": "xxxx-xxxxxxxxx-xxxx"
            },
            {
              "name": "id",
              "type": "string",
              "description": "id returned when registering the call using the calls.add method.",
              "required": true,
              "example": "R0E69JAIF"
            },
            {
              "name": "duration",
              "type": "integer",
              "description": "Call duration in seconds",
              "required": false,
              "example": "1800"
            }
          ],
          "output": [
            ""
          ]
        }
      ],
      "monitor": []
    }
  ]
}